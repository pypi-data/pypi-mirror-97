{
  "id": "http://openinterconnect.org/iotdatamodels/schemas/oic.r.openlevel-schema.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "description": "This Resource describes how open or ajar an entity such as a window, door, blind or shutter is. The Property \"openLevel\" can be read (acting as a sensor). The \"openLevel\" can also be set (acting as an actuator). The \"openLevel\" is device dependent across the range provided. When the Property \"range\" is omitted then 0 to 100 is assumed where 0 means closed, 100 means fully open. If a \"range\" is provided then the lower bound=closed, upper bound=open.If Property \"step\" is present then it represents the increment between possible values; if not provided 1 is assumed. Copyright (c) 2016, 2017 Open Connectivity Foundation, Inc. All rights reserved.",
  "description_ru": "Этот ресурс описывает, насколько открыты или приоткрыты такие объекты, как окно, дверь, штора или ставня. Свойство openLevel можно прочитать (действует как датчик). Также можно установить «openLevel» (действуя как активатор). «OpenLevel» зависит от устройства во всем предоставленном диапазоне. Если свойство «диапазон» опущено, предполагается от 0 до 100, где 0 означает закрытый, 100 означает полностью открытый. Если указан «диапазон», то нижняя граница = закрыта, верхняя граница = открыта. Если свойство «шаг» присутствует, то оно представляет собой приращение между возможными значениями; если не указано, предполагается 1.",
  "title": "Open level",
  "definitions": {
    "OpenLevel": {
      "properties": {
        "rt": {
          "description": "The Resource Type.",
          "items": {
            "maxLength": 64,
            "type": "string",
            "enum": [
              "oic.r.openlevel"
            ]
          },
          "minItems": 1,
          "uniqueItems": true,
          "readOnly": true,
          "type": "array"
        },
        "openLevel": {
          "description": "How open or ajar the entity is.",
          "type": "integer"
        },
        "n": {
          "$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.common.properties.core-schema.json#/definitions/n"
        },
        "id": {
          "$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.common.properties.core-schema.json#/definitions/id"
        },
        "range": {
          "$ref": "https://openconnectivityfoundation.github.io/IoTDataModels/schemas/oic.baseresource.properties-schema.json#/definitions/range_integer"
        },
        "step": {
          "$ref": "https://openconnectivityfoundation.github.io/IoTDataModels/schemas/oic.baseresource.properties-schema.json#/definitions/step_integer"
        },
        "if": {
          "description": "The OCF Interface set supported by this Resource.",
          "items": {
            "enum": [
              "oic.if.a",
              "oic.if.baseline"
            ],
            "type": "string"
          },
          "minItems": 2,
          "uniqueItems": true,
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object",
      "required": [
        "openLevel"
      ]
    }
  },
  "type": "object",
  "$ref": "#/definitions/OpenLevel",
  "required": [
    "OpenLevel"
  ]
}
