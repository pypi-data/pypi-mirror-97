{
    "body": "<div class=\"section\" id=\"api-reference\">\n<span id=\"referencepage\"></span><h1>API Reference<a class=\"headerlink\" href=\"#api-reference\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>You can find automatically generated documentation for each module in the <code class=\"docutils literal notranslate\"><span class=\"pre\">astLib</span></code> package below.</p>\n<div class=\"section\" id=\"module-astLib.astCalc\">\n<span id=\"astcalc\"></span><h2>astCalc<a class=\"headerlink\" href=\"#module-astLib.astCalc\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Module for performing common calculations.</p>\n<ol class=\"loweralpha simple\" start=\"3\">\n<li><p>2007-2011 Matt Hilton</p></li>\n</ol>\n<ol class=\"loweralpha simple\" start=\"3\">\n<li><p>2013-2014 Matt Hilton &amp; Steven Boada</p></li>\n</ol>\n<p>The focus in this module is at present on calculations of distances in a given\ncosmology. The parameters for the cosmological model are set using the\nvariables OMEGA_M0, OMEGA_L0, OMEGA_R0, H0 in the module namespace.</p>\n<dl class=\"py data\">\n<dt id=\"astLib.astCalc.C_LIGHT\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">C_LIGHT</code><em class=\"property\"> = 300000.0</em><a class=\"headerlink\" href=\"#astLib.astCalc.C_LIGHT\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The speed of light in km/s.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.DeltaVz\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">DeltaVz</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">z</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.DeltaVz\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the density contrast of a virialised region S{Delta}V(z),\nassuming a S{Lambda}CDM-type flat cosmology. See, e.g., Bryan &amp; Norman\n1998 (ApJ, 495, 80).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>z</strong> (<em>float</em>) \u2013 redshift</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>density contrast of a virialised region at redshift z</p>\n</dd>\n<dt class=\"field-even\">Note</dt>\n<dd class=\"field-even\"><p>If OMEGA_M0+OMEGA_L0 is not equal to 1, this routine exits and</p>\n</dd>\n</dl>\n<p>prints an error\nmessage to the console.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.Ez\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">Ez</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">z</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.Ez\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the value of E(z), which describes evolution of the Hubble\nparameter with redshift, at redshift z for the current set of cosmological\nparameters. See, e.g., Bryan &amp; Norman 1998 (ApJ, 495, 80).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>z</strong> (<em>float</em>) \u2013 redshift</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>value of E(z) at redshift z</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.Ez2\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">Ez2</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">z</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.Ez2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the value of E(z)^2, which describes evolution of the Hubble\nparameter with redshift, at redshift z for the current set of cosmological\nparameters. See, e.g., Bryan &amp; Norman 1998 (ApJ, 495, 80).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>z</strong> (<em>float</em>) \u2013 redshift</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>value of E(z)^2 at redshift z</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"astLib.astCalc.H0\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">H0</code><em class=\"property\"> = 70.0</em><a class=\"headerlink\" href=\"#astLib.astCalc.H0\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The Hubble parameter (in km/s/Mpc) at z=0.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"astLib.astCalc.OMEGA_L0\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">OMEGA_L0</code><em class=\"property\"> = 0.7</em><a class=\"headerlink\" href=\"#astLib.astCalc.OMEGA_L0\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The dark energy density (in the form of a cosmological constant) at z=0.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"astLib.astCalc.OMEGA_M0\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">OMEGA_M0</code><em class=\"property\"> = 0.3</em><a class=\"headerlink\" href=\"#astLib.astCalc.OMEGA_M0\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The matter density parameter at z=0.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"astLib.astCalc.OMEGA_R0\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">OMEGA_R0</code><em class=\"property\"> = 8.24e-05</em><a class=\"headerlink\" href=\"#astLib.astCalc.OMEGA_R0\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The radiation density at z=0 (note this is only used currently in calculation of <a class=\"reference internal\" href=\"#astLib.astCalc.Ez\" title=\"astLib.astCalc.Ez\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Ez</span></code></a>).</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.OmegaLz\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">OmegaLz</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">z</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.OmegaLz\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the dark energy density of the universe at redshift z.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>z</strong> (<em>float</em>) \u2013 redshift</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>dark energy density of universe at redshift z</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.OmegaMz\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">OmegaMz</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">z</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.OmegaMz\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the matter density of the universe at redshift z. See, e.g.,\nBryan &amp; Norman 1998 (ApJ, 495, 80).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>z</strong> (<em>float</em>) \u2013 redshift</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>matter density of universe at redshift z</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.OmegaRz\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">OmegaRz</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">z</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.OmegaRz\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the radiation density of the universe at redshift z.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>z</strong> (<em>float</em>) \u2013 redshift</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>radiation density of universe at redshift z</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.RVirialXRayCluster\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">RVirialXRayCluster</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">kT</span></em>, <em class=\"sig-param\"><span class=\"n\">z</span></em>, <em class=\"sig-param\"><span class=\"n\">betaT</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.RVirialXRayCluster\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the virial radius (in Mpc) of a galaxy cluster at redshift z\nwith X-ray temperature kT, assuming self-similar evolution and a flat\ncosmology. See Arnaud et al. 2002 (A&amp;A, 389, 1) and Bryan &amp; Norman 1998\n(ApJ, 495, 80). A flat S{Lambda}CDM-type flat cosmology is assumed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>kT</strong> (<em>float</em>) \u2013 cluster X-ray temperature in keV</p></li>\n<li><p><strong>z</strong> (<em>float</em>) \u2013 redshift</p></li>\n<li><p><strong>betaT</strong> (<em>float</em>) \u2013 the normalisation of the virial relation, for which Evrard et</p></li>\n</ul>\n</dd>\n</dl>\n<p>al. 1996 (ApJ,469, 494) find a value of 1.05\n:rtype: float\n:return: virial radius of cluster in Mpc</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Note</dt>\n<dd class=\"field-odd\"><p>If OMEGA_M0+OMEGA_L0 is not equal to 1, this routine exits and</p>\n</dd>\n</dl>\n<p>prints an error message to the console.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.absMag\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">absMag</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">appMag</span></em>, <em class=\"sig-param\"><span class=\"n\">distMpc</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.absMag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the absolute magnitude of an object at given luminosity\ndistance in Mpc.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>appMag</strong> (<em>float</em>) \u2013 apparent magnitude of object</p></li>\n<li><p><strong>distMpc</strong> (<em>float</em>) \u2013 distance to object in Mpc</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>absolute magnitude of object</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.dVcdz\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">dVcdz</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">z</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.dVcdz\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the line of sight comoving volume element per steradian dV/dz\nat redshift z.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>z</strong> (<em>float</em>) \u2013 redshift</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>comoving volume element per steradian</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.da\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">da</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">z</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.da\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the angular diameter distance in Mpc at redshift z.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>z</strong> (<em>float</em>) \u2013 redshift</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>angular diameter distance in Mpc</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.dc\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">dc</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">z</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.dc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the line of sight comoving distance in Mpc at redshift z.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>z</strong> (<em>float</em>) \u2013 redshift</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>transverse comoving distance (proper motion distance) in Mpc</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.dc2z\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">dc2z</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">distanceMpc</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.dc2z\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the redshift z corresponding to the comoving distance given\nin Mpc.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>distanceMpc</strong> (<em>float</em>) \u2013 distance in Mpc</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>redshift</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.dl\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">dl</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">z</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.dl\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the luminosity distance in Mpc at redshift z.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>z</strong> (<em>float</em>) \u2013 redshift</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>luminosity distance in Mpc</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.dl2z\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">dl2z</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">distanceMpc</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.dl2z\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the redshift z corresponding to the luminosity distance given\nin Mpc.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>distanceMpc</strong> (<em>float</em>) \u2013 distance in Mpc</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>redshift</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.dm\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">dm</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">z</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.dm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the transverse comoving distance (proper motion distance) in\nMpc at redshift z.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>z</strong> (<em>float</em>) \u2013 redshift</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>transverse comoving distance (proper motion distance) in Mpc</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.t0\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">t0</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.t0\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the age of the universe in Gyr at z=0 for the current set of\ncosmological parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>float</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>age of the universe in Gyr at z=0</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.tl\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">tl</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">z</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.tl\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the lookback time in Gyr to redshift z for the current set\nof cosmological parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>z</strong> (<em>float</em>) \u2013 redshift</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>lookback time in Gyr to redshift z</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.tl2z\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">tl2z</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">tlGyr</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.tl2z\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the redshift z corresponding to lookback time tlGyr given in\nGyr.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>tlGyr</strong> (<em>float</em>) \u2013 lookback time in Gyr</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>redshift</p>\n</dd>\n<dt class=\"field-even\">Note</dt>\n<dd class=\"field-even\"><p>Raises ValueError if tlGyr is not positive.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.tz\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">tz</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">z</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.tz\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the age of the universe at redshift z for the current set of\ncosmological parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>z</strong> (<em>float</em>) \u2013 redshift</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>age of the universe in Gyr at redshift z</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCalc.tz2z\">\n<code class=\"sig-prename descclassname\">astLib.astCalc.</code><code class=\"sig-name descname\">tz2z</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">tzGyr</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCalc.tz2z\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the redshift z corresponding to age of the universe tzGyr\ngiven in Gyr.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>tzGyr</strong> (<em>float</em>) \u2013 age of the universe in Gyr</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>redshift</p>\n</dd>\n<dt class=\"field-even\">Note</dt>\n<dd class=\"field-even\"><p>Raises ValueError if Universe age not positive</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-astLib.astCoords\">\n<span id=\"astcoords\"></span><h2>astCoords<a class=\"headerlink\" href=\"#module-astLib.astCoords\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Module for coordinate manipulation (conversions, calculations etc.).</p>\n<ol class=\"loweralpha simple\" start=\"3\">\n<li><p>2007-2012 Matt Hilton</p></li>\n</ol>\n<ol class=\"loweralpha simple\" start=\"3\">\n<li><p>2013-2016 Matt Hilton &amp; Steven Boada</p></li>\n</ol>\n<dl class=\"py function\">\n<dt id=\"astLib.astCoords.calcAngSepDeg\">\n<code class=\"sig-prename descclassname\">astLib.astCoords.</code><code class=\"sig-name descname\">calcAngSepDeg</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">RADeg1</span></em>, <em class=\"sig-param\"><span class=\"n\">decDeg1</span></em>, <em class=\"sig-param\"><span class=\"n\">RADeg2</span></em>, <em class=\"sig-param\"><span class=\"n\">decDeg2</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCoords.calcAngSepDeg\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the angular separation of two positions on the sky (specified\nin decimal degrees) in decimal degrees. Note that RADeg2, decDeg2 can be numpy\narrays.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>RADeg1</strong> (<em>float</em>) \u2013 R.A. in decimal degrees for position 1</p></li>\n<li><p><strong>decDeg1</strong> (<em>float</em>) \u2013 dec. in decimal degrees for position 1</p></li>\n<li><p><strong>RADeg2</strong> (<em>float</em><em> or </em><em>numpy array</em>) \u2013 R.A. in decimal degrees for position 2</p></li>\n<li><p><strong>decDeg2</strong> (<em>float</em><em> or </em><em>numpy array</em>) \u2013 dec. in decimal degrees for position 2</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float or numpy array, depending upon type of RADeg2, decDeg2</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>angular separation in decimal degrees</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCoords.calcRADecSearchBox\">\n<code class=\"sig-prename descclassname\">astLib.astCoords.</code><code class=\"sig-name descname\">calcRADecSearchBox</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">RADeg</span></em>, <em class=\"sig-param\"><span class=\"n\">decDeg</span></em>, <em class=\"sig-param\"><span class=\"n\">radiusSkyDeg</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCoords.calcRADecSearchBox\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates minimum and maximum RA, dec coords needed to define a box\nenclosing a circle of radius radiusSkyDeg around the given RADeg, decDeg\ncoordinates. Useful for freeform queries of e.g. SDSS, UKIDSS etc.. Uses\n<a class=\"reference internal\" href=\"#astLib.astCoords.calcAngSepDeg\" title=\"astLib.astCoords.calcAngSepDeg\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">calcAngSepDeg</span></code></a>, so has the same limitations.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>RADeg</strong> (<em>float</em>) \u2013 RA coordinate of centre of search region</p></li>\n<li><p><strong>decDeg</strong> (<em>float</em>) \u2013 dec coordinate of centre of search region</p></li>\n<li><p><strong>radiusSkyDeg</strong> (<em>float</em>) \u2013 radius in degrees on the sky used to define search\nregion</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>list</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>[RAMin, RAMax, decMin, decMax] - coordinates in decimal degrees\ndefining search box</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCoords.convertCoords\">\n<code class=\"sig-prename descclassname\">astLib.astCoords.</code><code class=\"sig-name descname\">convertCoords</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">inputSystem</span></em>, <em class=\"sig-param\"><span class=\"n\">outputSystem</span></em>, <em class=\"sig-param\"><span class=\"n\">coordX</span></em>, <em class=\"sig-param\"><span class=\"n\">coordY</span></em>, <em class=\"sig-param\"><span class=\"n\">epoch</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCoords.convertCoords\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Converts specified coordinates (given in decimal degrees) between J2000,\nB1950, and Galactic.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>inputSystem</strong> (<em>string</em>) \u2013 system of the input coordinates (either \u201cJ2000\u201d,\n\u201cB1950\u201d or \u201cGALACTIC\u201d)</p></li>\n<li><p><strong>outputSystem</strong> (<em>string</em>) \u2013 system of the returned coordinates (either \u201cJ2000\u201d,\n\u201cB1950\u201d or \u201cGALACTIC\u201d)</p></li>\n<li><p><strong>coordX</strong> (<em>float</em>) \u2013 longitude coordinate in decimal degrees, e.g. R. A.</p></li>\n<li><p><strong>coordY</strong> (<em>float</em>) \u2013 latitude coordinate in decimal degrees, e.g. dec.</p></li>\n<li><p><strong>epoch</strong> (<em>float</em>) \u2013 epoch of the input coordinates</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>list</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>coordinates in decimal degrees in requested output system</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCoords.decimal2dms\">\n<code class=\"sig-prename descclassname\">astLib.astCoords.</code><code class=\"sig-name descname\">decimal2dms</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">decDeg</span></em>, <em class=\"sig-param\"><span class=\"n\">delimiter</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCoords.decimal2dms\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Converts decimal degrees to string in Degrees:Minutes:Seconds format\nwith user specified delimiter.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>decDeg</strong> (<em>float</em>) \u2013 coordinate in decimal degrees</p></li>\n<li><p><strong>delimiter</strong> (<em>string</em>) \u2013 delimiter character in returned string</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>string</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>coordinate string in D:M:S format</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCoords.decimal2hms\">\n<code class=\"sig-prename descclassname\">astLib.astCoords.</code><code class=\"sig-name descname\">decimal2hms</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">RADeg</span></em>, <em class=\"sig-param\"><span class=\"n\">delimiter</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCoords.decimal2hms\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Converts decimal degrees to string in Hours:Minutes:Seconds format with\nuser specified delimiter.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>RADeg</strong> (<em>float</em>) \u2013 coordinate in decimal degrees</p></li>\n<li><p><strong>delimiter</strong> (<em>string</em>) \u2013 delimiter character in returned string</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>string</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>coordinate string in H:M:S format</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCoords.dms2decimal\">\n<code class=\"sig-prename descclassname\">astLib.astCoords.</code><code class=\"sig-name descname\">dms2decimal</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">decString</span></em>, <em class=\"sig-param\"><span class=\"n\">delimiter</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCoords.dms2decimal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Converts a delimited string of Degrees:Minutes:Seconds format into\ndecimal degrees.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>decString</strong> (<em>string</em>) \u2013 coordinate string in D:M:S format</p></li>\n<li><p><strong>delimiter</strong> (<em>string</em>) \u2013 delimiter character in decString</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>coordinate in decimal degrees</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCoords.hms2decimal\">\n<code class=\"sig-prename descclassname\">astLib.astCoords.</code><code class=\"sig-name descname\">hms2decimal</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">RAString</span></em>, <em class=\"sig-param\"><span class=\"n\">delimiter</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCoords.hms2decimal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Converts a delimited string of Hours:Minutes:Seconds format into decimal\ndegrees.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>RAString</strong> (<em>string</em>) \u2013 coordinate string in H:M:S format</p></li>\n<li><p><strong>delimiter</strong> (<em>string</em>) \u2013 delimiter character in RAString</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>coordinate in decimal degrees</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astCoords.shiftRADec\">\n<code class=\"sig-prename descclassname\">astLib.astCoords.</code><code class=\"sig-name descname\">shiftRADec</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">ra1</span></em>, <em class=\"sig-param\"><span class=\"n\">dec1</span></em>, <em class=\"sig-param\"><span class=\"n\">deltaRA</span></em>, <em class=\"sig-param\"><span class=\"n\">deltaDec</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astCoords.shiftRADec\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes new right ascension and declination shifted from the original\nby some delta RA and delta DEC. Input position is decimal degrees. Shifts\n(deltaRA, deltaDec) are arcseconds, and output is decimal degrees. Based on\nan IDL routine of the same name.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>ra1</strong> (<em>R.A. in decimal degrees</em>) \u2013 float</p></li>\n<li><p><strong>dec1</strong> (<em>dec. in decimal degrees</em>) \u2013 float</p></li>\n<li><p><strong>deltaRA</strong> (<em>shift in R.A. in arcseconds</em>) \u2013 float</p></li>\n<li><p><strong>deltaDec</strong> (<em>shift in dec. in arcseconds</em>) \u2013 float</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float [newRA, newDec]</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>shifted R.A. and dec.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-astLib.astImages\">\n<span id=\"astimages\"></span><h2>astImages<a class=\"headerlink\" href=\"#module-astLib.astImages\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Module for simple .fits image tasks (rotation, clipping out sections, making .pngs etc.).</p>\n<ol class=\"loweralpha simple\" start=\"3\">\n<li><p>2007-2018 Matt Hilton</p></li>\n</ol>\n<p>Some routines in this module will fail if, e.g., asked to clip a section from a .fits image at a\nposition not found within the image (as determined using the WCS). Where this occurs, the function\nwill return None. An error message will be printed to the console when this happens if\nastImages.REPORT_ERRORS=True (the default). Testing if an astImages function returns None can be\nused to handle errors in scripts.</p>\n<dl class=\"py function\">\n<dt id=\"astLib.astImages.clipImageSectionPix\">\n<code class=\"sig-prename descclassname\">astLib.astImages.</code><code class=\"sig-name descname\">clipImageSectionPix</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">imageData</span></em>, <em class=\"sig-param\"><span class=\"n\">XCoord</span></em>, <em class=\"sig-param\"><span class=\"n\">YCoord</span></em>, <em class=\"sig-param\"><span class=\"n\">clipSizePix</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astImages.clipImageSectionPix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clips a square or rectangular section from an image array at the given pixel coordinates.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>imageData</strong> (<em>np array</em>) \u2013 image data array</p></li>\n<li><p><strong>XCoord</strong> (<em>float</em>) \u2013 coordinate in pixels</p></li>\n<li><p><strong>YCoord</strong> (<em>float</em>) \u2013 coordinate in pixels</p></li>\n<li><p><strong>clipSizePix</strong> (<em>float</em><em> or </em><em>list in format</em><em> [</em><em>widthPix</em><em>, </em><em>heightPix</em><em>]</em>) \u2013 if float, size of square clipped section in pixels; if list,</p></li>\n</ul>\n</dd>\n</dl>\n<p>size of clipped section in pixels in x, y axes of output image respectively\n:rtype: np array\n:return: clipped image section</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astImages.clipImageSectionWCS\">\n<code class=\"sig-prename descclassname\">astLib.astImages.</code><code class=\"sig-name descname\">clipImageSectionWCS</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">imageData</span></em>, <em class=\"sig-param\"><span class=\"n\">imageWCS</span></em>, <em class=\"sig-param\"><span class=\"n\">RADeg</span></em>, <em class=\"sig-param\"><span class=\"n\">decDeg</span></em>, <em class=\"sig-param\"><span class=\"n\">clipSizeDeg</span></em>, <em class=\"sig-param\"><span class=\"n\">returnWCS</span><span class=\"o\">=</span><span class=\"default_value\">True</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astImages.clipImageSectionWCS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clips a square or rectangular section from an image array at the given celestial coordinates.\nAn updated WCS for the clipped section is optionally returned, as well as the x, y pixel\ncoordinates in the original image corresponding to the clipped section.</p>\n<p>Note that the clip size is specified in degrees on the sky. For projections that have varying\nreal pixel scale across the map (e.g. CEA), use <a class=\"reference internal\" href=\"#astLib.astImages.clipUsingRADecCoords\" title=\"astLib.astImages.clipUsingRADecCoords\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">clipUsingRADecCoords</span></code></a> instead.</p>\n<p>Similarly, this routine will not work for a WCS that has polynomial distortion coefficients\nin the header (e.g., CTYPE1 = \u2018RA\u2014TAN-SIP\u2019 etc.) - again <a class=\"reference internal\" href=\"#astLib.astImages.clipUsingRADecCoords\" title=\"astLib.astImages.clipUsingRADecCoords\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">clipUsingRADecCoords</span></code></a> can be used\nin such cases.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>imageData</strong> (<em>np array</em>) \u2013 image data array</p></li>\n<li><p><strong>imageWCS</strong> (<a class=\"reference internal\" href=\"#astLib.astWCS.WCS\" title=\"astLib.astWCS.WCS\"><em>astWCS.WCS</em></a>) \u2013 astWCS.WCS object</p></li>\n<li><p><strong>RADeg</strong> (<em>float</em>) \u2013 coordinate in decimal degrees</p></li>\n<li><p><strong>decDeg</strong> (<em>float</em>) \u2013 coordinate in decimal degrees</p></li>\n<li><p><strong>clipSizeDeg</strong> (<em>float</em><em> or </em><em>list in format</em><em> [</em><em>widthDeg</em><em>, </em><em>heightDeg</em><em>]</em>) \u2013 if float, size of square clipped section in decimal degrees; if list,</p></li>\n</ul>\n</dd>\n</dl>\n<p>size of clipped section in degrees in x, y axes of image respectively\n:type returnWCS: bool\n:param returnWCS: if True, return an updated WCS for the clipped section\n:rtype: dictionary\n:return: clipped image section (np array), updated astWCS WCS object for\nclipped image section, and coordinates of clipped section in imageData in format\n{\u2018data\u2019, \u2018wcs\u2019, \u2018clippedSection\u2019}.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astImages.clipRotatedImageSectionWCS\">\n<code class=\"sig-prename descclassname\">astLib.astImages.</code><code class=\"sig-name descname\">clipRotatedImageSectionWCS</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">imageData</span></em>, <em class=\"sig-param\"><span class=\"n\">imageWCS</span></em>, <em class=\"sig-param\"><span class=\"n\">RADeg</span></em>, <em class=\"sig-param\"><span class=\"n\">decDeg</span></em>, <em class=\"sig-param\"><span class=\"n\">clipSizeDeg</span></em>, <em class=\"sig-param\"><span class=\"n\">returnWCS</span><span class=\"o\">=</span><span class=\"default_value\">True</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astImages.clipRotatedImageSectionWCS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clips a square or rectangular section from an image array at the given celestial coordinates.\nThe resulting clip is rotated and/or flipped such that North is at the top, and East appears at\nthe left. An updated WCS for the clipped section is also returned. Note that the alignment\nof the rotated WCS is currently not perfect - however, it is probably good enough in most\ncases for use with <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ImagePlot</span></code> for plotting purposes.</p>\n<p>Note that the clip size is specified in degrees on the sky. For projections that have varying\nreal pixel scale across the map (e.g. CEA), use <a class=\"reference internal\" href=\"#astLib.astImages.clipUsingRADecCoords\" title=\"astLib.astImages.clipUsingRADecCoords\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">clipUsingRADecCoords</span></code></a> instead.</p>\n<p>Similarly, this routine will not work for a WCS that has polynomial distortion coefficients\nin the header (e.g., CTYPE1 = \u2018RA\u2014TAN-SIP\u2019 etc.) - again <a class=\"reference internal\" href=\"#astLib.astImages.clipUsingRADecCoords\" title=\"astLib.astImages.clipUsingRADecCoords\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">clipUsingRADecCoords</span></code></a> can be used\nin such cases.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>imageData</strong> (<em>np array</em>) \u2013 image data array</p></li>\n<li><p><strong>imageWCS</strong> (<a class=\"reference internal\" href=\"#astLib.astWCS.WCS\" title=\"astLib.astWCS.WCS\"><em>astWCS.WCS</em></a>) \u2013 astWCS.WCS object</p></li>\n<li><p><strong>RADeg</strong> (<em>float</em>) \u2013 coordinate in decimal degrees</p></li>\n<li><p><strong>decDeg</strong> (<em>float</em>) \u2013 coordinate in decimal degrees</p></li>\n<li><p><strong>clipSizeDeg</strong> (<em>float</em>) \u2013 if float, size of square clipped section in decimal degrees; if list,</p></li>\n</ul>\n</dd>\n</dl>\n<p>size of clipped section in degrees in RA, dec. axes of output rotated image respectively\n:type returnWCS: bool\n:param returnWCS: if True, return an updated WCS for the clipped section\n:rtype: dictionary\n:return: clipped image section (np array), updated astWCS WCS object for\nclipped image section, in format {\u2018data\u2019, \u2018wcs\u2019}.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Note</dt>\n<dd class=\"field-odd\"><p>Returns \u2018None\u2019 if the requested position is not found within the image. If the image</p>\n</dd>\n</dl>\n<p>WCS does not have keywords of the form CD1_1 etc., the output WCS will not be rotated.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astImages.clipUsingRADecCoords\">\n<code class=\"sig-prename descclassname\">astLib.astImages.</code><code class=\"sig-name descname\">clipUsingRADecCoords</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">imageData</span></em>, <em class=\"sig-param\"><span class=\"n\">imageWCS</span></em>, <em class=\"sig-param\"><span class=\"n\">RAMin</span></em>, <em class=\"sig-param\"><span class=\"n\">RAMax</span></em>, <em class=\"sig-param\"><span class=\"n\">decMin</span></em>, <em class=\"sig-param\"><span class=\"n\">decMax</span></em>, <em class=\"sig-param\"><span class=\"n\">returnWCS</span><span class=\"o\">=</span><span class=\"default_value\">True</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astImages.clipUsingRADecCoords\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clips a section from an image array at the pixel coordinates corresponding to the given\ncelestial coordinates.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>imageData</strong> (<em>np array</em>) \u2013 image data array</p></li>\n<li><p><strong>imageWCS</strong> (<a class=\"reference internal\" href=\"#astLib.astWCS.WCS\" title=\"astLib.astWCS.WCS\"><em>astWCS.WCS</em></a>) \u2013 astWCS.WCS object</p></li>\n<li><p><strong>RAMin</strong> (<em>float</em>) \u2013 minimum RA coordinate in decimal degrees</p></li>\n<li><p><strong>RAMax</strong> (<em>float</em>) \u2013 maximum RA coordinate in decimal degrees</p></li>\n<li><p><strong>decMin</strong> (<em>float</em>) \u2013 minimum dec coordinate in decimal degrees</p></li>\n<li><p><strong>decMax</strong> (<em>float</em>) \u2013 maximum dec coordinate in decimal degrees</p></li>\n<li><p><strong>returnWCS</strong> (<em>bool</em>) \u2013 if True, return an updated WCS for the clipped section</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>dictionary</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>clipped image section (np array), updated astWCS WCS object for</p>\n</dd>\n</dl>\n<p>clipped image section, and corresponding pixel coordinates in imageData in format\n{\u2018data\u2019, \u2018wcs\u2019, \u2018clippedSection\u2019}.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Note</dt>\n<dd class=\"field-odd\"><p>Returns \u2018None\u2019 if the requested position is not found within the image.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astImages.generateContourOverlay\">\n<code class=\"sig-prename descclassname\">astLib.astImages.</code><code class=\"sig-name descname\">generateContourOverlay</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">backgroundImageData</span></em>, <em class=\"sig-param\"><span class=\"n\">backgroundImageWCS</span></em>, <em class=\"sig-param\"><span class=\"n\">contourImageData</span></em>, <em class=\"sig-param\"><span class=\"n\">contourImageWCS</span></em>, <em class=\"sig-param\"><span class=\"n\">contourLevels</span></em>, <em class=\"sig-param\"><span class=\"n\">contourSmoothFactor</span><span class=\"o\">=</span><span class=\"default_value\">0</span></em>, <em class=\"sig-param\"><span class=\"n\">highAccuracy</span><span class=\"o\">=</span><span class=\"default_value\">False</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astImages.generateContourOverlay\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Rescales an image array to be used as a contour overlay to have the same dimensions as the\nbackground image, and generates a set of contour levels. The image array from which the contours\nare to be generated will be resampled to the same dimensions as the background image data, and\ncan be optionally smoothed using a Gaussian filter. The sigma of the Gaussian filter\n(contourSmoothFactor) is specified in arcsec.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>backgroundImageData</strong> (<em>np array</em>) \u2013 background image data array</p></li>\n<li><p><strong>backgroundImageWCS</strong> (<a class=\"reference internal\" href=\"#astLib.astWCS.WCS\" title=\"astLib.astWCS.WCS\"><em>astWCS.WCS</em></a>) \u2013 astWCS.WCS object of the background image data array</p></li>\n<li><p><strong>contourImageData</strong> (<em>np array</em>) \u2013 image data array from which contours are to be generated</p></li>\n<li><p><strong>contourImageWCS</strong> (<a class=\"reference internal\" href=\"#astLib.astWCS.WCS\" title=\"astLib.astWCS.WCS\"><em>astWCS.WCS</em></a>) \u2013 astWCS.WCS object corresponding to contourImageData</p></li>\n<li><p><strong>contourLevels</strong> (<em>list</em>) \u2013 sets the contour levels - available options:\n- values: contourLevels=[list of values specifying each level]\n- linear spacing: contourLevels=[\u2018linear\u2019, min level value, max level value, number\nof levels] - can use \u201cmin\u201d, \u201cmax\u201d to automatically set min, max levels from image data\n- log spacing: contourLevels=[\u2018log\u2019, min level value, max level value, number of\nlevels] - can use \u201cmin\u201d, \u201cmax\u201d to automatically set min, max levels from image data</p></li>\n<li><p><strong>contourSmoothFactor</strong> (<em>float</em>) \u2013 standard deviation (in arcsec) of Gaussian filter for</p></li>\n</ul>\n</dd>\n</dl>\n<p>pre-smoothing of contour image data (set to 0 for no smoothing)\n:type highAccuracy: bool\n:param highAccuracy: if True, sample every corresponding pixel in each image; otherwise, sample</p>\n<blockquote>\n<div><p>every nth pixel, where n = the ratio of the image scales.</p>\n</div></blockquote>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astImages.histEq\">\n<code class=\"sig-prename descclassname\">astLib.astImages.</code><code class=\"sig-name descname\">histEq</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">inputArray</span></em>, <em class=\"sig-param\"><span class=\"n\">numBins</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astImages.histEq\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Performs histogram equalisation of the input np array.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>inputArray</strong> (<em>np array</em>) \u2013 image data array</p></li>\n<li><p><strong>numBins</strong> (<em>int</em>) \u2013 number of bins in which to perform the operation (e.g. 1024)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>np array</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>image data array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astImages.intensityCutImage\">\n<code class=\"sig-prename descclassname\">astLib.astImages.</code><code class=\"sig-name descname\">intensityCutImage</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">imageData</span></em>, <em class=\"sig-param\"><span class=\"n\">cutLevels</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astImages.intensityCutImage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a matplotlib.pylab plot of an image array with the specified cuts in intensity\napplied. This routine is used by <a class=\"reference internal\" href=\"#astLib.astImages.saveBitmap\" title=\"astLib.astImages.saveBitmap\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">saveBitmap</span></code></a> and <a class=\"reference internal\" href=\"#astLib.astImages.saveContourOverlayBitmap\" title=\"astLib.astImages.saveContourOverlayBitmap\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">saveContourOverlayBitmap</span></code></a>, which both\nproduce output as .png, .jpg, etc. images.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>imageData</strong> (<em>np array</em>) \u2013 image data array</p></li>\n<li><p><strong>cutLevels</strong> (<em>list</em>) \u2013 sets the image scaling - available options:\n- pixel values: cutLevels=[low value, high value].\n- histogram equalisation: cutLevels=[\u201chistEq\u201d, number of bins ( e.g. 1024)]\n- relative: cutLevels=[\u201crelative\u201d, cut per cent level (e.g. 99.5)]\n- smart: cutLevels=[\u201csmart\u201d, cut per cent level (e.g. 99.5)]</p></li>\n</ul>\n</dd>\n</dl>\n<p>[\u201csmart\u201d, 99.5] seems to provide good scaling over a range of different images.\n:rtype: dictionary\n:return: image section (np.array), matplotlib image normalisation (matplotlib.colors.Normalize), in the format {\u2018image\u2019, \u2018norm\u2019}.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Note</dt>\n<dd class=\"field-odd\"><p>If cutLevels[0] == \u201chistEq\u201d, then only {\u2018image\u2019} is returned.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astImages.normalise\">\n<code class=\"sig-prename descclassname\">astLib.astImages.</code><code class=\"sig-name descname\">normalise</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">inputArray</span></em>, <em class=\"sig-param\"><span class=\"n\">clipMinMax</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astImages.normalise\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clips the inputArray in intensity and normalises the array such that minimum and maximum\nvalues are 0, 1. Clip in intensity is specified by clipMinMax, a list in the format\n[clipMin, clipMax]</p>\n<p>Used for normalising image arrays so that they can be turned into RGB arrays that matplotlib\ncan plot (see <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">astPlots.ImagePlot</span></code>).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>inputArray</strong> (<em>np array</em>) \u2013 image data array</p></li>\n<li><p><strong>clipMinMax</strong> (<em>list</em>) \u2013 [minimum value of clipped array, maximum value of clipped array]</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>np array</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>normalised array with minimum value 0, maximum value 1</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astImages.resampleToTanProjection\">\n<code class=\"sig-prename descclassname\">astLib.astImages.</code><code class=\"sig-name descname\">resampleToTanProjection</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">imageData</span></em>, <em class=\"sig-param\"><span class=\"n\">imageWCS</span></em>, <em class=\"sig-param\"><span class=\"n\">outputPixDimensions</span><span class=\"o\">=</span><span class=\"default_value\">[600, 600]</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astImages.resampleToTanProjection\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Resamples an image and WCS to a tangent plane projection. Purely for plotting purposes\n(e.g., ensuring RA, dec. coordinate axes perpendicular).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>imageData</strong> (<em>np array</em>) \u2013 image data array</p></li>\n<li><p><strong>imageWCS</strong> (<a class=\"reference internal\" href=\"#astLib.astWCS.WCS\" title=\"astLib.astWCS.WCS\"><em>astWCS.WCS</em></a>) \u2013 astWCS.WCS object</p></li>\n<li><p><strong>outputPixDimensions</strong> (<em>list</em>) \u2013 [width, height] of output image in pixels</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>dictionary</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>image data (np array), updated astWCS WCS object for image, in format {\u2018data\u2019, \u2018wcs\u2019}.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astImages.resampleToWCS\">\n<code class=\"sig-prename descclassname\">astLib.astImages.</code><code class=\"sig-name descname\">resampleToWCS</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">im1Data</span></em>, <em class=\"sig-param\"><span class=\"n\">im1WCS</span></em>, <em class=\"sig-param\"><span class=\"n\">im2Data</span></em>, <em class=\"sig-param\"><span class=\"n\">im2WCS</span></em>, <em class=\"sig-param\"><span class=\"n\">highAccuracy</span><span class=\"o\">=</span><span class=\"default_value\">False</span></em>, <em class=\"sig-param\"><span class=\"n\">onlyOverlapping</span><span class=\"o\">=</span><span class=\"default_value\">True</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astImages.resampleToWCS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Resamples data corresponding to second image (with data im2Data, WCS im2WCS) onto the WCS\nof the first image (im1Data, im1WCS). The output, resampled image is of the pixel same\ndimensions of the first image. This routine is for assisting in plotting - performing\nphotometry on the output is not recommended.</p>\n<p>Set highAccuracy == True to sample every corresponding pixel in each image; otherwise only\nevery nth pixel (where n is the ratio of the image scales) will be sampled, with values\nin between being set using a linear interpolation (much faster).</p>\n<p>Set onlyOverlapping == True to speed up resampling by only resampling the overlapping\narea defined by both image WCSs.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>im1Data</strong> (<em>np array</em>) \u2013 image data array for first image</p></li>\n<li><p><strong>im1WCS</strong> (<a class=\"reference internal\" href=\"#astLib.astWCS.WCS\" title=\"astLib.astWCS.WCS\"><em>astWCS.WCS</em></a>) \u2013 astWCS.WCS object corresponding to im1Data</p></li>\n<li><p><strong>im2Data</strong> (<em>np array</em>) \u2013 image data array for second image (to be resampled to match first image)</p></li>\n<li><p><strong>im2WCS</strong> (<a class=\"reference internal\" href=\"#astLib.astWCS.WCS\" title=\"astLib.astWCS.WCS\"><em>astWCS.WCS</em></a>) \u2013 astWCS.WCS object corresponding to im2Data</p></li>\n<li><p><strong>highAccuracy</strong> (<em>bool</em>) \u2013 if True, sample every corresponding pixel in each image; otherwise, sample\nevery nth pixel, where n = the ratio of the image scales.</p></li>\n<li><p><strong>onlyOverlapping</strong> (<em>bool</em>) \u2013 if True, only consider the overlapping area defined by both image WCSs\n(speeds things up)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>dictionary</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>np image data array and associated WCS in format {\u2018data\u2019, \u2018wcs\u2019}</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astImages.saveBitmap\">\n<code class=\"sig-prename descclassname\">astLib.astImages.</code><code class=\"sig-name descname\">saveBitmap</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">outputFileName</span></em>, <em class=\"sig-param\"><span class=\"n\">imageData</span></em>, <em class=\"sig-param\"><span class=\"n\">cutLevels</span></em>, <em class=\"sig-param\"><span class=\"n\">size</span></em>, <em class=\"sig-param\"><span class=\"n\">colorMapName</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astImages.saveBitmap\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Makes a bitmap image from an image array; the image format is specified by the\nfilename extension. (e.g. \u201c.jpg\u201d =JPEG, \u201c.png\u201d=PNG).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>outputFileName</strong> (<em>string</em>) \u2013 filename of output bitmap image</p></li>\n<li><p><strong>imageData</strong> (<em>np array</em>) \u2013 image data array</p></li>\n<li><p><strong>cutLevels</strong> (<em>list</em>) \u2013 sets the image scaling - available options:\n- pixel values: cutLevels=[low value, high value].\n- histogram equalisation: cutLevels=[\u201chistEq\u201d, number of bins ( e.g. 1024)]\n- relative: cutLevels=[\u201crelative\u201d, cut per cent level (e.g. 99.5)]\n- smart: cutLevels=[\u201csmart\u201d, cut per cent level (e.g. 99.5)]</p></li>\n</ul>\n</dd>\n</dl>\n<p>[\u201csmart\u201d, 99.5] seems to provide good scaling over a range of different images.\n:type size: int\n:param size: size of output image in pixels\n:type colorMapName: string\n:param colorMapName: name of a standard matplotlib colormap, e.g. \u201chot\u201d, \u201ccool\u201d, \u201cgray\u201d\netc. (do \u201chelp(pylab.colormaps)\u201d in the Python interpreter to see available options)</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astImages.saveContourOverlayBitmap\">\n<code class=\"sig-prename descclassname\">astLib.astImages.</code><code class=\"sig-name descname\">saveContourOverlayBitmap</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">outputFileName</span></em>, <em class=\"sig-param\"><span class=\"n\">backgroundImageData</span></em>, <em class=\"sig-param\"><span class=\"n\">backgroundImageWCS</span></em>, <em class=\"sig-param\"><span class=\"n\">cutLevels</span></em>, <em class=\"sig-param\"><span class=\"n\">size</span></em>, <em class=\"sig-param\"><span class=\"n\">colorMapName</span></em>, <em class=\"sig-param\"><span class=\"n\">contourImageData</span></em>, <em class=\"sig-param\"><span class=\"n\">contourImageWCS</span></em>, <em class=\"sig-param\"><span class=\"n\">contourSmoothFactor</span></em>, <em class=\"sig-param\"><span class=\"n\">contourLevels</span></em>, <em class=\"sig-param\"><span class=\"n\">contourColor</span></em>, <em class=\"sig-param\"><span class=\"n\">contourWidth</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astImages.saveContourOverlayBitmap\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Makes a bitmap image from an image array, with a set of contours generated from a\nsecond image array overlaid. The image format is specified by the file extension\n(e.g. \u201c.jpg\u201d=JPEG, \u201c.png\u201d=PNG). The image array from which the contours are to be generated\ncan optionally be pre-smoothed using a Gaussian filter.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>outputFileName</strong> (<em>string</em>) \u2013 filename of output bitmap image</p></li>\n<li><p><strong>backgroundImageData</strong> (<em>np array</em>) \u2013 background image data array</p></li>\n<li><p><strong>backgroundImageWCS</strong> (<a class=\"reference internal\" href=\"#astLib.astWCS.WCS\" title=\"astLib.astWCS.WCS\"><em>astWCS.WCS</em></a>) \u2013 astWCS.WCS object of the background image data array</p></li>\n<li><p><strong>cutLevels</strong> (<em>list</em>) \u2013 sets the image scaling - available options:\n- pixel values: cutLevels=[low value, high value].\n- histogram equalisation: cutLevels=[\u201chistEq\u201d, number of bins ( e.g. 1024)]\n- relative: cutLevels=[\u201crelative\u201d, cut per cent level (e.g. 99.5)]\n- smart: cutLevels=[\u201csmart\u201d, cut per cent level (e.g. 99.5)]</p></li>\n</ul>\n</dd>\n</dl>\n<p>[\u201csmart\u201d, 99.5] seems to provide good scaling over a range of different images.\n:type size: int\n:param size: size of output image in pixels\n:type colorMapName: string\n:param colorMapName: name of a standard matplotlib colormap, e.g. \u201chot\u201d, \u201ccool\u201d, \u201cgray\u201d\netc. (do \u201chelp(pylab.colormaps)\u201d in the Python interpreter to see available options)\n:type contourImageData: np array\n:param contourImageData: image data array from which contours are to be generated\n:type contourImageWCS: astWCS.WCS\n:param contourImageWCS: astWCS.WCS object corresponding to contourImageData\n:type contourSmoothFactor: float\n:param contourSmoothFactor: standard deviation (in pixels) of Gaussian filter for\npre-smoothing of contour image data (set to 0 for no smoothing)\n:type contourLevels: list\n:param contourLevels: sets the contour levels - available options:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>values: contourLevels=[list of values specifying each level]</p></li>\n<li><p>linear spacing: contourLevels=[\u2018linear\u2019, min level value, max level value, number</p></li>\n</ul>\n<p>of levels] - can use \u201cmin\u201d, \u201cmax\u201d to automatically set min, max levels from image data\n- log spacing: contourLevels=[\u2018log\u2019, min level value, max level value, number of\nlevels] - can use \u201cmin\u201d, \u201cmax\u201d to automatically set min, max levels from image data</p>\n</div></blockquote>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>contourColor</strong> (<em>string</em>) \u2013 color of the overlaid contours, specified by the name of a standard</p>\n</dd>\n</dl>\n<p>matplotlib color, e.g., \u201cblack\u201d, \u201cwhite\u201d, \u201ccyan\u201d\netc. (do \u201chelp(pylab.colors)\u201d in the Python interpreter to see available options)\n:type contourWidth: int\n:param contourWidth: width of the overlaid contours</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astImages.saveFITS\">\n<code class=\"sig-prename descclassname\">astLib.astImages.</code><code class=\"sig-name descname\">saveFITS</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">outputFileName</span></em>, <em class=\"sig-param\"><span class=\"n\">imageData</span></em>, <em class=\"sig-param\"><span class=\"n\">imageWCS</span><span class=\"o\">=</span><span class=\"default_value\">None</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astImages.saveFITS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Writes an image array to a new .fits file.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>outputFileName</strong> (<em>string</em>) \u2013 filename of output FITS image</p></li>\n<li><p><strong>imageData</strong> (<em>np array</em>) \u2013 image data array</p></li>\n<li><p><strong>imageWCS</strong> (<em>astWCS.WCS object</em>) \u2013 image WCS object</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Note</dt>\n<dd class=\"field-even\"><p>If imageWCS=None, the FITS image will be written with a rudimentary header containing</p>\n</dd>\n</dl>\n<p>no meta data.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astImages.scaleImage\">\n<code class=\"sig-prename descclassname\">astLib.astImages.</code><code class=\"sig-name descname\">scaleImage</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">imageData</span></em>, <em class=\"sig-param\"><span class=\"n\">imageWCS</span></em>, <em class=\"sig-param\"><span class=\"n\">scaleFactor</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astImages.scaleImage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Scales image array and WCS by the given scale factor.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>imageData</strong> (<em>np array</em>) \u2013 image data array</p></li>\n<li><p><strong>imageWCS</strong> (<a class=\"reference internal\" href=\"#astLib.astWCS.WCS\" title=\"astLib.astWCS.WCS\"><em>astWCS.WCS</em></a>) \u2013 astWCS.WCS object</p></li>\n<li><p><strong>scaleFactor</strong> (<em>float</em><em> or </em><em>list</em><em> or </em><em>tuple</em>) \u2013 factor to resize image by - if tuple or list, in format\n[x scale factor, y scale factor]</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>dictionary</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>image data (np array), updated astWCS WCS object for image, in format {\u2018data\u2019, \u2018wcs\u2019}.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-astLib.astPlots\">\n<span id=\"astplots\"></span><h2>astPlots<a class=\"headerlink\" href=\"#module-astLib.astPlots\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Module for producing astronomical plots.</p>\n<ol class=\"loweralpha simple\" start=\"3\">\n<li><p>2007-2018 Matt Hilton</p></li>\n</ol>\n<p>This module provides the matplotlib powered ImagePlot class, which is designed to be flexible.\nImagePlots can have RA, Dec. coordinate axes, contour overlays, and have objects marked in them,\nusing WCS coordinates. RGB plots are supported too.</p>\n<dl class=\"py data\">\n<dt id=\"astLib.astPlots.DECIMAL_TICK_STEPS\">\n<code class=\"sig-prename descclassname\">astLib.astPlots.</code><code class=\"sig-name descname\">DECIMAL_TICK_STEPS</code><em class=\"property\"> = [0.001, 0.0025, 0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1.0, 2.0, 2.5, 5.0, 10.0, 30.0, 90.0]</em><a class=\"headerlink\" href=\"#astLib.astPlots.DECIMAL_TICK_STEPS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines the possible coordinate label steps on both coordinate axes in decimal degrees mode.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"astLib.astPlots.DEC_TICK_STEPS\">\n<code class=\"sig-prename descclassname\">astLib.astPlots.</code><code class=\"sig-name descname\">DEC_TICK_STEPS</code><em class=\"property\"> = [{'deg': 0.0002777777777777778, 'unit': 's'}, {'deg': 0.0005555555555555556, 'unit': 's'}, {'deg': 0.0013888888888888887, 'unit': 's'}, {'deg': 0.0027777777777777775, 'unit': 's'}, {'deg': 0.008333333333333333, 'unit': 's'}, {'deg': 0.016666666666666666, 'unit': 'm'}, {'deg': 0.03333333333333333, 'unit': 'm'}, {'deg': 0.08333333333333333, 'unit': 'm'}, {'deg': 0.25, 'unit': 'm'}, {'deg': 0.5, 'unit': 'm'}, {'deg': 1.0, 'unit': 'd'}, {'deg': 2.0, 'unit': 'd'}, {'deg': 4.0, 'unit': 'd'}, {'deg': 5.0, 'unit': 'd'}, {'deg': 10.0, 'unit': 'd'}, {'deg': 20.0, 'unit': 'd'}, {'deg': 30.0, 'unit': 'd'}]</em><a class=\"headerlink\" href=\"#astLib.astPlots.DEC_TICK_STEPS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines the possible coordinate label steps on the delination axis in\nsexagesimal mode. Dictionary format: {\u2018deg\u2019, \u2018unit\u2019}</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"astLib.astPlots.ImagePlot\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">astLib.astPlots.</code><code class=\"sig-name descname\">ImagePlot</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">imageData</span></em>, <em class=\"sig-param\"><span class=\"n\">imageWCS</span></em>, <em class=\"sig-param\"><span class=\"n\">axes</span><span class=\"o\">=</span><span class=\"default_value\">[0.1, 0.1, 0.8, 0.8]</span></em>, <em class=\"sig-param\"><span class=\"n\">cutLevels</span><span class=\"o\">=</span><span class=\"default_value\">['smart', 99.5]</span></em>, <em class=\"sig-param\"><span class=\"n\">colorMapName</span><span class=\"o\">=</span><span class=\"default_value\">'gray'</span></em>, <em class=\"sig-param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"default_value\">None</span></em>, <em class=\"sig-param\"><span class=\"n\">axesLabels</span><span class=\"o\">=</span><span class=\"default_value\">'sexagesimal'</span></em>, <em class=\"sig-param\"><span class=\"n\">axesFontFamily</span><span class=\"o\">=</span><span class=\"default_value\">'serif'</span></em>, <em class=\"sig-param\"><span class=\"n\">axesFontSize</span><span class=\"o\">=</span><span class=\"default_value\">12.0</span></em>, <em class=\"sig-param\"><span class=\"n\">RATickSteps</span><span class=\"o\">=</span><span class=\"default_value\">'auto'</span></em>, <em class=\"sig-param\"><span class=\"n\">decTickSteps</span><span class=\"o\">=</span><span class=\"default_value\">'auto'</span></em>, <em class=\"sig-param\"><span class=\"n\">colorBar</span><span class=\"o\">=</span><span class=\"default_value\">False</span></em>, <em class=\"sig-param\"><span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"default_value\">'bilinear'</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astPlots.ImagePlot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This class describes a matplotlib image plot containing an astronomical image with an\nassociated WCS.</p>\n<p>Objects within the image boundaries can be marked by passing their WCS coordinates to\n<a class=\"reference internal\" href=\"#astLib.astPlots.ImagePlot.addPlotObjects\" title=\"astLib.astPlots.ImagePlot.addPlotObjects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ImagePlot.addPlotObjects</span></code></a>.</p>\n<p>Other images can be overlaid using <a class=\"reference internal\" href=\"#astLib.astPlots.ImagePlot.addContourOverlay\" title=\"astLib.astPlots.ImagePlot.addContourOverlay\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ImagePlot.addContourOverlay</span></code></a>.</p>\n<p>For images rotated with North at the top, East at the left (as can be done using\n<code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">astImages.clipRotatedImageSectionWCS</span></code> or <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">astImages.resampleToTanProjection</span></code>, WCS coordinate\naxes can be plotted, with tick marks set appropriately for the image size. Otherwise, a compass\ncan be plotted showing the directions of North and East in the image.</p>\n<p>RGB images are also supported.</p>\n<p>The plot can of course be tweaked further after creation using matplotlib/pylab commands.</p>\n<dl class=\"py method\">\n<dt id=\"astLib.astPlots.ImagePlot.addCompass\">\n<code class=\"sig-name descname\">addCompass</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">location</span></em>, <em class=\"sig-param\"><span class=\"n\">sizeArcSec</span></em>, <em class=\"sig-param\"><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"default_value\">'white'</span></em>, <em class=\"sig-param\"><span class=\"n\">fontSize</span><span class=\"o\">=</span><span class=\"default_value\">12</span></em>, <em class=\"sig-param\"><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"default_value\">20.0</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astPlots.ImagePlot.addCompass\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Adds a compass to the ImagePlot at the given location (\u2018N\u2019, \u2018NE\u2019, \u2018E\u2019, \u2018SE\u2019, \u2018S\u2019,\n\u2018SW\u2019, \u2018W\u2019, or \u2018NW\u2019). Note these aren\u2019t directions on the WCS coordinate grid, they are\nrelative positions on the plot - so N is top centre, NE is top right, SW is bottom right etc..\nAlternatively, pixel coordinates (x, y) in the image can be given.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>location</strong> (<em>string</em><em> or </em><em>tuple</em>) \u2013 location in the plot where the compass is drawn:\n- string: N, NE, E, SE, S, SW, W or NW\n- tuple: (x, y)</p></li>\n<li><p><strong>sizeArcSec</strong> (<em>float</em>) \u2013 length of the compass arrows on the plot in arc seconds</p></li>\n<li><p><strong>color</strong> (<em>string</em>) \u2013 any valid matplotlib color string</p></li>\n<li><p><strong>fontSize</strong> (<em>float</em>) \u2013 size of font used to label N and E, in points</p></li>\n<li><p><strong>width</strong> (<em>float</em>) \u2013 width of arrows used to mark compass</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astPlots.ImagePlot.addContourOverlay\">\n<code class=\"sig-name descname\">addContourOverlay</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">contourImageData</span></em>, <em class=\"sig-param\"><span class=\"n\">contourWCS</span></em>, <em class=\"sig-param\"><span class=\"n\">tag</span></em>, <em class=\"sig-param\"><span class=\"n\">levels</span><span class=\"o\">=</span><span class=\"default_value\">['linear', 'min', 'max', 5]</span></em>, <em class=\"sig-param\"><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"default_value\">1</span></em>, <em class=\"sig-param\"><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"default_value\">'white'</span></em>, <em class=\"sig-param\"><span class=\"n\">smooth</span><span class=\"o\">=</span><span class=\"default_value\">0</span></em>, <em class=\"sig-param\"><span class=\"n\">highAccuracy</span><span class=\"o\">=</span><span class=\"default_value\">False</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astPlots.ImagePlot.addContourOverlay\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Adds image data to the ImagePlot as a contour overlay. The contours can be removed using\n<a class=\"reference internal\" href=\"#astLib.astPlots.ImagePlot.removeContourOverlay\" title=\"astLib.astPlots.ImagePlot.removeContourOverlay\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">removeContourOverlay</span></code></a>. If a contour overlay already exists with this tag, it will be replaced.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>contourImageData</strong> (<em>numpy array</em>) \u2013 image data array from which contours are to be generated</p></li>\n<li><p><strong>contourWCS</strong> (<a class=\"reference internal\" href=\"#astLib.astWCS.WCS\" title=\"astLib.astWCS.WCS\"><em>astWCS.WCS</em></a>) \u2013 astWCS.WCS object for the image to be contoured</p></li>\n<li><p><strong>tag</strong> (<em>string</em>) \u2013 identifying tag for this set of contours</p></li>\n<li><p><strong>levels</strong> (<em>list</em>) \u2013 sets the contour levels - available options:\n- values: contourLevels=[list of values specifying each level]\n- linear spacing: contourLevels=[\u2018linear\u2019, min level value, max level value, number\nof levels] - can use \u201cmin\u201d, \u201cmax\u201d to automatically set min, max levels from image data\n- log spacing: contourLevels=[\u2018log\u2019, min level value, max level value, number of\nlevels] - can use \u201cmin\u201d, \u201cmax\u201d to automatically set min, max levels from image data</p></li>\n<li><p><strong>width</strong> (<em>int</em>) \u2013 width of the overlaid contours</p></li>\n<li><p><strong>color</strong> (<em>string</em>) \u2013 color of the overlaid contours, specified by the name of a standard\nmatplotlib color, e.g., \u201cblack\u201d, \u201cwhite\u201d, \u201ccyan\u201d\netc. (do \u201chelp(pylab.colors)\u201d in the Python interpreter to see available options)</p></li>\n<li><p><strong>smooth</strong> (<em>float</em>) \u2013 standard deviation (in arcsec) of Gaussian filter for\npre-smoothing of contour image data (set to 0 for no smoothing)</p></li>\n<li><p><strong>highAccuracy</strong> (<em>bool</em>) \u2013 if True, sample every corresponding pixel in each image; otherwise, sample\nevery nth pixel, where n = the ratio of the image scales.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astPlots.ImagePlot.addPlotObjects\">\n<code class=\"sig-name descname\">addPlotObjects</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">objRAs</span></em>, <em class=\"sig-param\"><span class=\"n\">objDecs</span></em>, <em class=\"sig-param\"><span class=\"n\">tag</span></em>, <em class=\"sig-param\"><span class=\"n\">symbol</span><span class=\"o\">=</span><span class=\"default_value\">'circle'</span></em>, <em class=\"sig-param\"><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"default_value\">4.0</span></em>, <em class=\"sig-param\"><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"default_value\">1.0</span></em>, <em class=\"sig-param\"><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"default_value\">'yellow'</span></em>, <em class=\"sig-param\"><span class=\"n\">objLabels</span><span class=\"o\">=</span><span class=\"default_value\">None</span></em>, <em class=\"sig-param\"><span class=\"n\">objLabelSize</span><span class=\"o\">=</span><span class=\"default_value\">12.0</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astPlots.ImagePlot.addPlotObjects\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Add objects with RA, dec coords objRAs, objDecs to the ImagePlot. Only objects that fall within\nthe image boundaries will be plotted.</p>\n<p>symbol specifies the type of symbol with which to mark the object in the image. The following\nvalues are allowed:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>\u201ccircle\u201d</p></li>\n<li><p>\u201cbox\u201d</p></li>\n<li><p>\u201ccross\u201d</p></li>\n<li><p>\u201cdiamond\u201d</p></li>\n</ul>\n</div></blockquote>\n<p>size specifies the diameter in arcsec of the symbol (if plotSymbol == \u201ccircle\u201d), or the width\nof the box in arcsec (if plotSymbol == \u201cbox\u201d)</p>\n<p>width specifies the thickness of the symbol lines in pixels</p>\n<p>color can be any valid matplotlib color (e.g. \u201cred\u201d, \u201cgreen\u201d, etc.)</p>\n<p>The objects can be removed from the plot by using removePlotObjects(), and then calling\ndraw(). If the ImagePlot already has a set of plotObjects with the same tag, they will be\nreplaced.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>objRAs</strong> (<em>numpy array</em><em> or </em><em>list</em>) \u2013 object RA coords in decimal degrees</p></li>\n<li><p><strong>objDecs</strong> (<em>numpy array</em><em> or </em><em>list</em>) \u2013 corresponding object Dec. coords in decimal degrees</p></li>\n<li><p><strong>tag</strong> (<em>string</em>) \u2013 identifying tag for this set of objects</p></li>\n<li><p><strong>symbol</strong> (<em>string</em>) \u2013 either \u201ccircle\u201d, \u201cbox\u201d, \u201ccross\u201d, or \u201cdiamond\u201d</p></li>\n<li><p><strong>size</strong> (<em>float</em>) \u2013 size of symbols to plot (radius in arcsec, or width of box)</p></li>\n<li><p><strong>width</strong> (<em>float</em>) \u2013 width of symbols in pixels</p></li>\n<li><p><strong>color</strong> (<em>string</em>) \u2013 any valid matplotlib color string, e.g. \u201cred\u201d, \u201cgreen\u201d etc.</p></li>\n<li><p><strong>objLabels</strong> (<em>list</em>) \u2013 text labels to plot next to objects in figure</p></li>\n<li><p><strong>objLabelSize</strong> (<em>float</em>) \u2013 size of font used for object labels (in points)</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astPlots.ImagePlot.addScaleBar\">\n<code class=\"sig-name descname\">addScaleBar</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">location</span></em>, <em class=\"sig-param\"><span class=\"n\">sizeArcSec</span></em>, <em class=\"sig-param\"><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"default_value\">'white'</span></em>, <em class=\"sig-param\"><span class=\"n\">fontSize</span><span class=\"o\">=</span><span class=\"default_value\">12</span></em>, <em class=\"sig-param\"><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"default_value\">20.0</span></em>, <em class=\"sig-param\"><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"default_value\">None</span></em>, <em class=\"sig-param\"><span class=\"n\">style</span><span class=\"o\">=</span><span class=\"default_value\">'whiskers'</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astPlots.ImagePlot.addScaleBar\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Adds a scale bar to the ImagePlot at the given location (\u2018N\u2019, \u2018NE\u2019, \u2018E\u2019, \u2018SE\u2019, \u2018S\u2019,\n\u2018SW\u2019, \u2018W\u2019, or \u2018NW\u2019). Note these aren\u2019t directions on the WCS coordinate grid, they are\nrelative positions on the plot - so N is top centre, NE is top right, SW is bottom right etc..\nAlternatively, pixel coordinates (x, y) in the image can be given.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>location</strong> (<em>string</em><em> or </em><em>tuple</em>) \u2013 location in the plot where the compass is drawn:\n- string: N, NE, E, SE, S, SW, W or NW\n- tuple: (x, y)</p></li>\n<li><p><strong>sizeArcSec</strong> (<em>float</em>) \u2013 scale length to indicate on the plot in arc seconds</p></li>\n<li><p><strong>color</strong> (<em>string</em>) \u2013 any valid matplotlib color string</p></li>\n<li><p><strong>fontSize</strong> (<em>float</em>) \u2013 size of font used to label N and E, in points</p></li>\n<li><p><strong>width</strong> (<em>float</em>) \u2013 width of arrow used to mark scale</p></li>\n<li><p><strong>label</strong> (<em>string</em>) \u2013 overrides the displayed label if not None (if None, label is the angular size)</p></li>\n<li><p><strong>style</strong> (<em>string</em>) \u2013 either \u201cwhiskers\u201d or \u201carrows\u201d</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astPlots.ImagePlot.calcWCSAxisLabels\">\n<code class=\"sig-name descname\">calcWCSAxisLabels</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">axesLabels</span><span class=\"o\">=</span><span class=\"default_value\">'decimal'</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astPlots.ImagePlot.calcWCSAxisLabels\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function calculates the positions of coordinate labels for the RA and Dec axes of the\nImagePlot. The tick steps are calculated automatically unless self.RATickSteps,\nself.decTickSteps are set to values other than \u201cauto\u201d (see <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ImagePlot.__init__</span></code>).</p>\n<p>The ImagePlot must be redrawn for changes to be applied.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>axesLabels</strong> (<em>string</em>) \u2013 either \u201csexagesimal\u201d (for H:M:S, D:M:S), \u201cdecimal\u201d (for decimal degrees),</p>\n</dd>\n</dl>\n<p>or None for no coordinate axes labels</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astPlots.ImagePlot.draw\">\n<code class=\"sig-name descname\">draw</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astPlots.ImagePlot.draw\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Redraws the ImagePlot.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astPlots.ImagePlot.getTickSteps\">\n<code class=\"sig-name descname\">getTickSteps</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astPlots.ImagePlot.getTickSteps\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Chooses the appropriate WCS coordinate tick steps for the plot based on its size.\nWhether the ticks are decimal or sexagesimal is set by self.axesLabels.</p>\n<p>Note: minor ticks not used at the moment.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>dictionary</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>tick step sizes for major, minor plot ticks, in format {\u2018major\u2019, \u2018minor\u2019}</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astPlots.ImagePlot.removeContourOverlay\">\n<code class=\"sig-name descname\">removeContourOverlay</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">tag</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astPlots.ImagePlot.removeContourOverlay\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Removes the contourOverlay from the ImagePlot corresponding to the tag.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>tag</strong> (<em>string</em>) \u2013 tag for contour overlay in ImagePlot.contourOverlays to be removed</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astPlots.ImagePlot.removePlotObjects\">\n<code class=\"sig-name descname\">removePlotObjects</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">tag</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astPlots.ImagePlot.removePlotObjects\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Removes the plotObjects from the ImagePlot corresponding to the tag. The plot must be redrawn\nfor the change to take effect.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>tag</strong> (<em>string</em>) \u2013 tag for set of objects in ImagePlot.plotObjects to be removed</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astPlots.ImagePlot.save\">\n<code class=\"sig-name descname\">save</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">fileName</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astPlots.ImagePlot.save\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Saves the ImagePlot in any format that matplotlib can understand, as determined from the\nfileName extension.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>fileName</strong> (<em>string</em>) \u2013 path where plot will be written</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"astLib.astPlots.RA_TICK_STEPS\">\n<code class=\"sig-prename descclassname\">astLib.astPlots.</code><code class=\"sig-name descname\">RA_TICK_STEPS</code><em class=\"property\"> = [{'deg': 0.0020833333333333333, 'unit': 's'}, {'deg': 0.004166666666666667, 'unit': 's'}, {'deg': 0.008333333333333333, 'unit': 's'}, {'deg': 0.016666666666666666, 'unit': 's'}, {'deg': 0.020833333333333332, 'unit': 's'}, {'deg': 0.041666666666666664, 'unit': 's'}, {'deg': 0.08333333333333333, 'unit': 's'}, {'deg': 0.125, 'unit': 's'}, {'deg': 0.25, 'unit': 'm'}, {'deg': 0.5, 'unit': 'm'}, {'deg': 1.25, 'unit': 'm'}, {'deg': 2.5, 'unit': 'm'}, {'deg': 5.0, 'unit': 'm'}, {'deg': 7.5, 'unit': 'm'}, {'deg': 15.0, 'unit': 'h'}, {'deg': 45.0, 'unit': 'h'}, {'deg': 90.0, 'unit': 'h'}, {'deg': 180.0, 'unit': 'h'}]</em><a class=\"headerlink\" href=\"#astLib.astPlots.RA_TICK_STEPS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines the possible coordinate label steps on the right ascension axis in\nsexagesimal mode. Dictionary format: {\u2018deg\u2019, \u2018unit\u2019}</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-astLib.astWCS\">\n<span id=\"astwcs\"></span><h2>astWCS<a class=\"headerlink\" href=\"#module-astLib.astWCS\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Module for handling World Coordinate Systems (WCS).</p>\n<ol class=\"loweralpha simple\" start=\"3\">\n<li><p>2007-2012 Matt Hilton</p></li>\n</ol>\n<ol class=\"loweralpha simple\" start=\"3\">\n<li><p>2013-2020 Matt Hilton &amp; Steven Boada</p></li>\n</ol>\n<p>This is a higher level interface to some of the routines in PyWCSTools\n(distributed with astLib).\nPyWCSTools is a simple SWIG wrapping of WCSTools by Jessica Mink\n(<a class=\"reference external\" href=\"http://tdc-www.harvard.edu/software/wcstools/\">http://tdc-www.harvard.edu/software/wcstools/</a>). It is intended is to make\nthis interface complete enough such that direct use of PyWCSTools is\nunnecessary.</p>\n<dl class=\"py data\">\n<dt id=\"astLib.astWCS.NUMPY_MODE\">\n<code class=\"sig-prename descclassname\">astLib.astWCS.</code><code class=\"sig-name descname\">NUMPY_MODE</code><em class=\"property\"> = True</em><a class=\"headerlink\" href=\"#astLib.astWCS.NUMPY_MODE\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>If True (default), pixel coordinates accepted/returned by routines such as\n<code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">astWCS.WCS.pix2wcs</span></code>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">astWCS.WCS.wcs2pix</span></code> have (0, 0) as the origin. Set\nto False to make these routines accept/return pixel coords with (1, 1) as the\norigin (i.e. to match the FITS convention, default behaviour prior to astLib\nversion 0.3.0).</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"astLib.astWCS.WCS\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">astLib.astWCS.</code><code class=\"sig-name descname\">WCS</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">headerSource</span></em>, <em class=\"sig-param\"><span class=\"n\">extensionName</span><span class=\"o\">=</span><span class=\"default_value\">0</span></em>, <em class=\"sig-param\"><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"default_value\">'image'</span></em>, <em class=\"sig-param\"><span class=\"n\">zapKeywords</span><span class=\"o\">=</span><span class=\"default_value\">[]</span></em>, <em class=\"sig-param\"><span class=\"n\">useAstropyWCS</span><span class=\"o\">=</span><span class=\"default_value\">True</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.WCS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This class provides methods for accessing information from the World\nCoordinate System (WCS) contained in the header of a FITS image.\nConversions between pixel and WCS coordinates can also be performed.</p>\n<p>To create a WCS object from a FITS file called \u201ctest.fits\u201d, simply:</p>\n<p>WCS=astWCS.WCS(\u201ctest.fits\u201d)</p>\n<p>Likewise, to create a WCS object from the pyfits.header of \u201ctest.fits\u201d:</p>\n<p>img=pyfits.open(\u201ctest.fits\u201d)\nheader=img[0].header\nWCS=astWCS.WCS(header, mode = \u201cpyfits\u201d)</p>\n<dl class=\"py method\">\n<dt id=\"astLib.astWCS.WCS.coordsAreInImage\">\n<code class=\"sig-name descname\">coordsAreInImage</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">RADeg</span></em>, <em class=\"sig-param\"><span class=\"n\">decDeg</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.WCS.coordsAreInImage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns True if the given RA, dec coordinate is within the image\nboundaries.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>bool</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>True if coordinate within image, False if not.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astWCS.WCS.copy\">\n<code class=\"sig-name descname\">copy</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.WCS.copy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Copies the WCS object to a new object.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>astWCS.WCS object</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>WCS object</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astWCS.WCS.getCentreWCSCoords\">\n<code class=\"sig-name descname\">getCentreWCSCoords</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.WCS.getCentreWCSCoords\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the RA and dec coordinates (in decimal degrees) at the\ncentre of the WCS.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>list</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>coordinates in decimal degrees in format [RADeg, decDeg]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astWCS.WCS.getEpoch\">\n<code class=\"sig-name descname\">getEpoch</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.WCS.getEpoch\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the epoch of the WCS.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>float</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>epoch of the WCS</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astWCS.WCS.getEquinox\">\n<code class=\"sig-name descname\">getEquinox</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.WCS.getEquinox\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the equinox of the WCS.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>float</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>equinox of the WCS</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astWCS.WCS.getFullSizeSkyDeg\">\n<code class=\"sig-name descname\">getFullSizeSkyDeg</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.WCS.getFullSizeSkyDeg\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the width, height of the image according to the WCS in\ndecimal degrees on the sky (i.e., with the projection taken into\naccount).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>list</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>width and height of image in decimal degrees on the sky in\nformat [width, height]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astWCS.WCS.getHalfSizeDeg\">\n<code class=\"sig-name descname\">getHalfSizeDeg</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.WCS.getHalfSizeDeg\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the half-width, half-height of the image according to the\nWCS in RA and dec degrees.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>list</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>half-width and half-height of image in R.A., dec. decimal\ndegrees in format [half-width, half-height]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astWCS.WCS.getImageMinMaxWCSCoords\">\n<code class=\"sig-name descname\">getImageMinMaxWCSCoords</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.WCS.getImageMinMaxWCSCoords\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the minimum, maximum WCS coords defined by the size of the\nparent image (as defined by the NAXIS keywords in the image header).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>list</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>[minimum R.A., maximum R.A., minimum Dec., maximum Dec.]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astWCS.WCS.getPixelSizeDeg\">\n<code class=\"sig-name descname\">getPixelSizeDeg</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.WCS.getPixelSizeDeg\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the pixel scale of the WCS. This is the average of the x, y\npixel scales.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>float</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>pixel size in decimal degrees</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astWCS.WCS.getRotationDeg\">\n<code class=\"sig-name descname\">getRotationDeg</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.WCS.getRotationDeg\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the rotation angle in degrees around the axis, North through\nEast.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>float</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>rotation angle in degrees</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astWCS.WCS.getXPixelSizeDeg\">\n<code class=\"sig-name descname\">getXPixelSizeDeg</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.WCS.getXPixelSizeDeg\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the pixel scale along the x-axis of the WCS in degrees.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>float</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>pixel size in decimal degrees</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astWCS.WCS.getYPixelSizeDeg\">\n<code class=\"sig-name descname\">getYPixelSizeDeg</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.WCS.getYPixelSizeDeg\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the pixel scale along the y-axis of the WCS in degrees.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>float</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>pixel size in decimal degrees</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astWCS.WCS.isFlipped\">\n<code class=\"sig-name descname\">isFlipped</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.WCS.isFlipped\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns 1 if image is reflected around axis, otherwise returns 0.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>int</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>1 if image is flipped, 0 otherwise</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astWCS.WCS.pix2wcs\">\n<code class=\"sig-name descname\">pix2wcs</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">x</span></em>, <em class=\"sig-param\"><span class=\"n\">y</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.WCS.pix2wcs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the WCS coordinates corresponding to the input pixel\ncoordinates.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>list</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>WCS coordinates in format [RADeg, decDeg]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astWCS.WCS.updateFromHeader\">\n<code class=\"sig-name descname\">updateFromHeader</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.WCS.updateFromHeader\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Updates the WCS object using information from WCS.header. This\nroutine should be called whenever changes are made to WCS keywords in\nWCS.header.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astWCS.WCS.wcs2pix\">\n<code class=\"sig-name descname\">wcs2pix</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">RADeg</span></em>, <em class=\"sig-param\"><span class=\"n\">decDeg</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.WCS.wcs2pix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the pixel coordinates corresponding to the input WCS\ncoordinates (given in decimal degrees). RADeg, decDeg can be single\nfloats, or lists or np arrays.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>list</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>pixel coordinates in format [x, y]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astWCS.findWCSOverlap\">\n<code class=\"sig-prename descclassname\">astLib.astWCS.</code><code class=\"sig-name descname\">findWCSOverlap</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">wcs1</span></em>, <em class=\"sig-param\"><span class=\"n\">wcs2</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astWCS.findWCSOverlap\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Finds the minimum, maximum WCS coords that overlap between wcs1 and\nwcs2. Returns these coordinates, plus the corresponding pixel coordinates\nfor each wcs. Useful for clipping overlapping region between two images.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>dictionary</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>dictionary with keys \u2018overlapWCS\u2019 (min, max RA, dec of overlap\nbetween wcs1, wcs2) \u2018wcs1Pix\u2019, \u2018wcs2Pix\u2019 (pixel coords in each input\nWCS that correspond to \u2018overlapWCS\u2019 coords)</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-astLib.astSED\">\n<span id=\"astsed\"></span><h2>astSED<a class=\"headerlink\" href=\"#module-astLib.astSED\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Module for performing calculations on Spectral Energy Distributions (SEDs).</p>\n<ol class=\"loweralpha simple\" start=\"3\">\n<li><p>2007-2013 Matt Hilton</p></li>\n</ol>\n<p>This module provides classes for manipulating SEDs, in particular the Bruzual &amp; Charlot 2003, Maraston\n2005, and Percival et al 2009 stellar population synthesis models are currently supported. Functions are\nprovided for calculating the evolution of colours and magnitudes in these models with redshift etc., and\nfor fitting broadband photometry using these models.</p>\n<dl class=\"py data\">\n<dt id=\"astLib.astSED.AB\">\n<code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">AB</code><em class=\"property\"> = &lt;astLib.astSED.SED object&gt;</em><a class=\"headerlink\" href=\"#astLib.astSED.AB\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Flat spectrum SED, used for calculation of magnitudes on the AB system (<a class=\"reference internal\" href=\"#astLib.astSED.SED\" title=\"astLib.astSED.SED\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SED</span></code></a> object).</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"astLib.astSED.BC03Model\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">BC03Model</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">fileName</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.BC03Model\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This class describes a Bruzual &amp; Charlot 2003 stellar population model, extracted from a GALAXEV .ised\nfile using the galaxevpl program that is included in GALAXEV. The file format is white space delimited,\nwith wavelength in the first column. Subsequent columns contain the model fluxes for SEDs of different\nages, as specified when running galaxevpl. The age corresponding to each flux column is taken from the\ncomment line beginning \u201c# Age (yr)\u201d, and is converted to Gyr.</p>\n<p>For example, to load a tau = 0.1 Gyr burst of star formation,  solar metallicity, Salpeter IMF model\nstored in a file (created by galaxevpl) called \u201ccsp_lr_solar_0p1Gyr.136\u201d:</p>\n<p>bc03model = BC03Model(\u201ccsp_lr_solar_0p1Gyr.136\u201d)</p>\n<p>The wavelength units of SEDs from BC03 models are Angstroms. Flux is converted into units of\nerg/s/Angstrom (the units in the files output by galaxevpl are LSun/Angstrom).</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astSED.Jy2Mag\">\n<code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">Jy2Mag</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">fluxJy</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.Jy2Mag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Converts flux density in Jy into AB magnitude</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>fluxJy</strong> (<em>float</em>) \u2013 flux density in Jy</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>AB magnitude</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"astLib.astSED.M05Model\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">M05Model</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">fileName</span></em>, <em class=\"sig-param\"><span class=\"n\">fileType</span><span class=\"o\">=</span><span class=\"default_value\">'csp'</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.M05Model\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This class describes a Maraston 2005 stellar population model. To load a composite stellar population\nmodel (CSP) for a tau = 0.1 Gyr burst of star formation, solar metallicity, Salpeter IMF:</p>\n<p>m05csp = astSED.M05Model(M05_DIR+\u201d/csp_e_0.10_z02_salp.sed_agb\u201d)</p>\n<p>where M05_DIR is set to point to the directory where the Maraston 2005 models are stored on your system.</p>\n<p>The file format of the Maraston 2005 simple stellar poulation (SSP) models is different to the file\nformat used for the CSPs, and this needs to be specified using the fileType parameter. To load a SSP with\nsolar metallicity, red horizontal branch morphology:</p>\n<p>m05ssp = astSED.M05Model(M05_DIR+\u201d/sed.ssz002.rhb\u201d, fileType = \u201cssp\u201d)</p>\n<p>The wavelength units of SEDs from M05 models are Angstroms, with flux in units of erg/s/Angstrom.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"astLib.astSED.P09Model\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">P09Model</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">fileName</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.P09Model\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This class describes a Percival et al 2009 (BaSTI; <a class=\"reference external\" href=\"http://albione.oa-teramo.inaf.it\">http://albione.oa-teramo.inaf.it</a>) stellar\npopulation model. We assume that the synthetic spectra for each model are unpacked under the directory\npointed to by fileName.</p>\n<p>The wavelength units of SEDs from P09 models are converted to Angstroms. Flux is converted into units of\nerg/s/Angstrom (the units in the BaSTI low-res spectra are 4.3607e-33 erg/s/m).</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"astLib.astSED.Passband\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">Passband</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">fileName</span></em>, <em class=\"sig-param\"><span class=\"n\">normalise</span><span class=\"o\">=</span><span class=\"default_value\">True</span></em>, <em class=\"sig-param\"><span class=\"n\">inputUnits</span><span class=\"o\">=</span><span class=\"default_value\">'angstroms'</span></em>, <em class=\"sig-param\"><span class=\"n\">wavelengthColumn</span><span class=\"o\">=</span><span class=\"default_value\">0</span></em>, <em class=\"sig-param\"><span class=\"n\">transmissionColumn</span><span class=\"o\">=</span><span class=\"default_value\">1</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.Passband\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This class describes a filter transmission curve. Passband objects are created by loading data from\nfrom text files containing wavelength in angstroms in the first column, relative transmission efficiency\nin the second column (whitespace delimited). For example, to create a Passband object for the 2MASS J\nfilter:</p>\n<p>passband=astSED.Passband(\u201cJ_2MASS.res\u201d)</p>\n<p>where \u201cJ_2MASS.res\u201d is a file in the current working directory that describes the filter.</p>\n<p>Wavelength units can be specified as \u2018angstroms\u2019, \u2018nanometres\u2019 or \u2018microns\u2019; if either of the latter,\nthey will be converted to angstroms.</p>\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.Passband.asList\">\n<code class=\"sig-name descname\">asList</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.Passband.asList\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a two dimensional list of [wavelength, transmission], suitable for plotting by gnuplot.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>list</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>list in format [wavelength, transmission]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.Passband.effectiveWavelength\">\n<code class=\"sig-name descname\">effectiveWavelength</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.Passband.effectiveWavelength\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates effective wavelength for the passband. This is the same as equation (3) of\nCarter et al. 2009.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>float</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>effective wavelength of the passband, in Angstroms</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.Passband.plot\">\n<code class=\"sig-name descname\">plot</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">xmin</span><span class=\"o\">=</span><span class=\"default_value\">'min'</span></em>, <em class=\"sig-param\"><span class=\"n\">xmax</span><span class=\"o\">=</span><span class=\"default_value\">'max'</span></em>, <em class=\"sig-param\"><span class=\"n\">maxTransmission</span><span class=\"o\">=</span><span class=\"default_value\">None</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.Passband.plot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Plots the passband, rescaling the maximum of the tranmission curve to maxTransmission if\nrequired.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>xmin</strong> (<em>float</em><em> or </em><em>'min'</em>) \u2013 minimum of the wavelength range of the plot</p></li>\n<li><p><strong>xmax</strong> (<em>float</em><em> or </em><em>'max'</em>) \u2013 maximum of the wavelength range of the plot</p></li>\n<li><p><strong>maxTransmission</strong> (<em>float</em>) \u2013 maximum value of rescaled transmission curve</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.Passband.rescale\">\n<code class=\"sig-name descname\">rescale</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">maxTransmission</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.Passband.rescale\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Rescales the passband so that maximum value of the transmission is equal to maxTransmission.\nUseful for plotting.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>maxTransmission</strong> (<em>float</em>) \u2013 maximum value of rescaled transmission curve</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"astLib.astSED.SED\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">SED</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">wavelength</span><span class=\"o\">=</span><span class=\"default_value\">[]</span></em>, <em class=\"sig-param\"><span class=\"n\">flux</span><span class=\"o\">=</span><span class=\"default_value\">[]</span></em>, <em class=\"sig-param\"><span class=\"n\">z</span><span class=\"o\">=</span><span class=\"default_value\">0.0</span></em>, <em class=\"sig-param\"><span class=\"n\">ageGyr</span><span class=\"o\">=</span><span class=\"default_value\">None</span></em>, <em class=\"sig-param\"><span class=\"n\">normalise</span><span class=\"o\">=</span><span class=\"default_value\">False</span></em>, <em class=\"sig-param\"><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"default_value\">None</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.SED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This class describes a Spectral Energy Distribution (SED).</p>\n<p>To create a SED object, lists (or numpy arrays) of wavelength and relative flux must be provided. The SED\ncan optionally be redshifted. The wavelength units of SEDs are assumed to be Angstroms - flux\ncalculations using Passband and SED objects specified with different wavelength units will be incorrect.</p>\n<p>The <a class=\"reference internal\" href=\"#astLib.astSED.StellarPopulation\" title=\"astLib.astSED.StellarPopulation\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">StellarPopulation</span></code></a> class (and derivatives) can be used to extract SEDs for specified ages from e.g.\nthe Bruzual &amp; Charlot 2003 or Maraston 2005 models.</p>\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.SED.asList\">\n<code class=\"sig-name descname\">asList</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.SED.asList\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a two dimensional list of [wavelength, flux], suitable for plotting by gnuplot.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>list</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>list in format [wavelength, flux]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.SED.calcColour\">\n<code class=\"sig-name descname\">calcColour</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">passband1</span></em>, <em class=\"sig-param\"><span class=\"n\">passband2</span></em>, <em class=\"sig-param\"><span class=\"n\">magType</span><span class=\"o\">=</span><span class=\"default_value\">'Vega'</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.SED.calcColour\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the colour passband1-passband2.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>passband1</strong> (<a class=\"reference internal\" href=\"#astLib.astSED.Passband\" title=\"astLib.astSED.Passband\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Passband</span></code></a> object) \u2013 filter passband through which to calculate the first magnitude</p></li>\n<li><p><strong>passband1</strong> \u2013 filter passband through which to calculate the second magnitude</p></li>\n<li><p><strong>magType</strong> (<em>string</em>) \u2013 either \u201cVega\u201d or \u201cAB\u201d</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>colour defined by passband1 - passband2 on the specified magnitude system</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.SED.calcFlux\">\n<code class=\"sig-name descname\">calcFlux</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">passband</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.SED.calcFlux\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates flux in the given passband.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>passband</strong> (<a class=\"reference internal\" href=\"#astLib.astSED.Passband\" title=\"astLib.astSED.Passband\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Passband</span></code></a> object) \u2013 filter passband through which to calculate the flux from the SED</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>flux</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.SED.calcMag\">\n<code class=\"sig-name descname\">calcMag</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">passband</span></em>, <em class=\"sig-param\"><span class=\"n\">addDistanceModulus</span><span class=\"o\">=</span><span class=\"default_value\">True</span></em>, <em class=\"sig-param\"><span class=\"n\">magType</span><span class=\"o\">=</span><span class=\"default_value\">'Vega'</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.SED.calcMag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates magnitude in the given passband. If addDistanceModulus == True,\nthen the distance modulus (5.0*log10*(dl*1e5), where dl is the luminosity distance\nin Mpc at the redshift of the <a class=\"reference internal\" href=\"#astLib.astSED.SED\" title=\"astLib.astSED.SED\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SED</span></code></a>) is added.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>passband</strong> (<a class=\"reference internal\" href=\"#astLib.astSED.Passband\" title=\"astLib.astSED.Passband\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Passband</span></code></a> object) \u2013 filter passband through which to calculate the magnitude from the SED</p></li>\n<li><p><strong>addDistanceModulus</strong> (<em>bool</em>) \u2013 if True, adds 5.0*log10*(dl*1e5) to the mag returned, where\ndl is the luminosity distance (Mpc) corresponding to the SED z</p></li>\n<li><p><strong>magType</strong> (<em>string</em>) \u2013 either \u201cVega\u201d or \u201cAB\u201d</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>magnitude through the given passband on the specified magnitude system</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.SED.copy\">\n<code class=\"sig-name descname\">copy</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.SED.copy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Copies the SED, returning a new SED object</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#astLib.astSED.SED\" title=\"astLib.astSED.SED\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SED</span></code></a> object</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>SED</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.SED.extinctionCalzetti\">\n<code class=\"sig-name descname\">extinctionCalzetti</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">EBMinusV</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.SED.extinctionCalzetti\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Applies the Calzetti et al. 2000 (ApJ, 533, 682) extinction law to the SED with the given\nE(B-V) amount of extinction. R_v\u2019 = 4.05 is assumed (see equation (5) of Calzetti et al.).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>EBMinusV</strong> (<em>float</em>) \u2013 extinction E(B-V), in magnitudes</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.SED.getSEDDict\">\n<code class=\"sig-name descname\">getSEDDict</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">passbands</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.SED.getSEDDict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This is a convenience function for pulling out fluxes from a SED for a given set of passbands\nin the same format as made by <a class=\"reference internal\" href=\"#astLib.astSED.mags2SEDDict\" title=\"astLib.astSED.mags2SEDDict\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">mags2SEDDict</span></code></a> - designed to make fitting code simpler.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>passbands</strong> (list of <a class=\"reference internal\" href=\"#astLib.astSED.Passband\" title=\"astLib.astSED.Passband\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Passband</span></code></a> objects) \u2013 list of passbands through which fluxes will be calculated</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.SED.integrate\">\n<code class=\"sig-name descname\">integrate</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">wavelengthMin</span><span class=\"o\">=</span><span class=\"default_value\">'min'</span></em>, <em class=\"sig-param\"><span class=\"n\">wavelengthMax</span><span class=\"o\">=</span><span class=\"default_value\">'max'</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.SED.integrate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates flux in SED within given wavelength range.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>wavelengthMin</strong> (<em>float</em><em> or </em><em>'min'</em>) \u2013 minimum of the wavelength range</p></li>\n<li><p><strong>wavelengthMax</strong> (<em>float</em><em> or </em><em>'max'</em>) \u2013 maximum of the wavelength range</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>relative flux</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.SED.loadFromFile\">\n<code class=\"sig-name descname\">loadFromFile</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">fileName</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.SED.loadFromFile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Loads SED from a white space delimited file in the format wavelength, flux. Lines beginning with\n# are ignored.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>fileName</strong> (<em>string</em>) \u2013 path to file containing wavelength, flux data</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.SED.matchFlux\">\n<code class=\"sig-name descname\">matchFlux</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">matchSED</span></em>, <em class=\"sig-param\"><span class=\"n\">minWavelength</span></em>, <em class=\"sig-param\"><span class=\"n\">maxWavelength</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.SED.matchFlux\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Matches the flux in the wavelength range given by minWavelength, maxWavelength to the\nflux in the same region in matchSED. Useful for plotting purposes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>matchSED</strong> (<a class=\"reference internal\" href=\"#astLib.astSED.SED\" title=\"astLib.astSED.SED\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SED</span></code></a> object) \u2013 SED to match flux to</p></li>\n<li><p><strong>minWavelength</strong> (<em>float</em>) \u2013 minimum of range in which to match flux of current SED to matchSED</p></li>\n<li><p><strong>maxWavelength</strong> (<em>float</em>) \u2013 maximum of range in which to match flux of current SED to matchSED</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.SED.normalise\">\n<code class=\"sig-name descname\">normalise</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">minWavelength</span><span class=\"o\">=</span><span class=\"default_value\">'min'</span></em>, <em class=\"sig-param\"><span class=\"n\">maxWavelength</span><span class=\"o\">=</span><span class=\"default_value\">'max'</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.SED.normalise\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Normalises the SED such that the area under the specified wavelength range is equal to 1.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>minWavelength</strong> (<em>float</em><em> or </em><em>'min'</em>) \u2013 minimum wavelength of range over which to normalise SED</p></li>\n<li><p><strong>maxWavelength</strong> (<em>float</em><em> or </em><em>'max'</em>) \u2013 maximum wavelength of range over which to normalise SED</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.SED.normaliseToMag\">\n<code class=\"sig-name descname\">normaliseToMag</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">ABMag</span></em>, <em class=\"sig-param\"><span class=\"n\">passband</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.SED.normaliseToMag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Normalises the SED to match the flux equivalent to the given AB magnitude in the given passband.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>ABMag</strong> (<em>float</em>) \u2013 AB magnitude to which the SED is to be normalised at the given passband</p></li>\n<li><p><strong>passband</strong> (an <a class=\"reference internal\" href=\"#astLib.astSED.Passband\" title=\"astLib.astSED.Passband\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Passband</span></code></a> object) \u2013 passband at which normalisation to AB magnitude is calculated</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.SED.plot\">\n<code class=\"sig-name descname\">plot</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">xmin</span><span class=\"o\">=</span><span class=\"default_value\">'min'</span></em>, <em class=\"sig-param\"><span class=\"n\">xmax</span><span class=\"o\">=</span><span class=\"default_value\">'max'</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.SED.plot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Produces a simple (wavelength, flux) plot of the SED.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>xmin</strong> (<em>float</em><em> or </em><em>'min'</em>) \u2013 minimum of the wavelength range of the plot</p></li>\n<li><p><strong>xmax</strong> (<em>float</em><em> or </em><em>'max'</em>) \u2013 maximum of the wavelength range of the plot</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.SED.redshift\">\n<code class=\"sig-name descname\">redshift</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">z</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.SED.redshift\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Redshifts the SED to redshift z.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>z</strong> (<em>float</em>) \u2013 redshift</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.SED.smooth\">\n<code class=\"sig-name descname\">smooth</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">smoothPix</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.SED.smooth\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Smooths SED.flux with a uniform (boxcar) filter of width smoothPix. Cannot be undone.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>smoothPix</strong> (<em>int</em>) \u2013 size of uniform filter applied to SED, in pixels</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.SED.writeToFile\">\n<code class=\"sig-name descname\">writeToFile</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">fileName</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.SED.writeToFile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Writes SED to a white space delimited file in the format wavelength, flux.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>fileName</strong> (<em>string</em>) \u2013 path to file</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"astLib.astSED.SOL\">\n<code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">SOL</code><em class=\"property\"> = &lt;astLib.astSED.SED object&gt;</em><a class=\"headerlink\" href=\"#astLib.astSED.SOL\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The SED of the Sun (<a class=\"reference internal\" href=\"#astLib.astSED.SED\" title=\"astLib.astSED.SED\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SED</span></code></a> object).</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"astLib.astSED.StellarPopulation\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">StellarPopulation</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">fileName</span></em>, <em class=\"sig-param\"><span class=\"n\">ageColumn</span><span class=\"o\">=</span><span class=\"default_value\">0</span></em>, <em class=\"sig-param\"><span class=\"n\">wavelengthColumn</span><span class=\"o\">=</span><span class=\"default_value\">1</span></em>, <em class=\"sig-param\"><span class=\"n\">fluxColumn</span><span class=\"o\">=</span><span class=\"default_value\">2</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.StellarPopulation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This class describes a stellar population model, either a Simple Stellar Population (SSP) or a\nComposite Stellar Population (CSP), such as the models of Bruzual &amp; Charlot 2003 or Maraston 2005.</p>\n<p>The constructor for this class can be used for generic SSPs or CSPs stored in white space delimited text\nfiles, containing columns for age, wavelength, and flux. Columns are counted from 0 \u2026 n. Lines starting\nwith # are ignored.</p>\n<p>The classes <a class=\"reference internal\" href=\"#astLib.astSED.M05Model\" title=\"astLib.astSED.M05Model\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">M05Model</span></code></a> (for Maraston 2005 models), <a class=\"reference internal\" href=\"#astLib.astSED.BC03Model\" title=\"astLib.astSED.BC03Model\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">BC03Model</span></code></a> (for Bruzual &amp; Charlot 2003 models), and\n<a class=\"reference internal\" href=\"#astLib.astSED.P09Model\" title=\"astLib.astSED.P09Model\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">P09Model</span></code></a> (for Percival et al. 2009 models) are derived from this class. The only difference between\nthem is the code used to load in the model data.</p>\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.StellarPopulation.calcEvolutionCorrection\">\n<code class=\"sig-name descname\">calcEvolutionCorrection</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">zFrom</span></em>, <em class=\"sig-param\"><span class=\"n\">zTo</span></em>, <em class=\"sig-param\"><span class=\"n\">zFormation</span></em>, <em class=\"sig-param\"><span class=\"n\">passband</span></em>, <em class=\"sig-param\"><span class=\"n\">magType</span><span class=\"o\">=</span><span class=\"default_value\">'Vega'</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.StellarPopulation.calcEvolutionCorrection\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the evolution correction in magnitudes in the rest frame through the passband\nfrom redshift zFrom to redshift zTo, where the stellarPopulation is assumed to be formed\nat redshift zFormation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>zFormation</strong> (<em>float</em>) \u2013 redshift to evolution correct from</p></li>\n<li><p><strong>zTo</strong> (<em>float</em>) \u2013 redshift to evolution correct to</p></li>\n<li><p><strong>zFormation</strong> \u2013 formation redshift of the StellarPopulation</p></li>\n<li><p><strong>passband</strong> (<a class=\"reference internal\" href=\"#astLib.astSED.Passband\" title=\"astLib.astSED.Passband\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Passband</span></code></a> object) \u2013 filter passband through which to calculate magnitude</p></li>\n<li><p><strong>magType</strong> (<em>string</em>) \u2013 either \u201cVega\u201d or \u201cAB\u201d</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>evolution correction in magnitudes in the rest frame</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.StellarPopulation.getColourEvolution\">\n<code class=\"sig-name descname\">getColourEvolution</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">passband1</span></em>, <em class=\"sig-param\"><span class=\"n\">passband2</span></em>, <em class=\"sig-param\"><span class=\"n\">zFormation</span></em>, <em class=\"sig-param\"><span class=\"n\">zStepSize</span><span class=\"o\">=</span><span class=\"default_value\">0.05</span></em>, <em class=\"sig-param\"><span class=\"n\">magType</span><span class=\"o\">=</span><span class=\"default_value\">'Vega'</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.StellarPopulation.getColourEvolution\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the evolution of the colour observed through passband1 - passband2 for the\nStellarPopulation with redshift, from z = 0 to z = zFormation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>passband1</strong> (<a class=\"reference internal\" href=\"#astLib.astSED.Passband\" title=\"astLib.astSED.Passband\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Passband</span></code></a> object) \u2013 filter passband through which to calculate the first magnitude</p></li>\n<li><p><strong>passband2</strong> (<a class=\"reference internal\" href=\"#astLib.astSED.Passband\" title=\"astLib.astSED.Passband\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Passband</span></code></a> object) \u2013 filter passband through which to calculate the second magnitude</p></li>\n<li><p><strong>zFormation</strong> (<em>float</em>) \u2013 formation redshift of the StellarPopulation</p></li>\n<li><p><strong>zStepSize</strong> (<em>float</em>) \u2013 size of interval in z at which to calculate model colours</p></li>\n<li><p><strong>magType</strong> (<em>string</em>) \u2013 either \u201cVega\u201d or \u201cAB\u201d</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>dictionary</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>dictionary of numpy.arrays in format {\u2018z\u2019, \u2018colour\u2019}</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.StellarPopulation.getMagEvolution\">\n<code class=\"sig-name descname\">getMagEvolution</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">passband</span></em>, <em class=\"sig-param\"><span class=\"n\">magNormalisation</span></em>, <em class=\"sig-param\"><span class=\"n\">zNormalisation</span></em>, <em class=\"sig-param\"><span class=\"n\">zFormation</span></em>, <em class=\"sig-param\"><span class=\"n\">zStepSize</span><span class=\"o\">=</span><span class=\"default_value\">0.05</span></em>, <em class=\"sig-param\"><span class=\"n\">onePlusZSteps</span><span class=\"o\">=</span><span class=\"default_value\">False</span></em>, <em class=\"sig-param\"><span class=\"n\">magType</span><span class=\"o\">=</span><span class=\"default_value\">'Vega'</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.StellarPopulation.getMagEvolution\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the evolution with redshift (from z = 0 to z = zFormation) of apparent magnitude\nin the observed frame through the passband for the StellarPopulation, normalised to magNormalisation\n(apparent) at z = zNormalisation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>passband</strong> (<a class=\"reference internal\" href=\"#astLib.astSED.Passband\" title=\"astLib.astSED.Passband\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Passband</span></code></a> object) \u2013 filter passband through which to calculate the magnitude</p></li>\n<li><p><strong>magNormalisation</strong> (<em>float</em>) \u2013 sets the apparent magnitude of the SED at zNormalisation</p></li>\n<li><p><strong>zNormalisation</strong> (<em>float</em>) \u2013 the redshift at which the magnitude normalisation is carried out</p></li>\n<li><p><strong>zFormation</strong> (<em>float</em>) \u2013 formation redshift of the StellarPopulation</p></li>\n<li><p><strong>zStepSize</strong> (<em>float</em>) \u2013 size of interval in z at which to calculate model magnitudes</p></li>\n<li><p><strong>onePlusZSteps</strong> (<em>bool</em>) \u2013 if True, zSteps are (1+z)*zStepSize, otherwise zSteps are linear</p></li>\n<li><p><strong>magType</strong> (<em>string</em>) \u2013 either \u201cVega\u201d or \u201cAB\u201d</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>dictionary</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>dictionary of numpy.arrays in format {\u2018z\u2019, \u2018mag\u2019}</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"astLib.astSED.StellarPopulation.getSED\">\n<code class=\"sig-name descname\">getSED</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">ageGyr</span></em>, <em class=\"sig-param\"><span class=\"n\">z</span><span class=\"o\">=</span><span class=\"default_value\">0.0</span></em>, <em class=\"sig-param\"><span class=\"n\">normalise</span><span class=\"o\">=</span><span class=\"default_value\">False</span></em>, <em class=\"sig-param\"><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"default_value\">None</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.StellarPopulation.getSED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Extract a SED for given age. Do linear interpolation between models if necessary.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>ageGyr</strong> (<em>float</em>) \u2013 age of the SED in Gyr</p></li>\n<li><p><strong>z</strong> (<em>float</em>) \u2013 redshift the SED from z = 0 to z = z</p></li>\n<li><p><strong>normalise</strong> (<em>bool</em>) \u2013 normalise the SED to have area 1</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"#astLib.astSED.SED\" title=\"astLib.astSED.SED\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SED</span></code></a> object</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>SED</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"astLib.astSED.TopHatPassband\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">TopHatPassband</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">wavelengthMin</span></em>, <em class=\"sig-param\"><span class=\"n\">wavelengthMax</span></em>, <em class=\"sig-param\"><span class=\"n\">normalise</span><span class=\"o\">=</span><span class=\"default_value\">True</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.TopHatPassband\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This class generates a passband with a top hat response between the given wavelengths.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"astLib.astSED.VEGA\">\n<code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">VEGA</code><em class=\"property\"> = &lt;astLib.astSED.VegaSED object&gt;</em><a class=\"headerlink\" href=\"#astLib.astSED.VEGA\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The SED of Vega, used for calculation of magnitudes on the Vega system (<a class=\"reference internal\" href=\"#astLib.astSED.SED\" title=\"astLib.astSED.SED\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SED</span></code></a> object).</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"astLib.astSED.VegaSED\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">VegaSED</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">normalise</span><span class=\"o\">=</span><span class=\"default_value\">False</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.VegaSED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This class stores the SED of Vega, used for calculation of magnitudes on the Vega system.</p>\n<p>The Vega SED used is taken from Bohlin 2007 (<a class=\"reference external\" href=\"http://adsabs.harvard.edu/abs/2007ASPC..364..315B\">http://adsabs.harvard.edu/abs/2007ASPC..364..315B</a>), and is\navailable from the STScI CALSPEC library (<a class=\"reference external\" href=\"http://www.stsci.edu/hst/observatory/cdbs/calspec.html\">http://www.stsci.edu/hst/observatory/cdbs/calspec.html</a>).</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astSED.fitSEDDict\">\n<code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">fitSEDDict</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">SEDDict</span></em>, <em class=\"sig-param\"><span class=\"n\">modelSEDDictList</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.fitSEDDict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fits the given SED dictionary (made using <a class=\"reference internal\" href=\"#astLib.astSED.mags2SEDDict\" title=\"astLib.astSED.mags2SEDDict\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">mags2SEDDict</span></code></a>) with the given list of model SED\ndictionaries. The latter should be made using <a class=\"reference internal\" href=\"#astLib.astSED.makeModelSEDDictList\" title=\"astLib.astSED.makeModelSEDDictList\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">makeModelSEDDictList</span></code></a>, and entries for fluxes should\ncorrespond directly between the model and SEDDict.</p>\n<p>Returns a dictionary with best fit values.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>SEDDict</strong> (dictionary, in format of <a class=\"reference internal\" href=\"#astLib.astSED.mags2SEDDict\" title=\"astLib.astSED.mags2SEDDict\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">mags2SEDDict</span></code></a>) \u2013 dictionary of observed fluxes and uncertainties, in format of <a class=\"reference internal\" href=\"#astLib.astSED.mags2SEDDict\" title=\"astLib.astSED.mags2SEDDict\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">mags2SEDDict</span></code></a></p></li>\n<li><p><strong>modelSEDDictList</strong> (list of dictionaries, in format of <a class=\"reference internal\" href=\"#astLib.astSED.makeModelSEDDictList\" title=\"astLib.astSED.makeModelSEDDictList\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">makeModelSEDDictList</span></code></a>) \u2013 list of dictionaries containing fluxes of models to be fitted to the observed fluxes listed in the SEDDict. This should be made using <a class=\"reference internal\" href=\"#astLib.astSED.makeModelSEDDictList\" title=\"astLib.astSED.makeModelSEDDictList\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">makeModelSEDDictList</span></code></a>.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>dictionary</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>results of the fitting - keys:\n- \u2018minChiSq\u2019: minimum chi squared value of best fit\n- \u2018chiSqContrib\u2019: corresponding contribution at each passband to the minimum chi squared value\n- \u2018ageGyr\u2019: the age in Gyr of the best fitting model\n- \u2018modelFileName\u2019: the file name of the stellar population model corresponding to the best fit\n- \u2018modelListIndex\u2019: the index of the best fitting model in the input modelSEDDictList\n- \u2018norm\u2019: the normalisation that the best fit model should be multiplied by to match the SEDDict\n- \u2018z\u2019: the redshift of the best fit model\n- \u2018E(B-V)\u2019: the extinction, E(B-V), in magnitudes, of the best fit model</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astSED.flux2Mag\">\n<code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">flux2Mag</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">flux</span></em>, <em class=\"sig-param\"><span class=\"n\">fluxErr</span></em>, <em class=\"sig-param\"><span class=\"n\">passband</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.flux2Mag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Converts given flux and uncertainty in erg/s/cm^2/Angstrom into AB magnitudes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>flux</strong> (<em>float</em>) \u2013 flux in erg/s/cm^2/Angstrom in passband</p></li>\n<li><p><strong>fluxErr</strong> (<em>float</em>) \u2013 uncertainty in flux in passband, in erg/s/cm^2/Angstrom</p></li>\n<li><p><strong>passband</strong> (<a class=\"reference internal\" href=\"#astLib.astSED.Passband\" title=\"astLib.astSED.Passband\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Passband</span></code></a> object) \u2013 <a class=\"reference internal\" href=\"#astLib.astSED.Passband\" title=\"astLib.astSED.Passband\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Passband</span></code></a> object at which ABMag was measured</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>list</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>[ABMag, ABMagError], in AB magnitudes</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astSED.mag2Flux\">\n<code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">mag2Flux</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">ABMag</span></em>, <em class=\"sig-param\"><span class=\"n\">ABMagErr</span></em>, <em class=\"sig-param\"><span class=\"n\">passband</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.mag2Flux\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Converts given AB magnitude and uncertainty into flux, in erg/s/cm^2/Angstrom.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>ABMag</strong> (<em>float</em>) \u2013 magnitude on AB system in passband</p></li>\n<li><p><strong>ABMagErr</strong> (<em>float</em>) \u2013 uncertainty in AB magnitude in passband</p></li>\n<li><p><strong>passband</strong> (<a class=\"reference internal\" href=\"#astLib.astSED.Passband\" title=\"astLib.astSED.Passband\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Passband</span></code></a> object) \u2013 <a class=\"reference internal\" href=\"#astLib.astSED.Passband\" title=\"astLib.astSED.Passband\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Passband</span></code></a> object at which ABMag was measured</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>list</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>[flux, fluxError], in units of erg/s/cm^2/Angstrom</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astSED.mag2Jy\">\n<code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">mag2Jy</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">ABMag</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.mag2Jy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Converts an AB magnitude into flux density in Jy</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>ABMag</strong> (<em>float</em>) \u2013 AB magnitude</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>flux density in Jy</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astSED.mags2SEDDict\">\n<code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">mags2SEDDict</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">ABMags</span></em>, <em class=\"sig-param\"><span class=\"n\">ABMagErrs</span></em>, <em class=\"sig-param\"><span class=\"n\">passbands</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.mags2SEDDict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes a set of corresponding AB magnitudes, uncertainties, and passbands, and\nreturns a dictionary with keys \u2018flux\u2019, \u2018fluxErr\u2019, \u2018wavelength\u2019. Fluxes are in units of\nerg/s/cm^2/Angstrom, wavelength in Angstroms. These dictionaries are the staple diet of the\n<a class=\"reference internal\" href=\"#astLib.astSED.fitSEDDict\" title=\"astLib.astSED.fitSEDDict\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">fitSEDDict</span></code></a> routine.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>ABMags</strong> (<em>list</em><em> or </em><em>numpy array</em>) \u2013 AB magnitudes, specified in corresponding order to passbands and ABMagErrs</p></li>\n<li><p><strong>ABMagErrs</strong> (<em>list</em><em> or </em><em>numpy array</em>) \u2013 AB magnitude errors, specified in corresponding order to passbands and ABMags</p></li>\n<li><p><strong>passbands</strong> (list of <a class=\"reference internal\" href=\"#astLib.astSED.Passband\" title=\"astLib.astSED.Passband\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Passband</span></code></a> objects) \u2013 passband objects, specified in corresponding order to ABMags and ABMagErrs</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>dictionary</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>dictionary with keys {\u2018flux\u2019, \u2018fluxErr\u2019, \u2018wavelength\u2019}, suitable for input to <a class=\"reference internal\" href=\"#astLib.astSED.fitSEDDict\" title=\"astLib.astSED.fitSEDDict\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">fitSEDDict</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"astLib.astSED.makeModelSEDDictList\">\n<code class=\"sig-prename descclassname\">astLib.astSED.</code><code class=\"sig-name descname\">makeModelSEDDictList</code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\">modelList</span></em>, <em class=\"sig-param\"><span class=\"n\">z</span></em>, <em class=\"sig-param\"><span class=\"n\">passbandsList</span></em>, <em class=\"sig-param\"><span class=\"n\">labelsList</span><span class=\"o\">=</span><span class=\"default_value\">[]</span></em>, <em class=\"sig-param\"><span class=\"n\">EBMinusVList</span><span class=\"o\">=</span><span class=\"default_value\">[0.0]</span></em>, <em class=\"sig-param\"><span class=\"n\">forceYoungerThanUniverse</span><span class=\"o\">=</span><span class=\"default_value\">True</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#astLib.astSED.makeModelSEDDictList\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This routine makes a list of SEDDict dictionaries (see <a class=\"reference internal\" href=\"#astLib.astSED.mags2SEDDict\" title=\"astLib.astSED.mags2SEDDict\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">mags2SEDDict</span></code></a>) for fitting using\n<a class=\"reference internal\" href=\"#astLib.astSED.fitSEDDict\" title=\"astLib.astSED.fitSEDDict\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">fitSEDDict</span></code></a>. This speeds up the fitting as this allows us to calculate model SED magnitudes only once,\nif all objects to be fitted are at the same redshift. We add some meta data to the modelSEDDicts (e.g.\nthe model file names).</p>\n<p>The effect of extinction by dust (assuming the Calzetti et al. 2000 law) can be included by giving a list\nof E(B-V) values.</p>\n<p>If forceYoungerThanUniverse == True, ages which are older than the universe at the given z will not be\nincluded.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>modelList</strong> (list of <a class=\"reference internal\" href=\"#astLib.astSED.StellarPopulation\" title=\"astLib.astSED.StellarPopulation\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">StellarPopulation</span></code></a> model objects) \u2013 list of StellarPopulation models to include</p></li>\n<li><p><strong>z</strong> (<em>float</em>) \u2013 redshift to apply to all stellar population models in modelList</p></li>\n<li><p><strong>EBMinusVList</strong> (<em>list</em>) \u2013 list of E(B-V) extinction values to apply to all models, in magnitudes</p></li>\n<li><p><strong>labelsList</strong> (<em>list</em>) \u2013 optional list used for labelling passbands in output SEDDicts</p></li>\n<li><p><strong>forceYoungerThanUniverse</strong> (<em>bool</em>) \u2013 if True, do not allow models that exceed the age of the universe at z</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>list</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>list of dictionaries containing model fluxes, to be used as input to <a class=\"reference internal\" href=\"#astLib.astSED.fitSEDDict\" title=\"astLib.astSED.fitSEDDict\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">fitSEDDict</span></code></a>.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n</div>\n",
    "title": "API Reference",
    "sourcename": "reference.rst.txt",
    "current_page_name": "reference",
    "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">API Reference</a><ul>\n<li><a class=\"reference internal\" href=\"#module-astLib.astCalc\">astCalc</a></li>\n<li><a class=\"reference internal\" href=\"#module-astLib.astCoords\">astCoords</a></li>\n<li><a class=\"reference internal\" href=\"#module-astLib.astImages\">astImages</a></li>\n<li><a class=\"reference internal\" href=\"#module-astLib.astPlots\">astPlots</a></li>\n<li><a class=\"reference internal\" href=\"#module-astLib.astWCS\">astWCS</a></li>\n<li><a class=\"reference internal\" href=\"#module-astLib.astSED\">astSED</a></li>\n</ul>\n</li>\n</ul>\n",
    "page_source_suffix": ".rst"
}