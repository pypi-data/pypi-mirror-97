# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: blickfeld/error.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import options_pb2 as blickfeld_dot_options__pb2
from . import common_pb2 as blickfeld_dot_common__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='blickfeld/error.proto',
  package='blickfeld.protocol',
  syntax='proto2',
  serialized_options=None,
  serialized_pb=_b('\n\x15\x62lickfeld/error.proto\x12\x12\x62lickfeld.protocol\x1a\x17\x62lickfeld/options.proto\x1a\x16\x62lickfeld/common.proto\"\xe3\x1f\n\x05\x45rror\x12\x34\n\x07unknown\x18\x01 \x01(\x0b\x32!.blickfeld.protocol.Error.UnknownH\x00\x12\x43\n\x0fnot_implemented\x18\x02 \x01(\x0b\x32(.blickfeld.protocol.Error.NotImplementedH\x00\x12\x30\n\x05\x65mpty\x18\x03 \x01(\x0b\x32\x1f.blickfeld.protocol.Error.EmptyH\x00\x12O\n\x15server_implementation\x18\x04 \x01(\x0b\x32..blickfeld.protocol.Error.ServerImplementationH\x00\x12\x43\n\x0finvalid_request\x18\x05 \x01(\x0b\x32(.blickfeld.protocol.Error.InvalidRequestH\x00\x12G\n\x11\x63onnection_closed\x18\x06 \x01(\x0b\x32*.blickfeld.protocol.Error.ConnectionClosedH\x00\x12T\n\x18outdated_server_protocol\x18\x0b \x01(\x0b\x32\x30.blickfeld.protocol.Error.OutdatedServerProtocolH\x00\x12T\n\x18outdated_client_protocol\x18\x0c \x01(\x0b\x32\x30.blickfeld.protocol.Error.OutdatedClientProtocolH\x00\x12=\n\x0cscanner_busy\x18\r \x01(\x0b\x32%.blickfeld.protocol.Error.ScannerBusyH\x00\x12L\n\x14wrong_operation_mode\x18\x0e \x01(\x0b\x32,.blickfeld.protocol.Error.WrongOperationModeH\x00\x12;\n\x0bnot_allowed\x18\x0f \x01(\x0b\x32$.blickfeld.protocol.Error.NotAllowedH\x00\x12\x41\n\x0ehardware_error\x18\x10 \x01(\x0b\x32\'.blickfeld.protocol.Error.HardwareErrorH\x00\x12;\n\x0bsystem_stop\x18\x11 \x01(\x0b\x32$.blickfeld.protocol.Error.SystemStopH\x00\x12\x37\n\tnot_found\x18\x12 \x01(\x0b\x32\".blickfeld.protocol.Error.NotFoundH\x00\x12H\n\x12unknown_error_code\x18\x15 \x01(\x0b\x32*.blickfeld.protocol.Error.UnknownErrorCodeH\x00\x12<\n\x0cnot_in_range\x18\x16 \x01(\x0b\x32$.blickfeld.protocol.Error.NotInRangeH\x00\x12\x44\n\x10time_sync_failed\x18\x17 \x01(\x0b\x32(.blickfeld.protocol.Error.TimeSyncFailedH\x00\x12L\n\x14no_device_discovered\x18\x18 \x01(\x0b\x32,.blickfeld.protocol.Error.NoDeviceDiscoveredH\x00\x12?\n\rnot_supported\x18\x19 \x01(\x0b\x32&.blickfeld.protocol.Error.NotSupportedH\x00\x1al\n\x07Unknown\x12\x13\n\x0b\x64\x65scription\x18\x01 \x01(\t:L\x82\xa6\x1dHThe server threw an unknown generic error. Description: {description:%s}\x1a\xf3\x01\n\x0eNotImplemented\x12-\n\x06reason\x18\x01 \x01(\t:\x1dNo detailed reason available.:\xb1\x01\x82\xa6\x1d\xac\x01The request is not implemented on the server side. Check the versions of the client or firmware software. The changelog might provide more information.\n\tReason: {reason:%s}\x1a.\n\x05\x45mpty:%\x82\xa6\x1d!The server sent an empty message.\x1a[\n\x14ServerImplementation:C\x82\xa6\x1d?The implementation on the server failed to process the request.\x1a\xa8\x01\n\x0eInvalidRequest\x12\x18\n\x10validation_error\x18\x01 \x01(\t\x12\x33\n\x0b\x63onstraints\x18\x02 \x03(\x0b\x32\x1e.blickfeld.protocol.Constraint:G\x82\xa6\x1d\x43The sent request did not pass the validation: {validation_error:%s}\x1a@\n\x10\x43onnectionClosed:,\x82\xa6\x1d(The connection was closed by the server.\x1a\x91\x01\n\x16OutdatedServerProtocol\x12\x18\n\x10required_version\x18\x01 \x01(\r:]\x82\xa6\x1dYThe protocol of the client is too new. Please update the device to {required_version:%u}.\x1a\x9a\x01\n\x16OutdatedClientProtocol\x12\x18\n\x10required_version\x18\x01 \x01(\r:f\x82\xa6\x1d\x62The protocol of the server is too new. Please update the client software to {required_version:%u}.\x1a`\n\x0bScannerBusy:Q\x82\xa6\x1dMThe device is currently busy with another operation. Cancel it and try again.\x1a\x84\x01\n\x12WrongOperationMode:n\x82\xa6\x1djThe device is set to a different operation mode.Perhaps it is currently being used by another application.\x1a\x39\n\nNotAllowed:+\x82\xa6\x1d\'The requested operation is not allowed.\x1a\xab\x01\n\rHardwareError:\x99\x01\x82\xa6\x1d\x94\x01The device is in an error state and cannot be operated. Attempt to power cycle the device or use diagnostic software to read-out the hardware state.\x1a\xaf\x01\n\nSystemStop:\xa0\x01\x82\xa6\x1d\x9b\x01The device stopped unexpectedly and can no longer be operated. Attempt to power cycle the device or use diagnostic software to read-out the hardware state.\x1aY\n\x08NotFound:M\x82\xa6\x1dIThe requested data is not available. Please check the request parameters.\x1a\x92\x01\n\x0eTimeSyncFailed\x12\x16\n\x0entp_daemon_log\x18\x01 \x01(\t:h\x82\xa6\x1d\x64The time synchronization failed. The NTP daemon failed or timed out. Log output:\n{ntp_daemon_log:%s}\x1a\xc7\x01\n\x12NoDeviceDiscovered:\xb0\x01\x82\xa6\x1d\xab\x01No device has been discovered. Check the network connection and power supply of the device. The \'discover\' requests may have been blocked by a local or a network firewall.\x1aO\n\x10UnknownErrorCode\x12\x12\n\nerror_code\x18\x01 \x01(\r:\'\x82\xa6\x1d#Unknown Error Code: {error_code:%u}\x1a\x9d\x02\n\nNotInRange\x12\x11\n\tparameter\x18\x01 \x01(\t\x12\x0f\n\x07minimum\x18\x02 \x01(\x02\x12\x0f\n\x07maximum\x18\x03 \x01(\x02\x12\x11\n\trequested\x18\x04 \x01(\x02\x12\x0e\n\x04unit\x18\x05 \x01(\t:\x00:\xb6\x01\x82\xa6\x1d\xb1\x01The requested {parameter:%s} ({requested:%.2f}{unit:%s}) is not within the valid range. The {parameter:%s} has to be in the interval of {minimum:%.2f} < {maximum:%.2f}{unit:%s}.\x1a\xe8\x01\n\x0cNotSupported\x12-\n\x06reason\x18\x01 \x01(\t:\x1dNo detailed reason available.:\xa8\x01\x82\xa6\x1d\xa3\x01The action is not supported by the current client or server API. Check the versions of the client or firmware software and read the changelog.\n\tReason: {reason:%s}B\x07\n\x05\x65rrorJ\x04\x08\x07\x10\x0bJ\x04\x08\x13\x10\x14J\x04\x08\x14\x10\x15')
  ,
  dependencies=[blickfeld_dot_options__pb2.DESCRIPTOR,blickfeld_dot_common__pb2.DESCRIPTOR,])




_ERROR_UNKNOWN = _descriptor.Descriptor(
  name='Unknown',
  full_name='blickfeld.protocol.Error.Unknown',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='description', full_name='blickfeld.protocol.Error.Unknown.description', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035HThe server threw an unknown generic error. Description: {description:%s}'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1408,
  serialized_end=1516,
)

_ERROR_NOTIMPLEMENTED = _descriptor.Descriptor(
  name='NotImplemented',
  full_name='blickfeld.protocol.Error.NotImplemented',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reason', full_name='blickfeld.protocol.Error.NotImplemented.reason', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("No detailed reason available.").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035\254\001The request is not implemented on the server side. Check the versions of the client or firmware software. The changelog might provide more information.\n\tReason: {reason:%s}'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1519,
  serialized_end=1762,
)

_ERROR_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='blickfeld.protocol.Error.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035!The server sent an empty message.'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1764,
  serialized_end=1810,
)

_ERROR_SERVERIMPLEMENTATION = _descriptor.Descriptor(
  name='ServerImplementation',
  full_name='blickfeld.protocol.Error.ServerImplementation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035?The implementation on the server failed to process the request.'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1812,
  serialized_end=1903,
)

_ERROR_INVALIDREQUEST = _descriptor.Descriptor(
  name='InvalidRequest',
  full_name='blickfeld.protocol.Error.InvalidRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='validation_error', full_name='blickfeld.protocol.Error.InvalidRequest.validation_error', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='constraints', full_name='blickfeld.protocol.Error.InvalidRequest.constraints', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035CThe sent request did not pass the validation: {validation_error:%s}'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1906,
  serialized_end=2074,
)

_ERROR_CONNECTIONCLOSED = _descriptor.Descriptor(
  name='ConnectionClosed',
  full_name='blickfeld.protocol.Error.ConnectionClosed',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035(The connection was closed by the server.'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2076,
  serialized_end=2140,
)

_ERROR_OUTDATEDSERVERPROTOCOL = _descriptor.Descriptor(
  name='OutdatedServerProtocol',
  full_name='blickfeld.protocol.Error.OutdatedServerProtocol',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='required_version', full_name='blickfeld.protocol.Error.OutdatedServerProtocol.required_version', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035YThe protocol of the client is too new. Please update the device to {required_version:%u}.'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2143,
  serialized_end=2288,
)

_ERROR_OUTDATEDCLIENTPROTOCOL = _descriptor.Descriptor(
  name='OutdatedClientProtocol',
  full_name='blickfeld.protocol.Error.OutdatedClientProtocol',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='required_version', full_name='blickfeld.protocol.Error.OutdatedClientProtocol.required_version', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035bThe protocol of the server is too new. Please update the client software to {required_version:%u}.'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2291,
  serialized_end=2445,
)

_ERROR_SCANNERBUSY = _descriptor.Descriptor(
  name='ScannerBusy',
  full_name='blickfeld.protocol.Error.ScannerBusy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035MThe device is currently busy with another operation. Cancel it and try again.'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2447,
  serialized_end=2543,
)

_ERROR_WRONGOPERATIONMODE = _descriptor.Descriptor(
  name='WrongOperationMode',
  full_name='blickfeld.protocol.Error.WrongOperationMode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035jThe device is set to a different operation mode.Perhaps it is currently being used by another application.'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2546,
  serialized_end=2678,
)

_ERROR_NOTALLOWED = _descriptor.Descriptor(
  name='NotAllowed',
  full_name='blickfeld.protocol.Error.NotAllowed',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035\'The requested operation is not allowed.'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2680,
  serialized_end=2737,
)

_ERROR_HARDWAREERROR = _descriptor.Descriptor(
  name='HardwareError',
  full_name='blickfeld.protocol.Error.HardwareError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035\224\001The device is in an error state and cannot be operated. Attempt to power cycle the device or use diagnostic software to read-out the hardware state.'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2740,
  serialized_end=2911,
)

_ERROR_SYSTEMSTOP = _descriptor.Descriptor(
  name='SystemStop',
  full_name='blickfeld.protocol.Error.SystemStop',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035\233\001The device stopped unexpectedly and can no longer be operated. Attempt to power cycle the device or use diagnostic software to read-out the hardware state.'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2914,
  serialized_end=3089,
)

_ERROR_NOTFOUND = _descriptor.Descriptor(
  name='NotFound',
  full_name='blickfeld.protocol.Error.NotFound',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035IThe requested data is not available. Please check the request parameters.'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3091,
  serialized_end=3180,
)

_ERROR_TIMESYNCFAILED = _descriptor.Descriptor(
  name='TimeSyncFailed',
  full_name='blickfeld.protocol.Error.TimeSyncFailed',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ntp_daemon_log', full_name='blickfeld.protocol.Error.TimeSyncFailed.ntp_daemon_log', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035dThe time synchronization failed. The NTP daemon failed or timed out. Log output:\n{ntp_daemon_log:%s}'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3183,
  serialized_end=3329,
)

_ERROR_NODEVICEDISCOVERED = _descriptor.Descriptor(
  name='NoDeviceDiscovered',
  full_name='blickfeld.protocol.Error.NoDeviceDiscovered',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035\253\001No device has been discovered. Check the network connection and power supply of the device. The \'discover\' requests may have been blocked by a local or a network firewall.'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3332,
  serialized_end=3531,
)

_ERROR_UNKNOWNERRORCODE = _descriptor.Descriptor(
  name='UnknownErrorCode',
  full_name='blickfeld.protocol.Error.UnknownErrorCode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='error_code', full_name='blickfeld.protocol.Error.UnknownErrorCode.error_code', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035#Unknown Error Code: {error_code:%u}'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3533,
  serialized_end=3612,
)

_ERROR_NOTINRANGE = _descriptor.Descriptor(
  name='NotInRange',
  full_name='blickfeld.protocol.Error.NotInRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parameter', full_name='blickfeld.protocol.Error.NotInRange.parameter', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='minimum', full_name='blickfeld.protocol.Error.NotInRange.minimum', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='maximum', full_name='blickfeld.protocol.Error.NotInRange.maximum', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='requested', full_name='blickfeld.protocol.Error.NotInRange.requested', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='unit', full_name='blickfeld.protocol.Error.NotInRange.unit', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035\261\001The requested {parameter:%s} ({requested:%.2f}{unit:%s}) is not within the valid range. The {parameter:%s} has to be in the interval of {minimum:%.2f} < {maximum:%.2f}{unit:%s}.'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3615,
  serialized_end=3900,
)

_ERROR_NOTSUPPORTED = _descriptor.Descriptor(
  name='NotSupported',
  full_name='blickfeld.protocol.Error.NotSupported',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reason', full_name='blickfeld.protocol.Error.NotSupported.reason', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("No detailed reason available.").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\202\246\035\243\001The action is not supported by the current client or server API. Check the versions of the client or firmware software and read the changelog.\n\tReason: {reason:%s}'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3903,
  serialized_end=4135,
)

_ERROR = _descriptor.Descriptor(
  name='Error',
  full_name='blickfeld.protocol.Error',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='unknown', full_name='blickfeld.protocol.Error.unknown', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='not_implemented', full_name='blickfeld.protocol.Error.not_implemented', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='empty', full_name='blickfeld.protocol.Error.empty', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='server_implementation', full_name='blickfeld.protocol.Error.server_implementation', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='invalid_request', full_name='blickfeld.protocol.Error.invalid_request', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='connection_closed', full_name='blickfeld.protocol.Error.connection_closed', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='outdated_server_protocol', full_name='blickfeld.protocol.Error.outdated_server_protocol', index=6,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='outdated_client_protocol', full_name='blickfeld.protocol.Error.outdated_client_protocol', index=7,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='scanner_busy', full_name='blickfeld.protocol.Error.scanner_busy', index=8,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='wrong_operation_mode', full_name='blickfeld.protocol.Error.wrong_operation_mode', index=9,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='not_allowed', full_name='blickfeld.protocol.Error.not_allowed', index=10,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hardware_error', full_name='blickfeld.protocol.Error.hardware_error', index=11,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='system_stop', full_name='blickfeld.protocol.Error.system_stop', index=12,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='not_found', full_name='blickfeld.protocol.Error.not_found', index=13,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='unknown_error_code', full_name='blickfeld.protocol.Error.unknown_error_code', index=14,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='not_in_range', full_name='blickfeld.protocol.Error.not_in_range', index=15,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='time_sync_failed', full_name='blickfeld.protocol.Error.time_sync_failed', index=16,
      number=23, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='no_device_discovered', full_name='blickfeld.protocol.Error.no_device_discovered', index=17,
      number=24, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='not_supported', full_name='blickfeld.protocol.Error.not_supported', index=18,
      number=25, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_ERROR_UNKNOWN, _ERROR_NOTIMPLEMENTED, _ERROR_EMPTY, _ERROR_SERVERIMPLEMENTATION, _ERROR_INVALIDREQUEST, _ERROR_CONNECTIONCLOSED, _ERROR_OUTDATEDSERVERPROTOCOL, _ERROR_OUTDATEDCLIENTPROTOCOL, _ERROR_SCANNERBUSY, _ERROR_WRONGOPERATIONMODE, _ERROR_NOTALLOWED, _ERROR_HARDWAREERROR, _ERROR_SYSTEMSTOP, _ERROR_NOTFOUND, _ERROR_TIMESYNCFAILED, _ERROR_NODEVICEDISCOVERED, _ERROR_UNKNOWNERRORCODE, _ERROR_NOTINRANGE, _ERROR_NOTSUPPORTED, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='error', full_name='blickfeld.protocol.Error.error',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=95,
  serialized_end=4162,
)

_ERROR_UNKNOWN.containing_type = _ERROR
_ERROR_NOTIMPLEMENTED.containing_type = _ERROR
_ERROR_EMPTY.containing_type = _ERROR
_ERROR_SERVERIMPLEMENTATION.containing_type = _ERROR
_ERROR_INVALIDREQUEST.fields_by_name['constraints'].message_type = blickfeld_dot_common__pb2._CONSTRAINT
_ERROR_INVALIDREQUEST.containing_type = _ERROR
_ERROR_CONNECTIONCLOSED.containing_type = _ERROR
_ERROR_OUTDATEDSERVERPROTOCOL.containing_type = _ERROR
_ERROR_OUTDATEDCLIENTPROTOCOL.containing_type = _ERROR
_ERROR_SCANNERBUSY.containing_type = _ERROR
_ERROR_WRONGOPERATIONMODE.containing_type = _ERROR
_ERROR_NOTALLOWED.containing_type = _ERROR
_ERROR_HARDWAREERROR.containing_type = _ERROR
_ERROR_SYSTEMSTOP.containing_type = _ERROR
_ERROR_NOTFOUND.containing_type = _ERROR
_ERROR_TIMESYNCFAILED.containing_type = _ERROR
_ERROR_NODEVICEDISCOVERED.containing_type = _ERROR
_ERROR_UNKNOWNERRORCODE.containing_type = _ERROR
_ERROR_NOTINRANGE.containing_type = _ERROR
_ERROR_NOTSUPPORTED.containing_type = _ERROR
_ERROR.fields_by_name['unknown'].message_type = _ERROR_UNKNOWN
_ERROR.fields_by_name['not_implemented'].message_type = _ERROR_NOTIMPLEMENTED
_ERROR.fields_by_name['empty'].message_type = _ERROR_EMPTY
_ERROR.fields_by_name['server_implementation'].message_type = _ERROR_SERVERIMPLEMENTATION
_ERROR.fields_by_name['invalid_request'].message_type = _ERROR_INVALIDREQUEST
_ERROR.fields_by_name['connection_closed'].message_type = _ERROR_CONNECTIONCLOSED
_ERROR.fields_by_name['outdated_server_protocol'].message_type = _ERROR_OUTDATEDSERVERPROTOCOL
_ERROR.fields_by_name['outdated_client_protocol'].message_type = _ERROR_OUTDATEDCLIENTPROTOCOL
_ERROR.fields_by_name['scanner_busy'].message_type = _ERROR_SCANNERBUSY
_ERROR.fields_by_name['wrong_operation_mode'].message_type = _ERROR_WRONGOPERATIONMODE
_ERROR.fields_by_name['not_allowed'].message_type = _ERROR_NOTALLOWED
_ERROR.fields_by_name['hardware_error'].message_type = _ERROR_HARDWAREERROR
_ERROR.fields_by_name['system_stop'].message_type = _ERROR_SYSTEMSTOP
_ERROR.fields_by_name['not_found'].message_type = _ERROR_NOTFOUND
_ERROR.fields_by_name['unknown_error_code'].message_type = _ERROR_UNKNOWNERRORCODE
_ERROR.fields_by_name['not_in_range'].message_type = _ERROR_NOTINRANGE
_ERROR.fields_by_name['time_sync_failed'].message_type = _ERROR_TIMESYNCFAILED
_ERROR.fields_by_name['no_device_discovered'].message_type = _ERROR_NODEVICEDISCOVERED
_ERROR.fields_by_name['not_supported'].message_type = _ERROR_NOTSUPPORTED
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['unknown'])
_ERROR.fields_by_name['unknown'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['not_implemented'])
_ERROR.fields_by_name['not_implemented'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['empty'])
_ERROR.fields_by_name['empty'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['server_implementation'])
_ERROR.fields_by_name['server_implementation'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['invalid_request'])
_ERROR.fields_by_name['invalid_request'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['connection_closed'])
_ERROR.fields_by_name['connection_closed'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['outdated_server_protocol'])
_ERROR.fields_by_name['outdated_server_protocol'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['outdated_client_protocol'])
_ERROR.fields_by_name['outdated_client_protocol'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['scanner_busy'])
_ERROR.fields_by_name['scanner_busy'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['wrong_operation_mode'])
_ERROR.fields_by_name['wrong_operation_mode'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['not_allowed'])
_ERROR.fields_by_name['not_allowed'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['hardware_error'])
_ERROR.fields_by_name['hardware_error'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['system_stop'])
_ERROR.fields_by_name['system_stop'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['not_found'])
_ERROR.fields_by_name['not_found'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['unknown_error_code'])
_ERROR.fields_by_name['unknown_error_code'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['not_in_range'])
_ERROR.fields_by_name['not_in_range'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['time_sync_failed'])
_ERROR.fields_by_name['time_sync_failed'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['no_device_discovered'])
_ERROR.fields_by_name['no_device_discovered'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['not_supported'])
_ERROR.fields_by_name['not_supported'].containing_oneof = _ERROR.oneofs_by_name['error']
DESCRIPTOR.message_types_by_name['Error'] = _ERROR
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Error = _reflection.GeneratedProtocolMessageType('Error', (_message.Message,), dict(

  Unknown = _reflection.GeneratedProtocolMessageType('Unknown', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_UNKNOWN,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.Unknown)
    ))
  ,

  NotImplemented = _reflection.GeneratedProtocolMessageType('NotImplemented', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_NOTIMPLEMENTED,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.NotImplemented)
    ))
  ,

  Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_EMPTY,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.Empty)
    ))
  ,

  ServerImplementation = _reflection.GeneratedProtocolMessageType('ServerImplementation', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_SERVERIMPLEMENTATION,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.ServerImplementation)
    ))
  ,

  InvalidRequest = _reflection.GeneratedProtocolMessageType('InvalidRequest', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_INVALIDREQUEST,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.InvalidRequest)
    ))
  ,

  ConnectionClosed = _reflection.GeneratedProtocolMessageType('ConnectionClosed', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_CONNECTIONCLOSED,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.ConnectionClosed)
    ))
  ,

  OutdatedServerProtocol = _reflection.GeneratedProtocolMessageType('OutdatedServerProtocol', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_OUTDATEDSERVERPROTOCOL,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.OutdatedServerProtocol)
    ))
  ,

  OutdatedClientProtocol = _reflection.GeneratedProtocolMessageType('OutdatedClientProtocol', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_OUTDATEDCLIENTPROTOCOL,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.OutdatedClientProtocol)
    ))
  ,

  ScannerBusy = _reflection.GeneratedProtocolMessageType('ScannerBusy', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_SCANNERBUSY,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.ScannerBusy)
    ))
  ,

  WrongOperationMode = _reflection.GeneratedProtocolMessageType('WrongOperationMode', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_WRONGOPERATIONMODE,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.WrongOperationMode)
    ))
  ,

  NotAllowed = _reflection.GeneratedProtocolMessageType('NotAllowed', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_NOTALLOWED,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.NotAllowed)
    ))
  ,

  HardwareError = _reflection.GeneratedProtocolMessageType('HardwareError', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_HARDWAREERROR,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.HardwareError)
    ))
  ,

  SystemStop = _reflection.GeneratedProtocolMessageType('SystemStop', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_SYSTEMSTOP,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.SystemStop)
    ))
  ,

  NotFound = _reflection.GeneratedProtocolMessageType('NotFound', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_NOTFOUND,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.NotFound)
    ))
  ,

  TimeSyncFailed = _reflection.GeneratedProtocolMessageType('TimeSyncFailed', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_TIMESYNCFAILED,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.TimeSyncFailed)
    ))
  ,

  NoDeviceDiscovered = _reflection.GeneratedProtocolMessageType('NoDeviceDiscovered', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_NODEVICEDISCOVERED,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.NoDeviceDiscovered)
    ))
  ,

  UnknownErrorCode = _reflection.GeneratedProtocolMessageType('UnknownErrorCode', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_UNKNOWNERRORCODE,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.UnknownErrorCode)
    ))
  ,

  NotInRange = _reflection.GeneratedProtocolMessageType('NotInRange', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_NOTINRANGE,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.NotInRange)
    ))
  ,

  NotSupported = _reflection.GeneratedProtocolMessageType('NotSupported', (_message.Message,), dict(
    DESCRIPTOR = _ERROR_NOTSUPPORTED,
    __module__ = 'blickfeld.error_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error.NotSupported)
    ))
  ,
  DESCRIPTOR = _ERROR,
  __module__ = 'blickfeld.error_pb2'
  # @@protoc_insertion_point(class_scope:blickfeld.protocol.Error)
  ))
_sym_db.RegisterMessage(Error)
_sym_db.RegisterMessage(Error.Unknown)
_sym_db.RegisterMessage(Error.NotImplemented)
_sym_db.RegisterMessage(Error.Empty)
_sym_db.RegisterMessage(Error.ServerImplementation)
_sym_db.RegisterMessage(Error.InvalidRequest)
_sym_db.RegisterMessage(Error.ConnectionClosed)
_sym_db.RegisterMessage(Error.OutdatedServerProtocol)
_sym_db.RegisterMessage(Error.OutdatedClientProtocol)
_sym_db.RegisterMessage(Error.ScannerBusy)
_sym_db.RegisterMessage(Error.WrongOperationMode)
_sym_db.RegisterMessage(Error.NotAllowed)
_sym_db.RegisterMessage(Error.HardwareError)
_sym_db.RegisterMessage(Error.SystemStop)
_sym_db.RegisterMessage(Error.NotFound)
_sym_db.RegisterMessage(Error.TimeSyncFailed)
_sym_db.RegisterMessage(Error.NoDeviceDiscovered)
_sym_db.RegisterMessage(Error.UnknownErrorCode)
_sym_db.RegisterMessage(Error.NotInRange)
_sym_db.RegisterMessage(Error.NotSupported)


_ERROR_UNKNOWN._options = None
_ERROR_NOTIMPLEMENTED._options = None
_ERROR_EMPTY._options = None
_ERROR_SERVERIMPLEMENTATION._options = None
_ERROR_INVALIDREQUEST._options = None
_ERROR_CONNECTIONCLOSED._options = None
_ERROR_OUTDATEDSERVERPROTOCOL._options = None
_ERROR_OUTDATEDCLIENTPROTOCOL._options = None
_ERROR_SCANNERBUSY._options = None
_ERROR_WRONGOPERATIONMODE._options = None
_ERROR_NOTALLOWED._options = None
_ERROR_HARDWAREERROR._options = None
_ERROR_SYSTEMSTOP._options = None
_ERROR_NOTFOUND._options = None
_ERROR_TIMESYNCFAILED._options = None
_ERROR_NODEVICEDISCOVERED._options = None
_ERROR_UNKNOWNERRORCODE._options = None
_ERROR_NOTINRANGE._options = None
_ERROR_NOTSUPPORTED._options = None
# @@protoc_insertion_point(module_scope)
