# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: blickfeld/data/imu.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from .. import options_pb2 as blickfeld_dot_options__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='blickfeld/data/imu.proto',
  package='blickfeld.protocol.data',
  syntax='proto2',
  serialized_options=_b('\370\001\001'),
  serialized_pb=_b('\n\x18\x62lickfeld/data/imu.proto\x12\x17\x62lickfeld.protocol.data\x1a\x17\x62lickfeld/options.proto\"\xdf\x02\n\x03IMU\x12\x1b\n\rstart_time_ns\x18\x01 \x01(\x04\x42\x04\xb0\xb5\x18\x01\x12:\n\x07samples\x18\x02 \x03(\x0b\x32#.blickfeld.protocol.data.IMU.SampleB\x04\xb0\xb5\x18\x01\x12\x39\n\x06packed\x18\x03 \x01(\x0b\x32#.blickfeld.protocol.data.IMU.PackedB\x04\xb0\xb5\x18\x01\x1a\x61\n\x06Sample\x12\x17\n\x0fstart_offset_ns\x18\x01 \x01(\x04\x12\x1c\n\x0c\x61\x63\x63\x65leration\x18\x02 \x03(\x02\x42\x06\x10\x01\xa0\xb5\x18\x06\x12 \n\x10\x61ngular_velocity\x18\x03 \x03(\x02\x42\x06\x10\x01\xa0\xb5\x18\x06\x1a\x61\n\x06Packed\x12\x0e\n\x06length\x18\x01 \x01(\r\x12\x17\n\x0fstart_offset_ns\x18\x02 \x01(\x0c\x12\x14\n\x0c\x61\x63\x63\x65leration\x18\x03 \x01(\x0c\x12\x18\n\x10\x61ngular_velocity\x18\x04 \x01(\x0c\x42\x03\xf8\x01\x01')
  ,
  dependencies=[blickfeld_dot_options__pb2.DESCRIPTOR,])




_IMU_SAMPLE = _descriptor.Descriptor(
  name='Sample',
  full_name='blickfeld.protocol.data.IMU.Sample',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_offset_ns', full_name='blickfeld.protocol.data.IMU.Sample.start_offset_ns', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='acceleration', full_name='blickfeld.protocol.data.IMU.Sample.acceleration', index=1,
      number=2, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\020\001\240\265\030\006'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='angular_velocity', full_name='blickfeld.protocol.data.IMU.Sample.angular_velocity', index=2,
      number=3, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\020\001\240\265\030\006'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=234,
  serialized_end=331,
)

_IMU_PACKED = _descriptor.Descriptor(
  name='Packed',
  full_name='blickfeld.protocol.data.IMU.Packed',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='length', full_name='blickfeld.protocol.data.IMU.Packed.length', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_offset_ns', full_name='blickfeld.protocol.data.IMU.Packed.start_offset_ns', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='acceleration', full_name='blickfeld.protocol.data.IMU.Packed.acceleration', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='angular_velocity', full_name='blickfeld.protocol.data.IMU.Packed.angular_velocity', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=333,
  serialized_end=430,
)

_IMU = _descriptor.Descriptor(
  name='IMU',
  full_name='blickfeld.protocol.data.IMU',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_time_ns', full_name='blickfeld.protocol.data.IMU.start_time_ns', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\260\265\030\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='samples', full_name='blickfeld.protocol.data.IMU.samples', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\260\265\030\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='packed', full_name='blickfeld.protocol.data.IMU.packed', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\260\265\030\001'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_IMU_SAMPLE, _IMU_PACKED, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=79,
  serialized_end=430,
)

_IMU_SAMPLE.containing_type = _IMU
_IMU_PACKED.containing_type = _IMU
_IMU.fields_by_name['samples'].message_type = _IMU_SAMPLE
_IMU.fields_by_name['packed'].message_type = _IMU_PACKED
DESCRIPTOR.message_types_by_name['IMU'] = _IMU
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

IMU = _reflection.GeneratedProtocolMessageType('IMU', (_message.Message,), dict(

  Sample = _reflection.GeneratedProtocolMessageType('Sample', (_message.Message,), dict(
    DESCRIPTOR = _IMU_SAMPLE,
    __module__ = 'blickfeld.data.imu_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.data.IMU.Sample)
    ))
  ,

  Packed = _reflection.GeneratedProtocolMessageType('Packed', (_message.Message,), dict(
    DESCRIPTOR = _IMU_PACKED,
    __module__ = 'blickfeld.data.imu_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.data.IMU.Packed)
    ))
  ,
  DESCRIPTOR = _IMU,
  __module__ = 'blickfeld.data.imu_pb2'
  # @@protoc_insertion_point(class_scope:blickfeld.protocol.data.IMU)
  ))
_sym_db.RegisterMessage(IMU)
_sym_db.RegisterMessage(IMU.Sample)
_sym_db.RegisterMessage(IMU.Packed)


DESCRIPTOR._options = None
_IMU_SAMPLE.fields_by_name['acceleration']._options = None
_IMU_SAMPLE.fields_by_name['angular_velocity']._options = None
_IMU.fields_by_name['start_time_ns']._options = None
_IMU.fields_by_name['samples']._options = None
_IMU.fields_by_name['packed']._options = None
# @@protoc_insertion_point(module_scope)
