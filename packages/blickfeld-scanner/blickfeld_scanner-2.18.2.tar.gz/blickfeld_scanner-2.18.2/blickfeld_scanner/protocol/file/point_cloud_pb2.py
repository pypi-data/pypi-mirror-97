# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: blickfeld/file/point_cloud.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from .. import options_pb2 as blickfeld_dot_options__pb2
from ..data import point_cloud_pb2 as blickfeld_dot_data_dot_point__cloud__pb2
from ..data import frame_pb2 as blickfeld_dot_data_dot_frame__pb2
from ..config import scan_pattern_pb2 as blickfeld_dot_config_dot_scan__pattern__pb2
from ..file import general_pb2 as blickfeld_dot_file_dot_general__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='blickfeld/file/point_cloud.proto',
  package='blickfeld.protocol.file',
  syntax='proto2',
  serialized_options=_b('\370\001\001'),
  serialized_pb=_b('\n blickfeld/file/point_cloud.proto\x12\x17\x62lickfeld.protocol.file\x1a\x17\x62lickfeld/options.proto\x1a blickfeld/data/point_cloud.proto\x1a\x1a\x62lickfeld/data/frame.proto\x1a#blickfeld/config/scan_pattern.proto\x1a\x1c\x62lickfeld/file/general.proto\"\x94\x06\n\nPointCloud\x1a{\n\x06Header\x12@\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32*.blickfeld.protocol.data.PointCloud.HeaderB\x04\xb0\xb5\x18\x01\x12/\n\x06\x63lient\x18\x02 \x01(\x0b\x32\x1f.blickfeld.protocol.file.Client\x1a\x90\x03\n\x06\x46ooter\x12?\n\x05stats\x18\x01 \x01(\x0b\x32\x30.blickfeld.protocol.file.PointCloud.Footer.Stats\x12@\n\x06\x65vents\x18\x02 \x03(\x0b\x32\x30.blickfeld.protocol.file.PointCloud.Footer.Event\x12\x14\n\x0cstop_time_ns\x18\x03 \x01(\x04\x1a\x8e\x01\n\x05Stats\x12I\n\x07\x63ounter\x18\x01 \x01(\x0b\x32\x38.blickfeld.protocol.file.PointCloud.Footer.Stats.Counter\x1a:\n\x07\x43ounter\x12\x0e\n\x06\x66rames\x18\x01 \x01(\x04\x12\x0e\n\x06points\x18\x02 \x01(\x04\x12\x0f\n\x07returns\x18\x03 \x01(\x04\x1a\\\n\x05\x45vent\x12\x15\n\rfrom_frame_id\x18\x01 \x01(\x04\x12<\n\x0cscan_pattern\x18\x02 \x01(\x0b\x32&.blickfeld.protocol.config.ScanPattern\x1a\x82\x01\n\x08Metadata\x12:\n\x06header\x18\x01 \x01(\x0b\x32*.blickfeld.protocol.file.PointCloud.Header\x12:\n\x06\x66ooter\x18\x02 \x01(\x0b\x32*.blickfeld.protocol.file.PointCloud.Footer\x1aq\n\x04\x44\x61ta\x12-\n\x05\x66rame\x18\x01 \x01(\x0b\x32\x1e.blickfeld.protocol.data.Frame\x12:\n\x06\x66ooter\x18\x02 \x01(\x0b\x32*.blickfeld.protocol.file.PointCloud.FooterB\x03\xf8\x01\x01')
  ,
  dependencies=[blickfeld_dot_options__pb2.DESCRIPTOR,blickfeld_dot_data_dot_point__cloud__pb2.DESCRIPTOR,blickfeld_dot_data_dot_frame__pb2.DESCRIPTOR,blickfeld_dot_config_dot_scan__pattern__pb2.DESCRIPTOR,blickfeld_dot_file_dot_general__pb2.DESCRIPTOR,])




_POINTCLOUD_HEADER = _descriptor.Descriptor(
  name='Header',
  full_name='blickfeld.protocol.file.PointCloud.Header',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device', full_name='blickfeld.protocol.file.PointCloud.Header.device', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\260\265\030\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='client', full_name='blickfeld.protocol.file.PointCloud.Header.client', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=230,
  serialized_end=353,
)

_POINTCLOUD_FOOTER_STATS_COUNTER = _descriptor.Descriptor(
  name='Counter',
  full_name='blickfeld.protocol.file.PointCloud.Footer.Stats.Counter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='frames', full_name='blickfeld.protocol.file.PointCloud.Footer.Stats.Counter.frames', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='points', full_name='blickfeld.protocol.file.PointCloud.Footer.Stats.Counter.points', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='returns', full_name='blickfeld.protocol.file.PointCloud.Footer.Stats.Counter.returns', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=604,
  serialized_end=662,
)

_POINTCLOUD_FOOTER_STATS = _descriptor.Descriptor(
  name='Stats',
  full_name='blickfeld.protocol.file.PointCloud.Footer.Stats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='counter', full_name='blickfeld.protocol.file.PointCloud.Footer.Stats.counter', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_POINTCLOUD_FOOTER_STATS_COUNTER, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=520,
  serialized_end=662,
)

_POINTCLOUD_FOOTER_EVENT = _descriptor.Descriptor(
  name='Event',
  full_name='blickfeld.protocol.file.PointCloud.Footer.Event',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='from_frame_id', full_name='blickfeld.protocol.file.PointCloud.Footer.Event.from_frame_id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='scan_pattern', full_name='blickfeld.protocol.file.PointCloud.Footer.Event.scan_pattern', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=664,
  serialized_end=756,
)

_POINTCLOUD_FOOTER = _descriptor.Descriptor(
  name='Footer',
  full_name='blickfeld.protocol.file.PointCloud.Footer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='stats', full_name='blickfeld.protocol.file.PointCloud.Footer.stats', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='events', full_name='blickfeld.protocol.file.PointCloud.Footer.events', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stop_time_ns', full_name='blickfeld.protocol.file.PointCloud.Footer.stop_time_ns', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_POINTCLOUD_FOOTER_STATS, _POINTCLOUD_FOOTER_EVENT, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=356,
  serialized_end=756,
)

_POINTCLOUD_METADATA = _descriptor.Descriptor(
  name='Metadata',
  full_name='blickfeld.protocol.file.PointCloud.Metadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='blickfeld.protocol.file.PointCloud.Metadata.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='footer', full_name='blickfeld.protocol.file.PointCloud.Metadata.footer', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=759,
  serialized_end=889,
)

_POINTCLOUD_DATA = _descriptor.Descriptor(
  name='Data',
  full_name='blickfeld.protocol.file.PointCloud.Data',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='frame', full_name='blickfeld.protocol.file.PointCloud.Data.frame', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='footer', full_name='blickfeld.protocol.file.PointCloud.Data.footer', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=891,
  serialized_end=1004,
)

_POINTCLOUD = _descriptor.Descriptor(
  name='PointCloud',
  full_name='blickfeld.protocol.file.PointCloud',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_POINTCLOUD_HEADER, _POINTCLOUD_FOOTER, _POINTCLOUD_METADATA, _POINTCLOUD_DATA, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=216,
  serialized_end=1004,
)

_POINTCLOUD_HEADER.fields_by_name['device'].message_type = blickfeld_dot_data_dot_point__cloud__pb2._POINTCLOUD_HEADER
_POINTCLOUD_HEADER.fields_by_name['client'].message_type = blickfeld_dot_file_dot_general__pb2._CLIENT
_POINTCLOUD_HEADER.containing_type = _POINTCLOUD
_POINTCLOUD_FOOTER_STATS_COUNTER.containing_type = _POINTCLOUD_FOOTER_STATS
_POINTCLOUD_FOOTER_STATS.fields_by_name['counter'].message_type = _POINTCLOUD_FOOTER_STATS_COUNTER
_POINTCLOUD_FOOTER_STATS.containing_type = _POINTCLOUD_FOOTER
_POINTCLOUD_FOOTER_EVENT.fields_by_name['scan_pattern'].message_type = blickfeld_dot_config_dot_scan__pattern__pb2._SCANPATTERN
_POINTCLOUD_FOOTER_EVENT.containing_type = _POINTCLOUD_FOOTER
_POINTCLOUD_FOOTER.fields_by_name['stats'].message_type = _POINTCLOUD_FOOTER_STATS
_POINTCLOUD_FOOTER.fields_by_name['events'].message_type = _POINTCLOUD_FOOTER_EVENT
_POINTCLOUD_FOOTER.containing_type = _POINTCLOUD
_POINTCLOUD_METADATA.fields_by_name['header'].message_type = _POINTCLOUD_HEADER
_POINTCLOUD_METADATA.fields_by_name['footer'].message_type = _POINTCLOUD_FOOTER
_POINTCLOUD_METADATA.containing_type = _POINTCLOUD
_POINTCLOUD_DATA.fields_by_name['frame'].message_type = blickfeld_dot_data_dot_frame__pb2._FRAME
_POINTCLOUD_DATA.fields_by_name['footer'].message_type = _POINTCLOUD_FOOTER
_POINTCLOUD_DATA.containing_type = _POINTCLOUD
DESCRIPTOR.message_types_by_name['PointCloud'] = _POINTCLOUD
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

PointCloud = _reflection.GeneratedProtocolMessageType('PointCloud', (_message.Message,), dict(

  Header = _reflection.GeneratedProtocolMessageType('Header', (_message.Message,), dict(
    DESCRIPTOR = _POINTCLOUD_HEADER,
    __module__ = 'blickfeld.file.point_cloud_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.file.PointCloud.Header)
    ))
  ,

  Footer = _reflection.GeneratedProtocolMessageType('Footer', (_message.Message,), dict(

    Stats = _reflection.GeneratedProtocolMessageType('Stats', (_message.Message,), dict(

      Counter = _reflection.GeneratedProtocolMessageType('Counter', (_message.Message,), dict(
        DESCRIPTOR = _POINTCLOUD_FOOTER_STATS_COUNTER,
        __module__ = 'blickfeld.file.point_cloud_pb2'
        # @@protoc_insertion_point(class_scope:blickfeld.protocol.file.PointCloud.Footer.Stats.Counter)
        ))
      ,
      DESCRIPTOR = _POINTCLOUD_FOOTER_STATS,
      __module__ = 'blickfeld.file.point_cloud_pb2'
      # @@protoc_insertion_point(class_scope:blickfeld.protocol.file.PointCloud.Footer.Stats)
      ))
    ,

    Event = _reflection.GeneratedProtocolMessageType('Event', (_message.Message,), dict(
      DESCRIPTOR = _POINTCLOUD_FOOTER_EVENT,
      __module__ = 'blickfeld.file.point_cloud_pb2'
      # @@protoc_insertion_point(class_scope:blickfeld.protocol.file.PointCloud.Footer.Event)
      ))
    ,
    DESCRIPTOR = _POINTCLOUD_FOOTER,
    __module__ = 'blickfeld.file.point_cloud_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.file.PointCloud.Footer)
    ))
  ,

  Metadata = _reflection.GeneratedProtocolMessageType('Metadata', (_message.Message,), dict(
    DESCRIPTOR = _POINTCLOUD_METADATA,
    __module__ = 'blickfeld.file.point_cloud_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.file.PointCloud.Metadata)
    ))
  ,

  Data = _reflection.GeneratedProtocolMessageType('Data', (_message.Message,), dict(
    DESCRIPTOR = _POINTCLOUD_DATA,
    __module__ = 'blickfeld.file.point_cloud_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.file.PointCloud.Data)
    ))
  ,
  DESCRIPTOR = _POINTCLOUD,
  __module__ = 'blickfeld.file.point_cloud_pb2'
  # @@protoc_insertion_point(class_scope:blickfeld.protocol.file.PointCloud)
  ))
_sym_db.RegisterMessage(PointCloud)
_sym_db.RegisterMessage(PointCloud.Header)
_sym_db.RegisterMessage(PointCloud.Footer)
_sym_db.RegisterMessage(PointCloud.Footer.Stats)
_sym_db.RegisterMessage(PointCloud.Footer.Stats.Counter)
_sym_db.RegisterMessage(PointCloud.Footer.Event)
_sym_db.RegisterMessage(PointCloud.Metadata)
_sym_db.RegisterMessage(PointCloud.Data)


DESCRIPTOR._options = None
_POINTCLOUD_HEADER.fields_by_name['device']._options = None
# @@protoc_insertion_point(module_scope)
