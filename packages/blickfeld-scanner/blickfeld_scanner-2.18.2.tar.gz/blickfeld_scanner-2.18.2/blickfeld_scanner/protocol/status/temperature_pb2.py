# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: blickfeld/status/temperature.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from .. import options_pb2 as blickfeld_dot_options__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='blickfeld/status/temperature.proto',
  package='blickfeld.protocol.status',
  syntax='proto2',
  serialized_options=None,
  serialized_pb=_b('\n\"blickfeld/status/temperature.proto\x12\x19\x62lickfeld.protocol.status\x1a\x17\x62lickfeld/options.proto\"\xe9\x01\n\x0bTemperature\x12=\n\x06sensor\x18\x01 \x01(\x0e\x32-.blickfeld.protocol.status.Temperature.Sensor\x12\x0f\n\x05value\x18\x02 \x01(\x02H\x00\x12\x17\n\rfailed_reason\x18\x03 \x01(\tH\x00\"i\n\x06Sensor\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x07\n\x03LDM\x10\x01\x12\x0c\n\x08\x45THERNET\x10\x02\x12\x07\n\x03MSB\x10\x03\x12\x06\n\x02PL\x10\x04\x12\x06\n\x02PS\x10\x05\x12\x11\n\rSCANNER_SMALL\x10\x06\x12\x0f\n\x0bSCANNER_BIG\x10\x07\x42\x06\n\x04\x64\x61ta')
  ,
  dependencies=[blickfeld_dot_options__pb2.DESCRIPTOR,])



_TEMPERATURE_SENSOR = _descriptor.EnumDescriptor(
  name='Sensor',
  full_name='blickfeld.protocol.status.Temperature.Sensor',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LDM', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ETHERNET', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MSB', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PL', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PS', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SCANNER_SMALL', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SCANNER_BIG', index=7, number=7,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=211,
  serialized_end=316,
)
_sym_db.RegisterEnumDescriptor(_TEMPERATURE_SENSOR)


_TEMPERATURE = _descriptor.Descriptor(
  name='Temperature',
  full_name='blickfeld.protocol.status.Temperature',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sensor', full_name='blickfeld.protocol.status.Temperature.sensor', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='blickfeld.protocol.status.Temperature.value', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='failed_reason', full_name='blickfeld.protocol.status.Temperature.failed_reason', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _TEMPERATURE_SENSOR,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='data', full_name='blickfeld.protocol.status.Temperature.data',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=91,
  serialized_end=324,
)

_TEMPERATURE.fields_by_name['sensor'].enum_type = _TEMPERATURE_SENSOR
_TEMPERATURE_SENSOR.containing_type = _TEMPERATURE
_TEMPERATURE.oneofs_by_name['data'].fields.append(
  _TEMPERATURE.fields_by_name['value'])
_TEMPERATURE.fields_by_name['value'].containing_oneof = _TEMPERATURE.oneofs_by_name['data']
_TEMPERATURE.oneofs_by_name['data'].fields.append(
  _TEMPERATURE.fields_by_name['failed_reason'])
_TEMPERATURE.fields_by_name['failed_reason'].containing_oneof = _TEMPERATURE.oneofs_by_name['data']
DESCRIPTOR.message_types_by_name['Temperature'] = _TEMPERATURE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Temperature = _reflection.GeneratedProtocolMessageType('Temperature', (_message.Message,), dict(
  DESCRIPTOR = _TEMPERATURE,
  __module__ = 'blickfeld.status.temperature_pb2'
  # @@protoc_insertion_point(class_scope:blickfeld.protocol.status.Temperature)
  ))
_sym_db.RegisterMessage(Temperature)


# @@protoc_insertion_point(module_scope)
