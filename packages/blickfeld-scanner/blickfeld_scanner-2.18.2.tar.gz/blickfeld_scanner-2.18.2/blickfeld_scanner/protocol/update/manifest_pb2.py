# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: blickfeld/update/manifest.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from .. import options_pb2 as blickfeld_dot_options__pb2
from ..update import hardware_pb2 as blickfeld_dot_update_dot_hardware__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='blickfeld/update/manifest.proto',
  package='blickfeld.protocol.update',
  syntax='proto2',
  serialized_options=_b('H\002'),
  serialized_pb=_b('\n\x1f\x62lickfeld/update/manifest.proto\x12\x19\x62lickfeld.protocol.update\x1a\x17\x62lickfeld/options.proto\x1a\x1f\x62lickfeld/update/hardware.proto\"\xa2\x03\n\x0cmanifest_msg\x12\x17\n\x0fmin_bus_version\x18\x01 \x01(\t\x12\x45\n\nimage_type\x18\x02 \x01(\x0e\x32\x31.blickfeld.protocol.update.manifest_msg.ImageType\x12W\n\x13\x63ompatible_hardware\x18\x03 \x01(\x0b\x32:.blickfeld.protocol.update.manifest_msg.CompatibleHardware\x12\x15\n\x06secure\x18\x04 \x01(\x08:\x05\x66\x61lse\x1a\x97\x01\n\x12\x43ompatibleHardware\x12;\n\x07variant\x18\x01 \x03(\x0e\x32*.blickfeld.protocol.update.HardwareVariant\x12\x0b\n\x03msb\x18\x02 \x03(\t\x12\x13\n\x0bscanner_big\x18\x03 \x03(\t\x12\x15\n\rscanner_small\x18\x04 \x03(\t\x12\x0b\n\x03hsd\x18\x05 \x03(\t\"(\n\tImageType\x12\x0f\n\x0bPARTITIONED\x10\x00\x12\n\n\x06SYSTEM\x10\x01\x42\x02H\x02')
  ,
  dependencies=[blickfeld_dot_options__pb2.DESCRIPTOR,blickfeld_dot_update_dot_hardware__pb2.DESCRIPTOR,])



_MANIFEST_MSG_IMAGETYPE = _descriptor.EnumDescriptor(
  name='ImageType',
  full_name='blickfeld.protocol.update.manifest_msg.ImageType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PARTITIONED', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SYSTEM', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=499,
  serialized_end=539,
)
_sym_db.RegisterEnumDescriptor(_MANIFEST_MSG_IMAGETYPE)


_MANIFEST_MSG_COMPATIBLEHARDWARE = _descriptor.Descriptor(
  name='CompatibleHardware',
  full_name='blickfeld.protocol.update.manifest_msg.CompatibleHardware',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='variant', full_name='blickfeld.protocol.update.manifest_msg.CompatibleHardware.variant', index=0,
      number=1, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='msb', full_name='blickfeld.protocol.update.manifest_msg.CompatibleHardware.msb', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='scanner_big', full_name='blickfeld.protocol.update.manifest_msg.CompatibleHardware.scanner_big', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='scanner_small', full_name='blickfeld.protocol.update.manifest_msg.CompatibleHardware.scanner_small', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hsd', full_name='blickfeld.protocol.update.manifest_msg.CompatibleHardware.hsd', index=4,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=346,
  serialized_end=497,
)

_MANIFEST_MSG = _descriptor.Descriptor(
  name='manifest_msg',
  full_name='blickfeld.protocol.update.manifest_msg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min_bus_version', full_name='blickfeld.protocol.update.manifest_msg.min_bus_version', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='image_type', full_name='blickfeld.protocol.update.manifest_msg.image_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='compatible_hardware', full_name='blickfeld.protocol.update.manifest_msg.compatible_hardware', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='secure', full_name='blickfeld.protocol.update.manifest_msg.secure', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_MANIFEST_MSG_COMPATIBLEHARDWARE, ],
  enum_types=[
    _MANIFEST_MSG_IMAGETYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=121,
  serialized_end=539,
)

_MANIFEST_MSG_COMPATIBLEHARDWARE.fields_by_name['variant'].enum_type = blickfeld_dot_update_dot_hardware__pb2._HARDWAREVARIANT
_MANIFEST_MSG_COMPATIBLEHARDWARE.containing_type = _MANIFEST_MSG
_MANIFEST_MSG.fields_by_name['image_type'].enum_type = _MANIFEST_MSG_IMAGETYPE
_MANIFEST_MSG.fields_by_name['compatible_hardware'].message_type = _MANIFEST_MSG_COMPATIBLEHARDWARE
_MANIFEST_MSG_IMAGETYPE.containing_type = _MANIFEST_MSG
DESCRIPTOR.message_types_by_name['manifest_msg'] = _MANIFEST_MSG
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

manifest_msg = _reflection.GeneratedProtocolMessageType('manifest_msg', (_message.Message,), dict(

  CompatibleHardware = _reflection.GeneratedProtocolMessageType('CompatibleHardware', (_message.Message,), dict(
    DESCRIPTOR = _MANIFEST_MSG_COMPATIBLEHARDWARE,
    __module__ = 'blickfeld.update.manifest_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.update.manifest_msg.CompatibleHardware)
    ))
  ,
  DESCRIPTOR = _MANIFEST_MSG,
  __module__ = 'blickfeld.update.manifest_pb2'
  # @@protoc_insertion_point(class_scope:blickfeld.protocol.update.manifest_msg)
  ))
_sym_db.RegisterMessage(manifest_msg)
_sym_db.RegisterMessage(manifest_msg.CompatibleHardware)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
