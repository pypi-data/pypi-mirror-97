[metadata]
name = cosapp
version = attr: cosapp.core._version.__version__
author = CoSApp Development Team
home-page = https://cosapp.readthedocs.io
description = CoSApp, the Collaborative System Approach.
long_description = file: README.rst, HISTORY.rst
license = Apache-2.0
copyright = Copyright Safran SA
license-file = LICENSE.rst
keywords = cosapp
classifiers = 
	Development Status :: 3 - Alpha
	Intended Audience :: End Users/Desktop
	Intended Audience :: Developers
	Intended Audience :: Science/Research
	License :: OSI Approved :: Apache Software License
	Natural Language :: English
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.6
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8

[options]
zip_safe = False
include_package_data = True
packages = find:
test_suite = cosapp.tests.all_tests.suite
python_requires = >= 3.6
install_requires = 
	pandas
	jsonschema
	numpy>=1.12
	scipy
	typing;python_version<"3.7"
tests_require = 
	coverage
	pytest
	ipython
	jinja2
	pythonfmu
	watchdog
	openpyxl
	pythonfmu~=0.6.0
	pyfmi

[options.extras_require]
extra = 
	ipython
	jinja2
	pythonfmu~=0.6.0
	watchdog
	openpyxl
tests = 
	coverage
	pytest
	pyfmi
docs = 
	sphinx>=1.8
	nbsphinx>=0.6.0
	sphinx-copybutton
	jupyter_client
	ipykernel
	ipywidgets
	plotly
	pyfmi
	pytest

[bdist_wheel]
universal = 0

[tool:pytest]
addopts = --rootdir=cosapp --strict-markers -m "not notebook" -rfEx
filterwarnings = 
	ignore::DeprecationWarning
markers = 
	notebook: marks requiring Jupyter Notebook (usually slow)

[coverage:run]
source = 
	cosapp
omit = 
	*/tests/*
	*/test_*
	cosapp/tools/templates/*
	cosapp/utils/testing.py

[coverage:report]
exclude_lines = 
	pragma: no cover
	
	pass
	
	def __repr__
	def __str__
	
	raise AssertionError
	raise NotImplementedError
	
	except ImportError
	
	if 0:
	if __name__ == .__main__.:

[coverage:html]
directory = coverage/

[egg_info]
tag_build = 
tag_date = 0

