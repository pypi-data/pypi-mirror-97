{
  "src/lib/components/DashSimpleMap.react.js": {
    "description": "ExampleComponent is an example component.\nIt takes a property, `label`, and\ndisplays it.\nIt renders an input with the property `value`\nwhich is editable by the user.",
    "displayName": "DashSimpleMap",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\nproperties change"
      },
      "width": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Width of the figure to draw, in pixels"
      },
      "height": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Height of the figure to draw, in pixels"
      },
      "padding": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Pixels to leave blank around the edges of the map"
      },
      "colorScaleDomain": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "number"
          }
        },
        "required": false,
        "description": "Array of min and max values used to define scale of color"
      },
      "colorScaleRange": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "string"
          }
        },
        "required": false,
        "description": "Array of hexadecimal colors for the chloropleth map"
      },
      "tooltip": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Display or not a tooltip when hovering countries/states"
      },
      "legend": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Display or not a legend"
      },
      "geojson": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": "The sunburst data. Should have the form:\n\n  `{name: '...', children: [c0, c1, c2]}`\n\nand children `c<i>` can have the same form to arbitrary nesting,\nor for leaf nodes the form is:\n\n  `{name: '...', size: ###}`\n\nany node can also have a `color` property, set to any CSS color string,\nto use instead of the default coloring. Nodes with no children will\ninherit their parent's color if not specified. Otherwise colors are pulled\nfrom d3.scale.category20 in the order nodes are encountered."
      },
      "data": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": "The sunburst data. Should have the form:\n\n  `{name: '...', children: [c0, c1, c2]}`\n\nand children `c<i>` can have the same form to arbitrary nesting,\nor for leaf nodes the form is:\n\n  `{name: '...', size: ###}`\n\nany node can also have a `color` property, set to any CSS color string,\nto use instead of the default coloring. Nodes with no children will\ninherit their parent's color if not specified. Otherwise colors are pulled\nfrom d3.scale.category20 in the order nodes are encountered."
      }
    }
  }
}