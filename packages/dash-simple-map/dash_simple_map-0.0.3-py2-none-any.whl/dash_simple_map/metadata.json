{
  "src/lib/components/DashSimpleMap.react.js": {
    "description": "ExampleComponent is an example component.\nIt takes a property, `label`, and\ndisplays it.\nIt renders an input with the property `value`\nwhich is editable by the user.",
    "displayName": "DashSimpleMap",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\nproperties change"
      },
      "width": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Width of the figure to draw, in pixels"
      },
      "height": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Height of the figure to draw, in pixels"
      },
      "padding": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Pixels to leave blank around the edges of the map"
      },
      "colorScaleDomain": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "number"
          }
        },
        "required": false,
        "description": "Array of min and max values used to define scale of color domains"
      },
      "colorScaleRange": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "string"
          }
        },
        "required": false,
        "description": "Array of hexadecimal colors for the chloropleth map"
      },
      "borderColor": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "string"
          }
        },
        "required": false,
        "description": "Array of hexadecimal colors for the borders strokes, normal and on hover"
      },
      "dataField": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The field to use in data for the chloropleth, default to value."
      },
      "tooltip": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Display or not a tooltip when hovering countries/states"
      },
      "tooltip_format": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Define the text to display in the tooltip, allow jsx tags and variables of data between braces, eg. :\n<strong>Canton: {canton_name}</strong><br><br>Taux d'occupation des unit\u00e9s de soin intensifs: {ICUPercent_FreeCapacity}"
      },
      "legend": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Display or not a legend"
      },
      "legend_title": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Legeng title, default to \"\""
      },
      "legend_labels": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "number"
          }
        },
        "required": false,
        "description": "Array of tick number to display in the legend, default to [0, 25, 50, 75, 100]"
      },
      "legend_square_size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Size of a square in the legend, in pixels"
      },
      "geojson": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": "GeoJSON file containing the geometry information of what we want to draw, \nShould contain a unique id for each feature `feature.id` and the coordinates \nshould be already computed. If not, you can create/modify your geojson at\nhttps://mapshaper.org/"
      },
      "data": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": "The chloropleth and tooltip data. Should have the form:\n\n  `{feature.id: '...', dataField: '...', ...}`\n\nMake sure that for each feature id you have in your geojson, there is a match in data.\nAny additionnal field associated with a feature id can be display in the tooltip_format."
      }
    }
  }
}