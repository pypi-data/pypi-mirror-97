.\" Man page generated from reStructuredText.
.
.TH "DEBOPS.SSHD" "5" "Mar 03, 2021" "v2.1.4" "DebOps"
.SH NAME
debops.sshd \- Manage OpenSSH server using Ansible
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
\fBdebops service/sshd\fP [\fB\-\-limit\fP \fIgroup,host,\fP\&...] [\fB\-\-diff\fP] [\fB\-\-check\fP] [\fB\-\-tags\fP \fItag1,tag2,\fP\&...] [\fB\-\-skip\-tags\fP \fItag1,tag2,\fP\&...] [<\fBansible\-playbook\fP options>] ...
.SH DESCRIPTION
.sp
\fI\%OpenSSH\fP <\fBhttp://www.openssh.com/\fP> is a secure replacement for \fBtelnet\fP and other remote control
programs. It allows you to connect to remote hosts over a encrypted communication
channel and to perform a variety of tasks. It\(aqs also the primary communication channel
used by Ansible.
.SH GETTING STARTED
.SS Changes from Debian defaults
.sp
The \fBdebops.sshd\fP role will configure the OpenSSH server to lookup the client
hostnames in DNS by setting the \fBUseDNS\fP option to \fByes\fP (the Debian and
upstream default is \fBno\fP). This allows use of the DNS hostnames and domains
in the authorized keys files and PAM access control rules. DNS lookup can be
controlled using the \fBsshd__use_dns\fP variable.
.sp
The role will divert the original \fB/etc/pam.d/sshd\fP configuration file
and generate a new one, with PAM access control enabled and using the separate
\fB/etc/security/access\-sshd.conf\fP configuration file. The ACL rules are
defined in the \fBsshd__pam_access__dependent_rules\fP variable and are
managed by the debops.pam_access Ansible role.
.sp
To disable the custom access control configuration, set the
\fBsshd__pam_deploy_state\fP variable to \fBabsent\fP\&. The PAM access control
file will still be generated, but it will not be used by the \fBsshd\fP service.
.SS Global root access
.sp
By default the debops.pam_access configuration restricts access to the
\fBroot\fP account to hosts on the same DNS domain, for security. This might
cause unintended lockouts if your Ansible Controller host is on a completely
different domain than the remote host.
.sp
To disable the restricted access and allow connections to the \fBroot\fP account
from anywhere on the network, you can set in your Ansible inventory, for
example in \fBansible/inventory/group_vars/all/pam_access.yml\fP file:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
pam_access__rules:

  \- name: \(aqsshd\(aq
    state: \(aqappend\(aq
    options:

      \- name: \(aqallow\-root\(aq
        origins: \(aqALL\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Then, you need to apply the changes to the configuration using the "context" of
the debops.sshd role, for example by executing the command:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
debops service/sshd \-l <host> \-\-tags role::pam_access \-\-diff
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This command will apply the PAM access configuration defined by the
debops.sshd role with modifications from the inventory; they won\(aqt be
applied in other contexts of the debops.pam_access role is used in and
shouldn\(aqt affect other access lists.
.sp
You could also add subnets, domains or other origins instead of allowing access
from any host; refer to the pam_access__ref_rules for more details.
.SS Access to the \fBroot\fP account via password
.sp
The debops.sshd role checks if the \fB/root/.ssh/authorized_keys\fP
file is present on the host, using Ansible local facts defined by the
debops.root_account role. If the file is present, we assume that the
sysadmin SSH keys are on the host, and password\-based access to the \fBroot\fP
account is disabled by setting the \fBPermitRootLogin\fP option to
\fBwithout\-password\fP and the \fBPasswordAuthentication\fP option to \fBno\fP\&.
.sp
If the SSH authorized keys file is not present, the host is assumed to not be
fully provisioned yet. The \fBPermitRootLogin\fP option as well as the
\fBPasswordAuthentication\fP option will be set to \fByes\fP to permit access to
the \fBroot\fP account via SSH. Note that the default PAM access policy set in
the \fBsshd__pam_access__dependent_rules\fP variable still applies and
access to the \fBroot\fP account will be limited to hosts on the same DNS domain.
.sp
Alternatively, if the sysadmin accounts are configured using the
debops.system_users Ansible role, access to the \fBroot\fP account via
password and password authentication will also be disabled.
.SS Useful variables
.sp
This is a list of role variables which you most likely want to define in
Ansible inventory to customize OpenSSH server:
.INDENT 0.0
.TP
.B \fBsshd__whitelist\fP / \fBsshd__group_whitelist\fP / \fBsshd__host_whitelist\fP
Lists which contain IP addresses or CIDR subnets that are permitted to
connect to OpenSSH without restrictions or firewall limits. Adding entries
here will not impose additional restrictions, unlike using \fBsshd__*_allow\fP
lists.
.TP
.B \fBsshd__known_hosts\fP / \fBsshd__group_known_hosts\fP / \fBsshd__host_known_hosts\fP
Here you can add lists of FQDN hostnames which should be added to systemwide
\fB/etc/ssh/ssh_known_hosts\fP file. For example, setting:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
sshd__known_hosts: [ \(aqgithub.com\(aq ]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
will add GitHub SSH fingerprint and allow you to clone git repositories over
SSH with proper host authentication, without the need to ignore host
fingerprints.
.TP
.B \fBsshd__authorized_keys_lookup\fP
Boolean. If \fBTrue\fP, role will enable lookup of SSH public keys in external
authentication databases, like LDAP. This might require additional
configuration using \fBsshd__ldap_*\fP variables.
.sp
LDAP key lookup depends on system\-wide LDAP configuration in
\fB/etc/ldap/ldap.conf\fP, which can be performed (at the moment) using
debops.ldap role. It will be configured when LDAP\-POSIX
integration is enabled on a given host.
.UNINDENT
.SS Example inventory
.sp
\fBdebops.sshd\fP role is part of the \fBcommon.yml\fP DebOps playbook. It will be
executed automatically on every host managed by DebOps.
.SS Example playbook
.sp
If you are using this role without DebOps, here\(aqs an example Ansible playbook
that uses the \fBdebops.sshd\fP role:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-\-\-

\- name: Manage OpenSSH Server
  collections: [ \(aqdebops.debops\(aq, \(aqdebops.roles01\(aq,
                 \(aqdebops.roles02\(aq, \(aqdebops.roles03\(aq ]
  hosts: [ \(aqdebops_all_hosts\(aq, \(aqdebops_service_sshd\(aq ]
  become: True

  environment: \(aq{{ inventory__environment | d({})
                   | combine(inventory__group_environment | d({}))
                   | combine(inventory__host_environment  | d({})) }}\(aq

  pre_tasks:

    \- import_role:
        name: \(aqsshd\(aq
        tasks_from: \(aqmain_env\(aq
      tags: [ \(aqrole::sshd\(aq, \(aqrole::ldap\(aq ]

  roles:

    \- role: apt_preferences
      tags: [ \(aqrole::apt_preferences\(aq, \(aqskip::apt_preferences\(aq ]
      apt_preferences__dependent_list:
        \- \(aq{{ sshd__apt_preferences__dependent_list }}\(aq

    \- role: ferm
      tags: [ \(aqrole::ferm\(aq, \(aqskip::ferm\(aq ]
      ferm__dependent_rules:
        \- \(aq{{ sshd__ferm__dependent_rules }}\(aq

    \- role: tcpwrappers
      tags: [ \(aqrole::tcpwrappers\(aq, \(aqskip::tcpwrappers\(aq ]
      tcpwrappers_dependent_allow:
        \- \(aq{{ sshd__tcpwrappers__dependent_allow }}\(aq

    \- role: python
      tags: [ \(aqrole::python\(aq, \(aqskip::python\(aq, \(aqrole::ldap\(aq ]
      python__dependent_packages3:
        \- \(aq{{ ldap__python__dependent_packages3 }}\(aq
      python__dependent_packages2:
        \- \(aq{{ ldap__python__dependent_packages2 }}\(aq

    \- role: ldap
      tags: [ \(aqrole::ldap\(aq, \(aqskip::ldap\(aq ]
      ldap__dependent_tasks:
        \- \(aq{{ sshd__ldap__dependent_tasks }}\(aq

    \- role: pam_access
      tags: [ \(aqrole::pam_access\(aq, \(aqskip::pam_access\(aq ]
      pam_access__dependent_rules:
        \- \(aq{{ sshd__pam_access__dependent_rules }}\(aq

    \- role: sshd
      tags: [ \(aqrole::sshd\(aq, \(aqskip::sshd\(aq ]

.ft P
.fi
.UNINDENT
.UNINDENT
.SS Ansible tags
.sp
You can use Ansible \fB\-\-tags\fP or \fB\-\-skip\-tags\fP parameters to limit what
tasks are performed during Ansible run. This can be used after a host was first
configured to speed up playbook execution, when you are sure that most of the
configuration is already in the desired state.
.sp
Available role tags:
.INDENT 0.0
.TP
.B \fBrole::sshd\fP
Main role tag, should be used in the playbook to execute all of the role
tasks as well as role dependencies.
.TP
.B \fBrole::sshd:config\fP
Execute tasks related to \fBsshd\fP configuration file.
.TP
.B \fBrole::sshd:known_hosts\fP
Scan specified host fingerprints and add them to system\-wide \fBknown_hosts\fP\&.
.UNINDENT
.SH AUTHOR
Maciej Delmanowski, Robin Schneider
.SH COPYRIGHT
2014-2021, Maciej Delmanowski, Nick Janetakis, Robin Schneider and others
.\" Generated by docutils manpage writer.
.
