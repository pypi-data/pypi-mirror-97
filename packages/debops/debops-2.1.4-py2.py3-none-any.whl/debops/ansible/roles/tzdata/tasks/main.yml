---
# Copyright (C) 2020 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2020 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Install required packages
  package:
    name: '{{ q("flattened", tzdata__base_packages + tzdata__packages) }}'
    state: '{{ "present"
               if ((ansible_local.tzdata.configured|d())|bool)
               else "latest" }}'
  register: tzdata__register_packages
  until: tzdata__register_packages is succeeded
  when: tzdata__enabled|bool

- name: Make sure that Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    mode: '0755'
  when: tzdata__enabled|bool and not ansible_local|d()

- name: Save tzdata local facts
  template:
    src: 'etc/ansible/facts.d/tzdata.fact.j2'
    dest: '/etc/ansible/facts.d/tzdata.fact'
    mode: '0755'
  register: tzdata__register_facts
  when: tzdata__enabled|bool

- name: Update Ansible facts if they were modified
  action: setup
  when: tzdata__register_facts is changed

- name: Configure the time zone
  timezone:
    name: '{{ tzdata__timezone }}'
  register: tzdata__register_timezone
  when: (tzdata__enabled|bool and ansible_service_mgr == "systemd" and
         (ansible_local.tzdata.timezone|d('Etc/UTC')) != tzdata__timezone)

- include_tasks: 'legacy.yml'
  when: (tzdata__enabled|bool and ansible_service_mgr != "systemd" and
         (ansible_local.tzdata.timezone|d('Etc/UTC')) != tzdata__timezone)

- name: Update Ansible facts if time zone was modified
  action: setup
  when: (tzdata__enabled|bool and
         (ansible_local.tzdata.timezone|d('Etc/UTC')) != tzdata__timezone)

- name: Get list of currently running systemd services
  shell: set -o nounset -o pipefail -o errexit &&
         systemctl list-units --state active | awk 'match($1, /\./) {print $1}'
  args:
    executable: 'bash'
  register: tzdata__register_services
  when: (tzdata__enabled|bool and ansible_service_mgr == 'systemd' and
         tzdata__register_timezone is changed)

- name: Request restart of services affected by time zone modification
  systemd:
    name: '{{ item }}'
    state: 'restarted'
    no_block: True
  loop: '{{ q("flattened", (tzdata__restart_default_services
                            + tzdata__restart_services)) }}'
  when: (tzdata__enabled|bool and ansible_service_mgr == 'systemd' and
         tzdata__register_timezone is changed and
         item in tzdata__register_services.stdout_lines)
