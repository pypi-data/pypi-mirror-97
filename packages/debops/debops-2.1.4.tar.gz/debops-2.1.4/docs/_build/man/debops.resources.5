.\" Man page generated from reStructuredText.
.
.TH "DEBOPS.RESOURCES" "5" "Mar 03, 2021" "v2.1.4" "DebOps"
.SH NAME
debops.resources \- Manage custom file resources through Ansible inventory
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
\fBdebops service/resources\fP [\fB\-\-limit\fP \fIgroup,host,\fP\&...] [\fB\-\-diff\fP] [\fB\-\-check\fP] [\fB\-\-tags\fP \fItag1,tag2,\fP\&...] [\fB\-\-skip\-tags\fP \fItag1,tag2,\fP\&...] [<\fBansible\-playbook\fP options>] ...
.SH DESCRIPTION
.sp
This role allows management of custom file paths, file contents and archives on
remote hosts without the need to create a separate Ansible role. You can use
inventory lists to define what files to copy, what directories should exist on
a remote host, what online resources to download, and so on.
.SH GETTING STARTED
.SS Example inventory
.sp
The \fBdebops.resources\fP role is included by default in the \fBcommon.yml\fP
DebOps playbook, you don\(aqt need to add hosts to any groups to enable it.
.sp
Role provides a special variable, \fBresources__src\fP which points to
\fBansible/resources/\fP directory located in the DebOps project directory,
relative to the currently used Ansible inventory. This variable can be used in
the \fBitem.src\fP keys of the file/archive lists to use the files from a central
location relative to the current DebOps project directory.
.sp
The \fBansible/resources/\fP directory is not created automatically, and role
does not check the existence of the specified files before using them.
.sp
An example usage:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
resources__host_paths:
  \- \(aq/tmp/example\-dir\(aq

resources__host_files:
  \- src: \(aq{{ resources__src + "file.txt" }}\(aq
    dest: \(aq/tmp/example\-dir/file.txt\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Example playbook
.sp
If you are using this role without DebOps, here\(aqs an example Ansible playbook
that uses the \fBdebops.resources\fP role:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-\-\-

\- name: Manage custom resources
  collections: [ \(aqdebops.debops\(aq, \(aqdebops.roles01\(aq,
                 \(aqdebops.roles02\(aq, \(aqdebops.roles03\(aq ]
  hosts: [ \(aqdebops_all_hosts\(aq, \(aqdebops_service_resources\(aq ]
  become: True

  environment: \(aq{{ inventory__environment | d({})
                   | combine(inventory__group_environment | d({}))
                   | combine(inventory__host_environment  | d({})) }}\(aq

  roles:

    \- role: resources
      tags: [ \(aqrole::resources\(aq, \(aqskip::resources\(aq ]

.ft P
.fi
.UNINDENT
.UNINDENT
.SS Ansible tags
.sp
You can use Ansible \fB\-\-tags\fP or \fB\-\-skip\-tags\fP parameters to limit what
tasks are performed during Ansible run. This can be used after a host was first
configured to speed up playbook execution, when you are sure that most of the
configuration is already in the desired state.
.sp
Available role tags:
.INDENT 0.0
.TP
.B \fBrole::resources\fP
Main role tag, should be used in the playbook to execute all tasks.
.TP
.B \fBrole::resources:paths\fP
Manage paths on the remote hosts.
.TP
.B \fBrole::resources:urls\fP
Manage online resources on the remote hosts.
.TP
.B \fBrole::resources:archives\fP
Unpack archives on the remote hosts.
.TP
.B \fBrole::resources:files\fP
Manage file contents on the remote hosts.
.TP
.B \fBrole::resources:delayed_paths\fP
Manage delayed paths on the remote hosts.
.TP
.B \fBrole::resources:commands\fP
Run specified commands on the remote hosts.
.TP
.B \fBrole::resources:capabilities\fP
Manage file privileges on the remote hosts.
.UNINDENT
.SH DEFAULT VARIABLE DETAILS
.sp
Some of \fBdebops.resources\fP default variables have more extensive
configuration than simple strings or lists, here you can find documentation and
examples for them.
.SS resources__templates
.sp
The debops.resources role supports dynamic generation of directories,
templated files and symlinks using the \fI\%with_filetree\fP <\fBhttps://docs.ansible.com/ansible/2.5/plugins/lookup/filetree.html\fP> Ansible lookup plugin.
.sp
The file, directory and symlink management is limited \- the managed resources
will be owned by \fBroot\fP UNIX account and will be placed in the \fBroot\fP UNIX
group, however the specific file mode will be preserved; for example if you
create a file with \fB0600\fP permissions, the same permissions will be set by
the role on the remote host. You can use the \fI\%resources__paths\fP
functionality to modify file/directory ownership afterwards.
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
The task ensures that each directory in the path exists, including
permissions. You have to set specific permissions for certain directories
like \fB/root\fP (\fB0700\fP) or \fB/tmp\fP (\fB1777\fP)  in order to not
modify them in unexpected manner.
.UNINDENT
.UNINDENT
.sp
For this functionality to work, the role expects a specific directory structure
located in the \fBansible/resources/\fP directory (or wherever the
\fBresources__src\fP variable points to):
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ansible/resources/
└── templates/
 \ \  ├── by\-group/
 \ \  │\ \  ├── all/
 \ \  │\ \  ├── group\-name1/
 \ \  │\ \  └── group\-name2/
 \ \  └── by\-host/
 \ \      ├── hostname1/
 \ \      └── hostname2/
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The \fBwith_filetree\fP Ansible lookup plugin will look for resources to manage
in specific hostname directory, then of all the groups the current host is in
(based on the content of the variable \fIgroup_names\fP), then in the \fBby\-group/all/\fP directory.
The resource found first in this order wins and no further checks
are performed; this means that you can put a file in the \fBby\-group/all/\fP
directory and then override it using a host\-specific directory.
The groups directories are read in the order dictated by Ansible during inventory parsing.
.sp
See \fI\%Ansible \- Playbooks Variables\fP <\fBhttps://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html#accessing-information-about-other-hosts-with-magic-variables\fP> to learn about the \fBgroup_names\fP variable, and \fI\%Ansible \- Working with Inventory\fP <\fBhttps://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#how-variables-are-merged\fP>
.sp
for more information on how to use \fBansible_group_priority\fP to change the merge order
for groups of the same level (after the parent/child order is resolved).
.sp
Each directory structure starts at the root of the filesystem (\fB/\fP), so
to create a file in a subdirectory you need to recreate the entire path. For
example, to create the \fB/var/lib/application/custom.txt\fP file, it needs
to be placed in:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ansible/resources/templates/by\-group/all/var/lib/application/custom.txt
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
In the templates, you can reference variables from the Ansible facts (including
local facts managed by other roles) and Ansible inventory. Referencing
variables from other roles might work only if these roles are included in the
playbook, however that is not idempotent and should be avoided.
.SS resources__paths
.sp
These lists can be used to create directories, symlinks, set permissions and
ownership, etc. Each element of the list is a YAML dictionary with a set of
parameters. See the documentation of the \fI\%Ansible file module\fP <\fBhttps://docs.ansible.com/ansible/file_module.html\fP> for details
about what parameters can be used and their format. Here\(aqs are additional
details for certain parameters:
.INDENT 0.0
.TP
.B \fBitem.path\fP or \fBitem.dest\fP or \fBitem.name\fP
Specify absolute path of the target directory/file on the remote host. If not
specified, the entire entry is treated as a directory path.
.TP
.B \fBitem.state\fP
Optional. Specify state of the given path. If not specified, the element is
treated as a directory which will be created if it doesn\(aqt exist.
.TP
.B \fBitem.acl\fP
Optional. Please take a look \fI\%ACL support\fP section.
.TP
.B \fBitem.access_time\fP and \fBitem.modification_time\fP
Optional. As documented by the \fI\%Ansible file module\fP <\fBhttps://docs.ansible.com/ansible/file_module.html\fP> except that DebOps
defines a more human readable and standard compliant format.
Example: \fB2023\-05\-23T23:42:42\fP
.TP
.B \fBitem.access_time_format\fP and \fBitem.modification_time_format\fP
Optional. If not defined, it defaults to \fBresources__time_format\fP\&.
.UNINDENT
.SS Examples
.sp
Create a set of directories on all hosts:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
resources__paths:
  \- \(aq/tmp/dir1\(aq
  \- \(aq/tmp/dir2\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Create a public WWW directory on the user account and symlink it to the webroot
directory served by the HTTP server:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
resources__host_paths:
  \- path: \(aq/home/user1/public\(aq
    owner: \(aquser1\(aq
    group: \(aquser1\(aq
    mode: \(aq0755\(aq

  \- path: \(aq/srv/www/sites/example.com\(aq
    state: \(aqdirectory\(aq

  \- path: \(aq/srv/www/sites/example.com/public\(aq
    src:  \(aq/home/user1/public\(aq
    state: \(aqlink\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Remove specified path:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
resources__paths:
  \- path: \(aq/tmp/removed\(aq
    state: \(aqabsent\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.SS resources__repositories
.sp
These lists can be used to clone or update remote \fBgit\fP repositories.
You can use all parameters of the \fBgit\fP Ansible module to manage the
repositories, with some exceptions. The role recognizes these additional
parameters:
.INDENT 0.0
.TP
.B \fBitem.repo\fP, \fBitem.url\fP or \fBitem.src\fP
Required. The URL of the \fBgit\fP repository to clone..
.TP
.B \fBitem.dest\fP or \fBitem.name\fP or \fBitem.path\fP
Required. Path where the specified repository should be cloned to.
.TP
.B \fB_update\fP
Optional, boolean. This is a replacement of the \fBupdate\fP \fBgit\fP module
parameter, due to the string being a reserved word in Python. You can use
this to enable or disable repository update.
.TP
.B \fBowner\fP
Optional. If specified, the role will use the Ansible \fBbecome\fP
functionality to switch to a specified UNIX user account before cloning the
repository. The account must exist on the host before it can be used. If not
specified, the role will use the \fBroot\fP account.
.sp
The specified UNIX account needs to have access to the destination directory.
The parent directories are created automatically, as long as the access
permissions allow. You can create or change directory permissions as needed
using the \fI\%resources__paths\fP variables.
.TP
.B \fBitem.acl\fP
Optional. Please take a look \fI\%ACL support\fP section.
.UNINDENT
.SS Examples
.sp
Clone the Ansible repository to the host:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
resources__repositories:
  \- repo: \(aqhttps://github.com/ansible/ansible\(aq
    dest: \(aq/usr/local/src/github.com/ansible/ansible\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Clone a private repository, accessible using a SSH key. The UNIX account
specified as the owner, or \fBroot\fP account when otherwise, needs to have the
SSH key accepted by the repository. This example uses \fI\%Gitea\fP <\fBhttps://gitea.io/\fP> instance as the
source of the \fBgit\fP repository:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
resources__repositories:
  \- repo: \(aqssh://git@git.example.org:29418/namespace/repository.git\(aq
    owner: \(aqusername\(aq
    dest: \(aq~username/src/git.example.org/namespace/repository\(aq
    accept_hostkey: True
.ft P
.fi
.UNINDENT
.UNINDENT
.SS resources__urls
.sp
These lists can be used to download online resources over HTTP, HTTPS or FTP
protocols. Each element of a list is a YAML dictionary with parameters. You can
use all parameters of the \fBget_url\fP Ansible module; see its documentation for
the parameter list and syntax.
.sp
To download resources over HTTPS, the content must be served over a valid
TLS/SSL certificate recognized by the remote host. If you use self\-signed
certificates, check the debops.pki for how to add custom Root CA
Certificates on your hosts.
.sp
Here are some important parameters used by the role:
.INDENT 0.0
.TP
.B \fBitem.url\fP or \fBitem.src\fP
Required. The URL of the resource to download.
.TP
.B \fBitem.dest\fP or \fBitem.name\fP or \fBitem.path\fP
Required. Path where downloaded resource should be stored.
.TP
.B \fBitem.acl\fP
Optional. Please take a look \fI\%ACL support\fP section.
.UNINDENT
.SS Examples
.sp
Download a HTML file from a webserver on all hosts:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
resources__urls:
  \- src: \(aqhttp://www.example.com/page.html\(aq
    dest: \(aq/tmp/page.html\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.SS resources__archives
.sp
These lists can be used to unpack archives located on Ansible Controller to
remote hosts. Each element of the list is a YAML dictionary with parameters
recognized by the \fI\%Ansible unarchive module\fP <\fBhttps://docs.ansible.com/ansible/unarchive_module.html\fP>\&. For details about their use,
see the module documentation.
.sp
The \fBresources__src\fP variable can be used to point the role to a custom,
central location, by default located in the DebOps project directory.
.sp
Here are some more important parameters:
.INDENT 0.0
.TP
.B \fBitem.src\fP
Required. Path to the archive located on Ansible Controller.
.TP
.B \fBitem.dest\fP or \fBitem.name\fP or \fBitem.path\fP
Required. Path on the remote host where the archive should be unpacked.
.TP
.B \fBitem.acl\fP
Optional. Please take a look \fI\%ACL support\fP section.
.UNINDENT
.SS Examples
.sp
Unpack the home directory contents of a particular user on a specific host. The
tarball is located at \fBansible/resources/home.tar\fP on the Ansible Controller,
in DebOps project directory:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
resources__host_archives:
  \- src: \(aq{{ resources__src + "home.tar" }}\(aq
    dest: \(aq/home/user\(aq
    owner: \(aquser\(aq
    group: \(aquser\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.SS resources__files
.sp
These lists can be used to manage content or copy files from the Ansible
Controller to remote hosts. Each element of a list is a YAML dictionary with
parameters used by the \fI\%Ansible copy module\fP <\fBhttps://docs.ansible.com/ansible/copy_module.html\fP>\&. See its documentation for
parameter advanced usage and syntax.
.sp
The \fBresources__src\fP variable can be used to point the role to a custom,
central location, by default located in the DebOps project directory.
.sp
Here are some more important parameters:
.INDENT 0.0
.TP
.B \fBitem.dest\fP or \fBitem.name\fP or \fBitem.path\fP
Required. Path to the destination file on the remote host.
.TP
.B \fBitem.src\fP
Path to the source file on the Ansible Controller. Alternatively you can use
\fBitem.content\fP to provide the file contents directly in the inventory.
.TP
.B \fBitem.content\fP
String or YAML text block with the file contents to put in the destination
file. Alternatively you can use \fBitem.src\fP to provide the path to the
source file on Ansible Controller.
.TP
.B \fBitem.state\fP
Optional. If not specified, or if specified and \fBpresent\fP, the file(s) will
be created. If specified and \fBabsent\fP, file will be removed.
.TP
.B \fBitem.acl\fP
Optional. Please take a look \fI\%ACL support\fP section.
.UNINDENT
.SS Examples
.sp
Copy file from the \fBansible/resources/\fP directory to all remote hosts:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
resources__files:
  \- src: \(aq{{ resources__src + "path/to/file" }}\(aq
    dest: \(aq/tmp/file\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Create a custom \fBcron\fP task that restarts a service daily:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
resources__host_files:
  \- dest: \(aq/etc/cron.daily/service\-restart\(aq
    mode: \(aq0755\(aq
    content: |
      #!/bin/sh
      # {{ ansible_managed }}
      test \-x /usr/bin/service && systemctl restart service
.ft P
.fi
.UNINDENT
.UNINDENT
.SS ACL support
.sp
Some of debops.resources variables also have the possibility to manage
the ACLs (\fI\%resources__paths\fP, \fI\%resources__repositories\fP,
\fI\%resources__urls\fP, \fI\%resources__archives\fP and
\fI\%resources__files\fP).
.SS Examples
.sp
Create a directory on all hosts and allow \fBadm\fP group to access to any
new content:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
resources__paths:
  \- dest: \(aq/tmp/dir1\(aq
    acl:
      \- default: True
        etype: \(aqgroup\(aq
        entity: \(aqadm\(aq
        permissions: \(aqrX\(aq
      \- default: True
        etype: \(aquser\(aq
        entity: \(aqjoe\(aq
        permissions: \(aqrX\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Remove ACLs related to \fBjoe\fP user on a file on all hosts:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
resources__files:
  \- dest: \(aq/tmp/file\(aq
    state: \(aqpresent\(aq
    acl:
      \- etype: \(aquser\(aq
        entity: \(aqjoe\(aq
        state: \(aqabsent\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Parameters related to ACL
.INDENT 0.0
.TP
.B \fBitem.acl\fP
Optional. Configure filesystem ACL entries of the current file or directory.
This parameter is a list of YAML dictionaries. See the documentation of the
\fI\%Ansible acl module\fP <\fBhttps://docs.ansible.com/ansible/acl_module.html\fP> for details about each parameters (what they can be
used to and their format) as well as the \fI\%acl(5)\fP <\fBhttps://manpages.debian.org/acl(5)\fP>, \fI\%setfacl(1)\fP <\fBhttps://manpages.debian.org/setfacl(1)\fP>
and \fI\%getfacl\fP <\fBhttps://manpages.debian.org/getfacl\fP> manual pages. Some useful parameters:
.INDENT 7.0
.TP
.B \fBdefault\fP
Optional, boolean. If \fBTrue\fP, set a given ACL entry as the default for
new files and directories inside a given directory. Only works with
directories and can\(aqt be removed with \fBstate\fP set to \fBabsent\fP\&.
.TP
.B \fBentity\fP
Name of the UNIX user account or group that a given ACL entry applies to.
.TP
.B \fBetype\fP
Specify the ACL entry type to configure. Valid choices: \fBuser\fP,
\fBgroup\fP, \fBmask\fP, \fBother\fP\&.
.TP
.B \fBpermissions\fP
Specify the permission to apply for a given ACL entry. This parameter
cannot be specified when the state of an ACL entry is set to \fBabsent\fP\&.
.TP
.B \fBrecursive\fP
Apply a given ACL entry recursively to all entities in a given path.
.TP
.B \fBstate\fP
Optional. If not specified or \fBpresent\fP, the ACL entry will be created.
If \fBabsent\fP, the ACL entry will be removed. The \fBquery\fP state doesn\(aqt
make sense in this context and shouldn\(aqt be used.
.UNINDENT
.UNINDENT
.SS resources__commands
.sp
The \fBresources__*_commands\fP variables can be used to define shell commands or
small scripts which should be executed on the remote hosts. This can be useful
to, for example, start a \fBsystemd\fP service created previously using
the \fI\%resources__files\fP variables.
.sp
This is not a replacement for a fully\-fledged Ansible role. The interface is
extremely limited, and you need to ensure idempotency inside of the script or
command you are executing. The debops.resources role can be executed at
different points in the main playbook, which you should also take into account.
.SS Examples
.sp
Set up a simple example \fBsystemd\fP service and start it:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
resources__files:
  \- content: |
      [Unit]
      Description=Example Service

      [Service]
      Type=simple
      ExecStart=/bin/true
      RemainAfterExit=yes

      [Install]
      WantedBy=multi\-user.target
    dest: \(aq/etc/systemd/system/example.service\(aq
    mode: \(aq0644\(aq

resources__commands:
  \- name: \(aqReload systemd and start example service\(aq
    shell: |
      if ! systemctl is\-active example.service ; then
          systemctl daemon\-reload
          systemctl start example.service
      fi
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Syntax
.sp
Each shell command entry is defined by a YAML dictionary with specific
parameters:
.INDENT 0.0
.TP
.B \fBname\fP
Required. A name of a given shell command displayed during Ansible execution,
not used for anything else in the task. Multiple configuration entries with
the same \fBname\fP parameter are merged together.
.TP
.B \fBscript\fP / \fBshell\fP / \fBcommand\fP
Required. String or YAML text block that contains the command or script to
execute on the remote host. The contents will be passed to the \fBshell\fP
Ansible module.
.TP
.B \fBchdir\fP
Optional. Specify the path to the directory on the remote host where the
script should be executed.
.TP
.B \fBcreates\fP
Optional. Specify the path of the file on the remote host \- if it\(aqs present,
the \fBshell\fP module will not execute the script.
.TP
.B \fBremoves\fP
Optional. Specify the path of the file on the remote host \- if it\(aqs absent,
the \fBshell\fP module will not execute the script.
.TP
.B \fBexecutable\fP
Optional. Specify the command interpreter to use. If not specified,
\fB/bin/bash\fP will be used by default.
.TP
.B \fBstate\fP
Optional. If not specified or \fBpresent\fP, the shell command will be executed
as normal by the role. If \fBabsent\fP, the shell command will not be executed
by the role. If \fBignore\fP, the configuration entry will not be evaluated by
the role during execution. This can be used to conditionally activate and
deactivate different shell commands on the Ansible level.
.TP
.B \fBno_log\fP
Optional, boolean. If \fBTrue\fP, Ansible will not display the task contents or
record them in the log. It\(aqs useful to avoid recording sensitive data like
passwords.
.UNINDENT
.SS resources__capabilities
.sp
These lists allow you to manipulate file privileges using the Linux
\fBcapabilities(7)\fP system.
You can use all parameters supported by the \fI\%Ansible capabilities module\fP <\fBhttps://docs.ansible.com/ansible/capabilities_module.html\fP>\&.
The role recognizes these additional alias for parameters:
.INDENT 0.0
.TP
.B \fBitem.path\fP or \fBitem.name\fP
Required. Specifies the path to the file to be managed
.UNINDENT
.SS Examples
.sp
Allow Bluetooth LE scanning as non root:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
resources__host_file_capabilities:
  \- path: \(aq/usr/bin/hcitool\(aq
    capability: \(aqcap_net_raw,cap_net_admin+eip\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.SH AUTHOR
Maciej Delmanowski
.SH COPYRIGHT
2014-2021, Maciej Delmanowski, Nick Janetakis, Robin Schneider and others
.\" Generated by docutils manpage writer.
.
