.\" Man page generated from reStructuredText.
.
.TH "DEBOPS.ISCSI" "5" "Mar 04, 2021" "v2.2.1" "DebOps"
.SH NAME
debops.iscsi \- Manage Open-iSCSI configuration using Ansible
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
\fBdebops service/iscsi\fP [\fB\-\-limit\fP \fIgroup,host,\fP\&...] [\fB\-\-diff\fP] [\fB\-\-check\fP] [\fB\-\-tags\fP \fItag1,tag2,\fP\&...] [\fB\-\-skip\-tags\fP \fItag1,tag2,\fP\&...] [<\fBansible\-playbook\fP options>] ...
.SH DESCRIPTION
.sp
\fI\%Open\-iSCSI\fP <\fBhttp://open-iscsi.org/\fP> is a Linux iSCSI Initiator which can be used to connect to iSCSI
Targets to access block storage devices remotely as if they were connected
locally.
.sp
\fBdebops.iscsi\fP Ansible role allows you to configure the initiator, targets,
as well as create LVM Volume Groups from presented iSCSI LUNs and manage LVM
Logical Volumes.
.SH GETTING STARTED
.sp
The \fBdebops.iscsi\fP role depends heavily on the LVM support. It can be
configured using \fBdebops.lvm\fP role added to the playbook before the
\fBdebops.iscsi\fP role.
.sp
Before using \fBdebops.iscsi\fP role, you should configure an iSCSI Target. It
can be configured either on a dedicated SAN storage host, or using Linux
packages like \fBtargetcli\fP, \fBtgt\fP and others. You can use \fBdebops.tgt\fP
role to create a simple iSCSI Target server, however using \fBtargetcli\fP to
setup a LIO\-based iSCSI Target might be easier.
.sp
The \fBdebops.unattended_upgrades\fP role can be used with a provided list of
blacklisted packages to prevent the unattended upgrade of the \fBopen\-iscsi\fP
package, which might result in connection loss to the iSCSI Target and broken
services.
.SS Example inventory
.sp
To configure iSCSI Initiator to connect to remote storage, you should add
a given host to \fB[debops_service_iscsi]\fP Ansible group:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[debops_service_iscsi]
hostname
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Inventory variables
.sp
Before configuring the role, you should specify the IQN date and Naming
Authority (by default, \fBansible_domain\fP) to have consistent IQN naming
scheme. It\(aqs best to use the registration date of your domain, you can check it
using \fBwhois\fP command:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
iscsi__iqn_date: \(aq1995\-08\(aq
iscsi__iqn_authority: \(aq{{ ansible_domain }}\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Above variables will be used to create and store IQN base name, available as
\fB{{ iscsi__iqn }}\fP\&. You can use it in your IQN strings, provided that the
same scheme is used on your iSCSI Target hosts.
.sp
iSCSI storage should be configured on a separate internal network or VLAN to
provide security. By default, \fBdebops.iscsi\fP discovers iSCSI Targets on all
configured interfaces. To change that, you can specify interface names to use:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
iscsi__interfaces: [ \(aqeth1\(aq, \(aqvlan300\(aq ]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
You need to specify FQDN hostnames or IP addresses of hosts that provide the
storage to discover iSCSI Targets:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
iscsi__portals: [ \(aqstorage.iscsi.{{ ansible_domain }}\(aq ]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
You will also want to configure iscsi__targets and
iscsi__logical_volumes to specify what iSCSI Targets to connect to, as
well as how to manage the storage volumes.
.sp
Default usernames and passwords for discovery and session authentication can be
found in \fBsecret/\fP directory (see \fBdebops.secret\fP role for more details).
You can change them by modifying the created files and re\-running the role.
.SS Example playbook
.sp
Here\(aqs an example playbook which uses \fBdebops.iscsi\fP role:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-\-\-

\- name: Configure iSCSI Initiator
  hosts: [ \(aqdebops_service_iscsi\(aq ]
  become: True

  roles:

    \- role: debops.unattended_upgrades
      tags: [ \(aqrole::unattended_upgrades\(aq ]
      unattended_upgrades__dependent_blacklist: \(aq{{ iscsi__unattended_upgrades__dependent_blacklist }}\(aq

    \- role: debops.lvm
      tags: [ \(aqrole::lvm\(aq ]

    \- role: debops.iscsi
      tags: [ \(aqrole::iscsi\(aq ]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH DEFAULT VARIABLES: CONFIGURATION
.sp
some of \fBdebops.iscsi\fP default variables have more extensive configuration
than simple strings or lists, here you can find documentation and examples for
them.
.SS iscsi__targets
.sp
This is a list of iSCSI Targets, each one defined by a YAML dict. Dict
parameters are mapped to \fBopen_iscsi\fP and \fBlvg\fP Ansible module options.
.sp
List of required parameters:
.INDENT 0.0
.TP
.B \fBtarget\fP
iSCSI Qualified Name string which points to a specified iSCSI Target.
.UNINDENT
.sp
List of optional iSCSI parameters:
.INDENT 0.0
.TP
.B \fBauto\fP
Bool. If present, lets you specify if a given iSCSI Target should be logged
into on system boot. By default all iSCSI Targets are logged into
automatically.
.TP
.B \fBlogin\fP
Bool. If present, lets you specify if a given iSCSI Target should be
connected (\fBTrue\fP) or disconnected (\fBFalse\fP).
.TP
.B \fBauth\fP
Bool. Enable or disable iSCSI session authentication per iSCSI Target.
.TP
.B \fBauth_username\fP
iSCSI session username used for this iSCSI Target, you can use this parameter
to override global username set in \fBiscsi_session_auth_username\fP\&.
.TP
.B \fBauth_password\fP
iSCSI session password used for this iSCSI Target, you can use this parameter
to override global password set in \fBiscsi_session_auth_password\fP\&.
.UNINDENT
.sp
List of optional LVM parameters:
.INDENT 0.0
.TP
.B \fBlvm_vg\fP
Name of a LVM Volume Group which should be created using all iSCSI LUNs
presented by a given iSCSI Target. Should only have alphanumeric characters
and underscores. Do not use hyphens (\fB\-\fP) in the name.
.TP
.B \fBlvm_state\fP
Specifies if a given Volume Group should exist (\fBpresent\fP) or not
(\fBabsent\fP). If not specified, defaults to \fBpresent\fP\&.
.TP
.B \fBlvm_force\fP
Bool. If present and set to \fBTrue\fP, allows you to remove a Volume Group if
it has any Logical Volumes present.
.TP
.B \fBlvm_pesize\fP
Size of the physical extent, in megabytes, must be a power of 2. By default,
4 MB extents are created. You cannot change the extent size of already
existing Volume Groups.
.TP
.B \fBlvm_options\fP
String with additional options passed to \fBvgcreate\fP\&.
.UNINDENT
.SS Examples
.sp
Connect to an iSCSI Target using global session authentication settings:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
iscsi__targets:

  \- target: \(aqiqn.1995\-08.org.example:server:storage\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Connect to an iSCSI Target using \fBiscsi__iqn\fP value for IQN base string (must
be the same on the iSCSI Target) and custom session credentials:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
iscsi__targets:

  \- target: \(aq{{ iscsi__iqn + ":server:storage" }}\(aq
    auth: True
    auth_username: \(aqcustom_user\(aq
    auth_password: \(aqcustom_password\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Connect to an iSCSI Target and create a LVM Volume Group from all of the
presented iSCSI LUNs:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
iscsi__targets:

  \- target: \(aq{{ iscsi__iqn }}:server:storage\(aq
    lvm_vg: \(aqvg_iscsi_target\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.SS iscsi__logical_volumes
.sp
This is a list of LVM Logical Volumes, each one defined as a YAML dict. Logical
Volumes are slices of a Volume Group which can then be formatted with
a filesystem and mounted, or used as a block device. Dict parameters are mapped
to \fBlvol\fP, \fBfilesystem\fP and \fBmount\fP Ansible module options.
.sp
For consistency reasons, you should only use iSCSI\-backed Volume Groups to
configure Logical Volumes using this variable.
.sp
List of required parameters:
.INDENT 0.0
.TP
.B \fBlv\fP
Name of a Logical Volume, should only have alphanumeric characters and
underscores. Do not use hyphens (\fB\-\fP) in the name.
.TP
.B \fBvg\fP
Name of a Volume Group which should be used to create a given Logical Volume.
.TP
.B \fBsize\fP
Size of the Logical Volume, use the same format as these supported by
\fBlvol\fP Ansible module.
.UNINDENT
.sp
List of optional LVM parameters:
.INDENT 0.0
.TP
.B \fBstate\fP
Specifies if a Logical Volume should exist (\fBpresent\fP) or not (\fBabsent\fP).
.TP
.B \fBforce\fP
Bool. If present and \fBTrue\fP allows \fBlvol\fP module to shrink or remove
Logical Volumes.
.UNINDENT
.sp
List of optional filesystem parameters:
.INDENT 0.0
.TP
.B \fBfs\fP
Bool. Enables or disables creation of a filesystem in the new Logical Volume
(existing Logical Volumes are not affected).
.sp
By default, a filesystem specified in \fBiscsi__default_fs_type\fP variable is
created in all new Logical Volumes if \fBitem.mount\fP is specified.
.TP
.B \fBfs_type\fP
Specify filesystem type to use instead of the default. The same type will be
used to mount the filesystem.
.TP
.B \fBfs_opts\fP
Additional options passed to \fBmkfs\fP\&.
.TP
.B \fBfs_force\fP
Bool. If present and \fBTrue\fP, allows Ansible to reformat an already existing
filesystem. Use with caution.
.UNINDENT
.sp
List of optional mount parameters:
.INDENT 0.0
.TP
.B \fBmount\fP
Path to a directory where a given Logical Volume should be mounted.
If specified, a filesystem will be created automatically if needed.
.TP
.B \fBmount_state\fP
Specify mount state of a given Logical Volume, either \fBmounted\fP (default),
\fBpresent\fP, \fBunmounted\fP or \fBabsent\fP\&. See \fBmount\fP Ansible module for
explanation of the possible states.
.TP
.B \fBmount_opts\fP
String with mount options added in \fB/etc/fstab\fP\&. If not specified, options
set in \fBiscsi__default_mount_options\fP will be used instead.
.sp
Make sure that \fB_netdev\fP option is present in your mount options, to not
block the system startup.
.TP
.B \fBmount_fstab\fP
Alternative path to \fB/etc/fstab\fP\&.
.TP
.B \fBmount_dump\fP
Filesystem \fBdump(8)\fP backup frequency. See \fBfstab(5)\fP for more details.
.TP
.B \fBmount_passno\fP
Filesystem \fBfsck\fP pass order. See \fBfstab(5)\fP for more details.
.UNINDENT
.SS Examples
.sp
Create a Logical Volume:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
iscsi__logical_volumes:

  \- lv: \(aqnot_formatted_volume\(aq
    vg: \(aqvg_iscsi_target\(aq
    size: \(aq2G\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Create a Logical Volume, format it and mount in a given path:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
iscsi__logical_volumes:

  \- lv: \(aqdata\(aq
    vg: \(aqvg_iscsi_target\(aq
    size: \(aq10G\(aq
    mount: \(aq/srv/data\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Remove a mounted Logical Volume (destroys the data):
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
iscsi__logical_volumes:

  \- lv: \(aqto_be_removed\(aq
    vg: \(aqvg_iscsi_target\(aq
    size: \(aq5G\(aq
    mount: \(aq/srv/trash\(aq
    state: \(aqabsent\(aq
    force: True
.ft P
.fi
.UNINDENT
.UNINDENT
.SH AUTHOR
Maciej Delmanowski
.SH COPYRIGHT
2014-2021, Maciej Delmanowski, Nick Janetakis, Robin Schneider and others
.\" Generated by docutils manpage writer.
.
