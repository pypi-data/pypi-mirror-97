namespace Eloquent {
    namespace ML {
        namespace Data {
            namespace Preprocessing {
                namespace Pipeline {
                    namespace Ported {
                        namespace {{ pipeline }} {
                            class {{ name }} : public Step {
                                public:
                                    /**
                                     * @inplace
                                     */
                                    bool transform(float *source, float *dest) {
                                        float norm = 0;
                                        float invNorm = 0;

                                        for (uint16_t i = 0; i < {{ input_dim }}; i++) {
                                            {% if norm == 'l1' %}
                                                norm += abs(source[i]);
                                            {% elif norm == 'l2' %}
                                                norm += pow(source[i], 2);
                                            {% elif norm == 'inf' %}
                                                norm = max(norm, abs(source[i]));
                                            {% else %}
                                                ERROR: unknown norm {{ norm }}
                                            {% endif %}
                                        }

                                        {% if norm == 'l2' %}
                                            norm = sqrt(norm);
                                        {% endif %}

                                        invNorm = 1 / norm;

                                        for (uint16_t i = 0; i < {{ input_dim }}; i++) {
                                            source[i] *= invNorm;
                                        }

                                        return true;
                                    }
                            };
                        }
                    }
                }
            }
        }
    }
}