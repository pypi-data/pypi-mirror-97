#pragma once

{% include './AbstractStep.jinja' %}

{% for i, step in enumerate(steps) %}
{{ step.port(pipeline=name) }}
{% endfor %}


namespace Eloquent {
    namespace ML {
        namespace Data {
            namespace Preprocessing {
                namespace Pipeline {
                    namespace Ported {
                        namespace {{ name }} {
                            class {{ name }} {
                                public:
                                    /**
                                     * Constructor
                                     */
                                    {{ name }}() {
                                        {% for i, step in enumerate(steps) %}
                                            steps[{{ i }}] = new {{ step.name }}();
                                        {% endfor %}
                                    }

                                    /**
                                     * Transform input vector
                                     */
                                    bool transform(float *x) {
                                        {% for i, step in enumerate(steps) %}
                                            {% if step.inplace %}
                                                // {{ step.name }} (inplace)
                                                if (!steps[{{ i }}]->transform(x, NULL)) {
                                                    return false;
                                                }
                                            {% endif %}
                                        {% endfor %}
                                    }

                                protected:
                                    Step *steps[{{ steps | length }}];
                            };
                        }
                    }
                }
            }
        }
    }
}