# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: firebird/base/base_test.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='firebird/base/base_test.proto',
  package='firebird.base',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=b'\n\x1d\x66irebird/base/base_test.proto\x12\rfirebird.base\x1a\x19google/protobuf/any.proto\x1a\x1cgoogle/protobuf/struct.proto\"@\n\tTestState\x12\x0c\n\x04name\x18\x01 \x01(\t\x12%\n\x04test\x18\x02 \x01(\x0e\x32\x17.firebird.base.TestEnum\"\xc8\x01\n\x0eTestCollection\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\'\n\x05tests\x18\x02 \x03(\x0b\x32\x18.firebird.base.TestState\x12(\n\x07\x63ontext\x18\x03 \x01(\x0b\x32\x17.google.protobuf.Struct\x12+\n\nannotation\x18\x04 \x01(\x0b\x32\x17.google.protobuf.Struct\x12(\n\nsupplement\x18\x05 \x03(\x0b\x32\x14.google.protobuf.Any*\xd8\x01\n\x08TestEnum\x12\x10\n\x0cTEST_UNKNOWN\x10\x00\x12\x0e\n\nTEST_READY\x10\x01\x12\x10\n\x0cTEST_RUNNING\x10\x02\x12\x10\n\x0cTEST_WAITING\x10\x03\x12\x12\n\x0eTEST_SUSPENDED\x10\x04\x12\x11\n\rTEST_FINISHED\x10\x05\x12\x10\n\x0cTEST_ABORTED\x10\x06\x12\x10\n\x0cTEST_CREATED\x10\x01\x12\x10\n\x0cTEST_BLOCKED\x10\x03\x12\x10\n\x0cTEST_STOPPED\x10\x04\x12\x13\n\x0fTEST_TERMINATED\x10\x06\x1a\x02\x10\x01\x62\x06proto3'
  ,
  dependencies=[google_dot_protobuf_dot_any__pb2.DESCRIPTOR,google_dot_protobuf_dot_struct__pb2.DESCRIPTOR,])

_TESTENUM = _descriptor.EnumDescriptor(
  name='TestEnum',
  full_name='firebird.base.TestEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TEST_UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEST_READY', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEST_RUNNING', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEST_WAITING', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEST_SUSPENDED', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEST_FINISHED', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEST_ABORTED', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEST_CREATED', index=7, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEST_BLOCKED', index=8, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEST_STOPPED', index=9, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEST_TERMINATED', index=10, number=6,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=b'\020\001',
  serialized_start=375,
  serialized_end=591,
)
_sym_db.RegisterEnumDescriptor(_TESTENUM)

TestEnum = enum_type_wrapper.EnumTypeWrapper(_TESTENUM)
TEST_UNKNOWN = 0
TEST_READY = 1
TEST_RUNNING = 2
TEST_WAITING = 3
TEST_SUSPENDED = 4
TEST_FINISHED = 5
TEST_ABORTED = 6
TEST_CREATED = 1
TEST_BLOCKED = 3
TEST_STOPPED = 4
TEST_TERMINATED = 6



_TESTSTATE = _descriptor.Descriptor(
  name='TestState',
  full_name='firebird.base.TestState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='firebird.base.TestState.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='test', full_name='firebird.base.TestState.test', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=105,
  serialized_end=169,
)


_TESTCOLLECTION = _descriptor.Descriptor(
  name='TestCollection',
  full_name='firebird.base.TestCollection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='firebird.base.TestCollection.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tests', full_name='firebird.base.TestCollection.tests', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='context', full_name='firebird.base.TestCollection.context', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='annotation', full_name='firebird.base.TestCollection.annotation', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='supplement', full_name='firebird.base.TestCollection.supplement', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=172,
  serialized_end=372,
)

_TESTSTATE.fields_by_name['test'].enum_type = _TESTENUM
_TESTCOLLECTION.fields_by_name['tests'].message_type = _TESTSTATE
_TESTCOLLECTION.fields_by_name['context'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_TESTCOLLECTION.fields_by_name['annotation'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_TESTCOLLECTION.fields_by_name['supplement'].message_type = google_dot_protobuf_dot_any__pb2._ANY
DESCRIPTOR.message_types_by_name['TestState'] = _TESTSTATE
DESCRIPTOR.message_types_by_name['TestCollection'] = _TESTCOLLECTION
DESCRIPTOR.enum_types_by_name['TestEnum'] = _TESTENUM
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TestState = _reflection.GeneratedProtocolMessageType('TestState', (_message.Message,), {
  'DESCRIPTOR' : _TESTSTATE,
  '__module__' : 'firebird.base.base_test_pb2'
  # @@protoc_insertion_point(class_scope:firebird.base.TestState)
  })
_sym_db.RegisterMessage(TestState)

TestCollection = _reflection.GeneratedProtocolMessageType('TestCollection', (_message.Message,), {
  'DESCRIPTOR' : _TESTCOLLECTION,
  '__module__' : 'firebird.base.base_test_pb2'
  # @@protoc_insertion_point(class_scope:firebird.base.TestCollection)
  })
_sym_db.RegisterMessage(TestCollection)


_TESTENUM._options = None
# @@protoc_insertion_point(module_scope)
