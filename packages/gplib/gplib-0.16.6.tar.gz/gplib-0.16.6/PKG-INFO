Metadata-Version: 1.1
Name: gplib
Version: 0.16.6
Summary: Python library for Gaussian Process Regression.
Home-page: https://gitlab.com/ibaidev/gplib
Author: Ibai Roman
Author-email: ibaidev@protonmail.com
License: GPLv3
Description: 
        GPlib
        =====
        
        A python library for Gaussian Process Regression.
        
        Setup GPlib
        -----------
        
        - Create and activate virtualenv (for python2) or
          venv (for python3)
        
        .. code-block:: bash
        
          # for python3
          python3 -m venv .env
          # or for python2
          python2 -m virtualenv .env
        
          source .env/bin/activate
        
        - Upgrade pip
        
        .. code-block:: bash
        
          python -m pip install --upgrade pip
        
        - Install GPlib package
        
        .. code-block:: bash
        
          python -m pip install gplib
        
        - Matplotlib requires to install a backend to work interactively
          (See https://matplotlib.org/faq/virtualenv_faq.html).
          The easiest solution is to install the Tk framework,
          which can be found as python-tk (or python3-tk) on
          certain Linux distributions.
        
        
        Use GPlib
        ----------------------
        
        - Import GPlib to use it in your python script.
        
        .. code-block:: python
        
          import gplib
        
        - Initialize the GP with the desired modules.
        
        .. code-block:: python
        
          gp = gplib.GP(
            mean_function=gplib.mea.Fixed(),
            covariance_function=gplib.ker.SquaredExponential()
          )
        
        - Plot the GP.
        
        .. code-block:: python
        
          gplib.plot.gp_1d(gp, n_samples=10)
        
        - Generate some random data.
        
        .. code-block:: python
        
          import numpy as np
          data = {
            'X': np.arange(3, 8, 1.0)[:, None],
            'Y': np.random.uniform(0, 2, 5)[:, None]
          }
        
        - Get the posterior GP given the data.
        
        .. code-block:: python
        
          posterior_gp = gp.get_posterior(data)
        
        - Finally plot the posterior GP.
        
        .. code-block:: python
        
          gplib.plot.gp_1d(posterior_gp, data, n_samples=10)
        
        - There are more examples in examples/ directory. Check them out!
        
        Develop GPlib
        -------------
        
        -  Download the repository using git
        
        .. code-block:: bash
        
          git clone https://gitlab.com/ibaidev/gplib.git
          cd gplib
          git config user.email 'MAIL'
          git config user.name 'NAME'
          git config credential.helper 'cache --timeout=300'
          git config push.default simple
        
        -  Update API documentation
        
        .. code-block:: bash
        
          source ./.env/bin/activate
          pip install Sphinx
          cd docs/
          sphinx-apidoc -f -o ./ ../gplib
        
Keywords: Gaussian Process
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
