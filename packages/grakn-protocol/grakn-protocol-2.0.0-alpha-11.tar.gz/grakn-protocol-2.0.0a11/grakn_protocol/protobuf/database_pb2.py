# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protobuf/database.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='protobuf/database.proto',
  package='grakn.protocol',
  syntax='proto3',
  serialized_options=_b('\n\016grakn.protocolB\rDatabaseProto'),
  serialized_pb=_b('\n\x17protobuf/database.proto\x12\x0egrakn.protocol\"\xd7\x01\n\x08\x44\x61tabase\x1aH\n\x08\x43ontains\x1a\x19\n\x03Req\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x1a!\n\x03Res\x12\x1a\n\x08\x63ontains\x18\x01 \x01(\x08R\x08\x63ontains\x1a*\n\x06\x43reate\x1a\x19\n\x03Req\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x1a\x05\n\x03Res\x1a)\n\x03\x41ll\x1a\x05\n\x03Req\x1a\x1b\n\x03Res\x12\x14\n\x05names\x18\x01 \x03(\tR\x05names\x1a*\n\x06\x44\x65lete\x1a\x19\n\x03Req\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x1a\x05\n\x03ResB\x1f\n\x0egrakn.protocolB\rDatabaseProtob\x06proto3')
)




_DATABASE_CONTAINS_REQ = _descriptor.Descriptor(
  name='Req',
  full_name='grakn.protocol.Database.Contains.Req',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='grakn.protocol.Database.Contains.Req.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='name', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=68,
  serialized_end=93,
)

_DATABASE_CONTAINS_RES = _descriptor.Descriptor(
  name='Res',
  full_name='grakn.protocol.Database.Contains.Res',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='contains', full_name='grakn.protocol.Database.Contains.Res.contains', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='contains', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=95,
  serialized_end=128,
)

_DATABASE_CONTAINS = _descriptor.Descriptor(
  name='Contains',
  full_name='grakn.protocol.Database.Contains',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_DATABASE_CONTAINS_REQ, _DATABASE_CONTAINS_RES, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=56,
  serialized_end=128,
)

_DATABASE_CREATE_REQ = _descriptor.Descriptor(
  name='Req',
  full_name='grakn.protocol.Database.Create.Req',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='grakn.protocol.Database.Create.Req.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='name', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=68,
  serialized_end=93,
)

_DATABASE_CREATE_RES = _descriptor.Descriptor(
  name='Res',
  full_name='grakn.protocol.Database.Create.Res',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=95,
  serialized_end=100,
)

_DATABASE_CREATE = _descriptor.Descriptor(
  name='Create',
  full_name='grakn.protocol.Database.Create',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_DATABASE_CREATE_REQ, _DATABASE_CREATE_RES, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=130,
  serialized_end=172,
)

_DATABASE_ALL_REQ = _descriptor.Descriptor(
  name='Req',
  full_name='grakn.protocol.Database.All.Req',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=68,
  serialized_end=73,
)

_DATABASE_ALL_RES = _descriptor.Descriptor(
  name='Res',
  full_name='grakn.protocol.Database.All.Res',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='names', full_name='grakn.protocol.Database.All.Res.names', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='names', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=188,
  serialized_end=215,
)

_DATABASE_ALL = _descriptor.Descriptor(
  name='All',
  full_name='grakn.protocol.Database.All',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_DATABASE_ALL_REQ, _DATABASE_ALL_RES, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=174,
  serialized_end=215,
)

_DATABASE_DELETE_REQ = _descriptor.Descriptor(
  name='Req',
  full_name='grakn.protocol.Database.Delete.Req',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='grakn.protocol.Database.Delete.Req.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='name', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=68,
  serialized_end=93,
)

_DATABASE_DELETE_RES = _descriptor.Descriptor(
  name='Res',
  full_name='grakn.protocol.Database.Delete.Res',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=95,
  serialized_end=100,
)

_DATABASE_DELETE = _descriptor.Descriptor(
  name='Delete',
  full_name='grakn.protocol.Database.Delete',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_DATABASE_DELETE_REQ, _DATABASE_DELETE_RES, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=217,
  serialized_end=259,
)

_DATABASE = _descriptor.Descriptor(
  name='Database',
  full_name='grakn.protocol.Database',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_DATABASE_CONTAINS, _DATABASE_CREATE, _DATABASE_ALL, _DATABASE_DELETE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=44,
  serialized_end=259,
)

_DATABASE_CONTAINS_REQ.containing_type = _DATABASE_CONTAINS
_DATABASE_CONTAINS_RES.containing_type = _DATABASE_CONTAINS
_DATABASE_CONTAINS.containing_type = _DATABASE
_DATABASE_CREATE_REQ.containing_type = _DATABASE_CREATE
_DATABASE_CREATE_RES.containing_type = _DATABASE_CREATE
_DATABASE_CREATE.containing_type = _DATABASE
_DATABASE_ALL_REQ.containing_type = _DATABASE_ALL
_DATABASE_ALL_RES.containing_type = _DATABASE_ALL
_DATABASE_ALL.containing_type = _DATABASE
_DATABASE_DELETE_REQ.containing_type = _DATABASE_DELETE
_DATABASE_DELETE_RES.containing_type = _DATABASE_DELETE
_DATABASE_DELETE.containing_type = _DATABASE
DESCRIPTOR.message_types_by_name['Database'] = _DATABASE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Database = _reflection.GeneratedProtocolMessageType('Database', (_message.Message,), dict(

  Contains = _reflection.GeneratedProtocolMessageType('Contains', (_message.Message,), dict(

    Req = _reflection.GeneratedProtocolMessageType('Req', (_message.Message,), dict(
      DESCRIPTOR = _DATABASE_CONTAINS_REQ,
      __module__ = 'protobuf.database_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.Database.Contains.Req)
      ))
    ,

    Res = _reflection.GeneratedProtocolMessageType('Res', (_message.Message,), dict(
      DESCRIPTOR = _DATABASE_CONTAINS_RES,
      __module__ = 'protobuf.database_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.Database.Contains.Res)
      ))
    ,
    DESCRIPTOR = _DATABASE_CONTAINS,
    __module__ = 'protobuf.database_pb2'
    # @@protoc_insertion_point(class_scope:grakn.protocol.Database.Contains)
    ))
  ,

  Create = _reflection.GeneratedProtocolMessageType('Create', (_message.Message,), dict(

    Req = _reflection.GeneratedProtocolMessageType('Req', (_message.Message,), dict(
      DESCRIPTOR = _DATABASE_CREATE_REQ,
      __module__ = 'protobuf.database_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.Database.Create.Req)
      ))
    ,

    Res = _reflection.GeneratedProtocolMessageType('Res', (_message.Message,), dict(
      DESCRIPTOR = _DATABASE_CREATE_RES,
      __module__ = 'protobuf.database_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.Database.Create.Res)
      ))
    ,
    DESCRIPTOR = _DATABASE_CREATE,
    __module__ = 'protobuf.database_pb2'
    # @@protoc_insertion_point(class_scope:grakn.protocol.Database.Create)
    ))
  ,

  All = _reflection.GeneratedProtocolMessageType('All', (_message.Message,), dict(

    Req = _reflection.GeneratedProtocolMessageType('Req', (_message.Message,), dict(
      DESCRIPTOR = _DATABASE_ALL_REQ,
      __module__ = 'protobuf.database_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.Database.All.Req)
      ))
    ,

    Res = _reflection.GeneratedProtocolMessageType('Res', (_message.Message,), dict(
      DESCRIPTOR = _DATABASE_ALL_RES,
      __module__ = 'protobuf.database_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.Database.All.Res)
      ))
    ,
    DESCRIPTOR = _DATABASE_ALL,
    __module__ = 'protobuf.database_pb2'
    # @@protoc_insertion_point(class_scope:grakn.protocol.Database.All)
    ))
  ,

  Delete = _reflection.GeneratedProtocolMessageType('Delete', (_message.Message,), dict(

    Req = _reflection.GeneratedProtocolMessageType('Req', (_message.Message,), dict(
      DESCRIPTOR = _DATABASE_DELETE_REQ,
      __module__ = 'protobuf.database_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.Database.Delete.Req)
      ))
    ,

    Res = _reflection.GeneratedProtocolMessageType('Res', (_message.Message,), dict(
      DESCRIPTOR = _DATABASE_DELETE_RES,
      __module__ = 'protobuf.database_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.Database.Delete.Res)
      ))
    ,
    DESCRIPTOR = _DATABASE_DELETE,
    __module__ = 'protobuf.database_pb2'
    # @@protoc_insertion_point(class_scope:grakn.protocol.Database.Delete)
    ))
  ,
  DESCRIPTOR = _DATABASE,
  __module__ = 'protobuf.database_pb2'
  # @@protoc_insertion_point(class_scope:grakn.protocol.Database)
  ))
_sym_db.RegisterMessage(Database)
_sym_db.RegisterMessage(Database.Contains)
_sym_db.RegisterMessage(Database.Contains.Req)
_sym_db.RegisterMessage(Database.Contains.Res)
_sym_db.RegisterMessage(Database.Create)
_sym_db.RegisterMessage(Database.Create.Req)
_sym_db.RegisterMessage(Database.Create.Res)
_sym_db.RegisterMessage(Database.All)
_sym_db.RegisterMessage(Database.All.Req)
_sym_db.RegisterMessage(Database.All.Res)
_sym_db.RegisterMessage(Database.Delete)
_sym_db.RegisterMessage(Database.Delete.Req)
_sym_db.RegisterMessage(Database.Delete.Res)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
