# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protobuf/answer.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from grakn_protocol.protobuf import concept_pb2 as protobuf_dot_concept__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='protobuf/answer.proto',
  package='grakn.protocol',
  syntax='proto3',
  serialized_options=_b('\n\016grakn.protocolB\013AnswerProto'),
  serialized_pb=_b('\n\x15protobuf/answer.proto\x12\x0egrakn.protocol\x1a\x16protobuf/concept.proto\"\xae\x01\n\nConceptMap\x12\x35\n\x03map\x18\x01 \x03(\x0b\x32#.grakn.protocol.ConceptMap.MapEntryR\x03map\x12\x18\n\x07pattern\x18\x02 \x01(\tR\x07pattern\x1aO\n\x08MapEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12-\n\x05value\x18\x02 \x01(\x0b\x32\x17.grakn.protocol.ConceptR\x05value:\x02\x38\x01\"\x7f\n\x0f\x43onceptMapGroup\x12-\n\x05owner\x18\x01 \x01(\x0b\x32\x17.grakn.protocol.ConceptR\x05owner\x12=\n\x0c\x63oncept_maps\x18\x02 \x03(\x0b\x32\x1a.grakn.protocol.ConceptMapR\x0b\x63onceptMaps\"l\n\x07Numeric\x12\x1f\n\nlong_value\x18\x01 \x01(\x03H\x00R\tlongValue\x12#\n\x0c\x64ouble_value\x18\x02 \x01(\x01H\x00R\x0b\x64oubleValue\x12\x12\n\x03nan\x18\x03 \x01(\x08H\x00R\x03nanB\x07\n\x05value\"n\n\x0cNumericGroup\x12-\n\x05owner\x18\x01 \x01(\x0b\x32\x17.grakn.protocol.ConceptR\x05owner\x12/\n\x06number\x18\x02 \x01(\x0b\x32\x17.grakn.protocol.NumericR\x06numberB\x1d\n\x0egrakn.protocolB\x0b\x41nswerProtob\x06proto3')
  ,
  dependencies=[protobuf_dot_concept__pb2.DESCRIPTOR,])




_CONCEPTMAP_MAPENTRY = _descriptor.Descriptor(
  name='MapEntry',
  full_name='grakn.protocol.ConceptMap.MapEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='grakn.protocol.ConceptMap.MapEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='key', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='grakn.protocol.ConceptMap.MapEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='value', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=161,
  serialized_end=240,
)

_CONCEPTMAP = _descriptor.Descriptor(
  name='ConceptMap',
  full_name='grakn.protocol.ConceptMap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='map', full_name='grakn.protocol.ConceptMap.map', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='map', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pattern', full_name='grakn.protocol.ConceptMap.pattern', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='pattern', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CONCEPTMAP_MAPENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=66,
  serialized_end=240,
)


_CONCEPTMAPGROUP = _descriptor.Descriptor(
  name='ConceptMapGroup',
  full_name='grakn.protocol.ConceptMapGroup',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='owner', full_name='grakn.protocol.ConceptMapGroup.owner', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='owner', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='concept_maps', full_name='grakn.protocol.ConceptMapGroup.concept_maps', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='conceptMaps', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=242,
  serialized_end=369,
)


_NUMERIC = _descriptor.Descriptor(
  name='Numeric',
  full_name='grakn.protocol.Numeric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='long_value', full_name='grakn.protocol.Numeric.long_value', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='longValue', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='double_value', full_name='grakn.protocol.Numeric.double_value', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='doubleValue', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='nan', full_name='grakn.protocol.Numeric.nan', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='nan', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='grakn.protocol.Numeric.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=371,
  serialized_end=479,
)


_NUMERICGROUP = _descriptor.Descriptor(
  name='NumericGroup',
  full_name='grakn.protocol.NumericGroup',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='owner', full_name='grakn.protocol.NumericGroup.owner', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='owner', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='number', full_name='grakn.protocol.NumericGroup.number', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='number', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=481,
  serialized_end=591,
)

_CONCEPTMAP_MAPENTRY.fields_by_name['value'].message_type = protobuf_dot_concept__pb2._CONCEPT
_CONCEPTMAP_MAPENTRY.containing_type = _CONCEPTMAP
_CONCEPTMAP.fields_by_name['map'].message_type = _CONCEPTMAP_MAPENTRY
_CONCEPTMAPGROUP.fields_by_name['owner'].message_type = protobuf_dot_concept__pb2._CONCEPT
_CONCEPTMAPGROUP.fields_by_name['concept_maps'].message_type = _CONCEPTMAP
_NUMERIC.oneofs_by_name['value'].fields.append(
  _NUMERIC.fields_by_name['long_value'])
_NUMERIC.fields_by_name['long_value'].containing_oneof = _NUMERIC.oneofs_by_name['value']
_NUMERIC.oneofs_by_name['value'].fields.append(
  _NUMERIC.fields_by_name['double_value'])
_NUMERIC.fields_by_name['double_value'].containing_oneof = _NUMERIC.oneofs_by_name['value']
_NUMERIC.oneofs_by_name['value'].fields.append(
  _NUMERIC.fields_by_name['nan'])
_NUMERIC.fields_by_name['nan'].containing_oneof = _NUMERIC.oneofs_by_name['value']
_NUMERICGROUP.fields_by_name['owner'].message_type = protobuf_dot_concept__pb2._CONCEPT
_NUMERICGROUP.fields_by_name['number'].message_type = _NUMERIC
DESCRIPTOR.message_types_by_name['ConceptMap'] = _CONCEPTMAP
DESCRIPTOR.message_types_by_name['ConceptMapGroup'] = _CONCEPTMAPGROUP
DESCRIPTOR.message_types_by_name['Numeric'] = _NUMERIC
DESCRIPTOR.message_types_by_name['NumericGroup'] = _NUMERICGROUP
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ConceptMap = _reflection.GeneratedProtocolMessageType('ConceptMap', (_message.Message,), dict(

  MapEntry = _reflection.GeneratedProtocolMessageType('MapEntry', (_message.Message,), dict(
    DESCRIPTOR = _CONCEPTMAP_MAPENTRY,
    __module__ = 'protobuf.answer_pb2'
    # @@protoc_insertion_point(class_scope:grakn.protocol.ConceptMap.MapEntry)
    ))
  ,
  DESCRIPTOR = _CONCEPTMAP,
  __module__ = 'protobuf.answer_pb2'
  # @@protoc_insertion_point(class_scope:grakn.protocol.ConceptMap)
  ))
_sym_db.RegisterMessage(ConceptMap)
_sym_db.RegisterMessage(ConceptMap.MapEntry)

ConceptMapGroup = _reflection.GeneratedProtocolMessageType('ConceptMapGroup', (_message.Message,), dict(
  DESCRIPTOR = _CONCEPTMAPGROUP,
  __module__ = 'protobuf.answer_pb2'
  # @@protoc_insertion_point(class_scope:grakn.protocol.ConceptMapGroup)
  ))
_sym_db.RegisterMessage(ConceptMapGroup)

Numeric = _reflection.GeneratedProtocolMessageType('Numeric', (_message.Message,), dict(
  DESCRIPTOR = _NUMERIC,
  __module__ = 'protobuf.answer_pb2'
  # @@protoc_insertion_point(class_scope:grakn.protocol.Numeric)
  ))
_sym_db.RegisterMessage(Numeric)

NumericGroup = _reflection.GeneratedProtocolMessageType('NumericGroup', (_message.Message,), dict(
  DESCRIPTOR = _NUMERICGROUP,
  __module__ = 'protobuf.answer_pb2'
  # @@protoc_insertion_point(class_scope:grakn.protocol.NumericGroup)
  ))
_sym_db.RegisterMessage(NumericGroup)


DESCRIPTOR._options = None
_CONCEPTMAP_MAPENTRY._options = None
# @@protoc_insertion_point(module_scope)
