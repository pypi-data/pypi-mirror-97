# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protobuf/logic.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='protobuf/logic.proto',
  package='grakn.protocol',
  syntax='proto3',
  serialized_options=_b('\n\016grakn.protocolB\nLogicProto'),
  serialized_pb=_b('\n\x14protobuf/logic.proto\x12\x0egrakn.protocol\"\xaf\x06\n\x0cLogicManager\x1a\xf9\x01\n\x03Req\x12L\n\x0cget_rule_req\x18\x01 \x01(\x0b\x32(.grakn.protocol.LogicManager.GetRule.ReqH\x00R\ngetRuleReq\x12L\n\x0cput_rule_req\x18\x02 \x01(\x0b\x32(.grakn.protocol.LogicManager.PutRule.ReqH\x00R\nputRuleReq\x12O\n\rget_rules_req\x18\x03 \x01(\x0b\x32).grakn.protocol.LogicManager.GetRules.ReqH\x00R\x0bgetRulesReqB\x05\n\x03req\x1a\xf9\x01\n\x03Res\x12L\n\x0cget_rule_res\x18\x01 \x01(\x0b\x32(.grakn.protocol.LogicManager.GetRule.ResH\x00R\ngetRuleRes\x12L\n\x0cput_rule_res\x18\x02 \x01(\x0b\x32(.grakn.protocol.LogicManager.PutRule.ResH\x00R\nputRuleRes\x12O\n\rget_rules_res\x18\x03 \x01(\x0b\x32).grakn.protocol.LogicManager.GetRules.ResH\x00R\x0bgetRulesResB\x05\n\x03res\x1a`\n\x07GetRule\x1a\x1b\n\x03Req\x12\x14\n\x05label\x18\x01 \x01(\tR\x05label\x1a\x38\n\x03Res\x12*\n\x04rule\x18\x01 \x01(\x0b\x32\x14.grakn.protocol.RuleH\x00R\x04ruleB\x05\n\x03res\x1a\x7f\n\x07PutRule\x1a\x43\n\x03Req\x12\x14\n\x05label\x18\x01 \x01(\tR\x05label\x12\x12\n\x04when\x18\x02 \x01(\tR\x04when\x12\x12\n\x04then\x18\x03 \x01(\tR\x04then\x1a/\n\x03Res\x12(\n\x04rule\x18\x01 \x01(\x0b\x32\x14.grakn.protocol.RuleR\x04rule\x1a\x44\n\x08GetRules\x1a\x05\n\x03Req\x1a\x31\n\x03Res\x12*\n\x05rules\x18\x01 \x03(\x0b\x32\x14.grakn.protocol.RuleR\x05rules\"\xfa\x03\n\x04Rule\x12\x14\n\x05label\x18\x01 \x01(\tR\x05label\x12\x12\n\x04when\x18\x02 \x01(\tR\x04when\x12\x12\n\x04then\x18\x03 \x01(\tR\x04then\x1a\xbf\x01\n\x03Req\x12\x14\n\x05label\x18\x01 \x01(\tR\x05label\x12I\n\x0frule_delete_req\x18\x64 \x01(\x0b\x32\x1f.grakn.protocol.Rule.Delete.ReqH\x00R\rruleDeleteReq\x12P\n\x12rule_set_label_req\x18\x65 \x01(\x0b\x32!.grakn.protocol.Rule.SetLabel.ReqH\x00R\x0fruleSetLabelReqB\x05\n\x03req\x1a\xa9\x01\n\x03Res\x12I\n\x0frule_delete_res\x18\x64 \x01(\x0b\x32\x1f.grakn.protocol.Rule.Delete.ResH\x00R\rruleDeleteRes\x12P\n\x12rule_set_label_res\x18\x65 \x01(\x0b\x32!.grakn.protocol.Rule.SetLabel.ResH\x00R\x0fruleSetLabelResB\x05\n\x03res\x1a\x16\n\x06\x44\x65lete\x1a\x05\n\x03Req\x1a\x05\n\x03Res\x1a.\n\x08SetLabel\x1a\x1b\n\x03Req\x12\x14\n\x05label\x18\x01 \x01(\tR\x05label\x1a\x05\n\x03ResB\x1c\n\x0egrakn.protocolB\nLogicProtob\x06proto3')
)




_LOGICMANAGER_REQ = _descriptor.Descriptor(
  name='Req',
  full_name='grakn.protocol.LogicManager.Req',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='get_rule_req', full_name='grakn.protocol.LogicManager.Req.get_rule_req', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='getRuleReq', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='put_rule_req', full_name='grakn.protocol.LogicManager.Req.put_rule_req', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='putRuleReq', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='get_rules_req', full_name='grakn.protocol.LogicManager.Req.get_rules_req', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='getRulesReq', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='req', full_name='grakn.protocol.LogicManager.Req.req',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=58,
  serialized_end=307,
)

_LOGICMANAGER_RES = _descriptor.Descriptor(
  name='Res',
  full_name='grakn.protocol.LogicManager.Res',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='get_rule_res', full_name='grakn.protocol.LogicManager.Res.get_rule_res', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='getRuleRes', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='put_rule_res', full_name='grakn.protocol.LogicManager.Res.put_rule_res', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='putRuleRes', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='get_rules_res', full_name='grakn.protocol.LogicManager.Res.get_rules_res', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='getRulesRes', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='res', full_name='grakn.protocol.LogicManager.Res.res',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=310,
  serialized_end=559,
)

_LOGICMANAGER_GETRULE_REQ = _descriptor.Descriptor(
  name='Req',
  full_name='grakn.protocol.LogicManager.GetRule.Req',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='grakn.protocol.LogicManager.GetRule.Req.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='label', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=572,
  serialized_end=599,
)

_LOGICMANAGER_GETRULE_RES = _descriptor.Descriptor(
  name='Res',
  full_name='grakn.protocol.LogicManager.GetRule.Res',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rule', full_name='grakn.protocol.LogicManager.GetRule.Res.rule', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='rule', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='res', full_name='grakn.protocol.LogicManager.GetRule.Res.res',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=601,
  serialized_end=657,
)

_LOGICMANAGER_GETRULE = _descriptor.Descriptor(
  name='GetRule',
  full_name='grakn.protocol.LogicManager.GetRule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_LOGICMANAGER_GETRULE_REQ, _LOGICMANAGER_GETRULE_RES, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=561,
  serialized_end=657,
)

_LOGICMANAGER_PUTRULE_REQ = _descriptor.Descriptor(
  name='Req',
  full_name='grakn.protocol.LogicManager.PutRule.Req',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='grakn.protocol.LogicManager.PutRule.Req.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='label', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='when', full_name='grakn.protocol.LogicManager.PutRule.Req.when', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='when', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='then', full_name='grakn.protocol.LogicManager.PutRule.Req.then', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='then', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=670,
  serialized_end=737,
)

_LOGICMANAGER_PUTRULE_RES = _descriptor.Descriptor(
  name='Res',
  full_name='grakn.protocol.LogicManager.PutRule.Res',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rule', full_name='grakn.protocol.LogicManager.PutRule.Res.rule', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='rule', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=739,
  serialized_end=786,
)

_LOGICMANAGER_PUTRULE = _descriptor.Descriptor(
  name='PutRule',
  full_name='grakn.protocol.LogicManager.PutRule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_LOGICMANAGER_PUTRULE_REQ, _LOGICMANAGER_PUTRULE_RES, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=659,
  serialized_end=786,
)

_LOGICMANAGER_GETRULES_REQ = _descriptor.Descriptor(
  name='Req',
  full_name='grakn.protocol.LogicManager.GetRules.Req',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=58,
  serialized_end=63,
)

_LOGICMANAGER_GETRULES_RES = _descriptor.Descriptor(
  name='Res',
  full_name='grakn.protocol.LogicManager.GetRules.Res',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rules', full_name='grakn.protocol.LogicManager.GetRules.Res.rules', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='rules', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=807,
  serialized_end=856,
)

_LOGICMANAGER_GETRULES = _descriptor.Descriptor(
  name='GetRules',
  full_name='grakn.protocol.LogicManager.GetRules',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_LOGICMANAGER_GETRULES_REQ, _LOGICMANAGER_GETRULES_RES, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=788,
  serialized_end=856,
)

_LOGICMANAGER = _descriptor.Descriptor(
  name='LogicManager',
  full_name='grakn.protocol.LogicManager',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_LOGICMANAGER_REQ, _LOGICMANAGER_RES, _LOGICMANAGER_GETRULE, _LOGICMANAGER_PUTRULE, _LOGICMANAGER_GETRULES, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=41,
  serialized_end=856,
)


_RULE_REQ = _descriptor.Descriptor(
  name='Req',
  full_name='grakn.protocol.Rule.Req',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='grakn.protocol.Rule.Req.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='label', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rule_delete_req', full_name='grakn.protocol.Rule.Req.rule_delete_req', index=1,
      number=100, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='ruleDeleteReq', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rule_set_label_req', full_name='grakn.protocol.Rule.Req.rule_set_label_req', index=2,
      number=101, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='ruleSetLabelReq', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='req', full_name='grakn.protocol.Rule.Req.req',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=930,
  serialized_end=1121,
)

_RULE_RES = _descriptor.Descriptor(
  name='Res',
  full_name='grakn.protocol.Rule.Res',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rule_delete_res', full_name='grakn.protocol.Rule.Res.rule_delete_res', index=0,
      number=100, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='ruleDeleteRes', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rule_set_label_res', full_name='grakn.protocol.Rule.Res.rule_set_label_res', index=1,
      number=101, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='ruleSetLabelRes', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='res', full_name='grakn.protocol.Rule.Res.res',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1124,
  serialized_end=1293,
)

_RULE_DELETE_REQ = _descriptor.Descriptor(
  name='Req',
  full_name='grakn.protocol.Rule.Delete.Req',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=58,
  serialized_end=63,
)

_RULE_DELETE_RES = _descriptor.Descriptor(
  name='Res',
  full_name='grakn.protocol.Rule.Delete.Res',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=310,
  serialized_end=315,
)

_RULE_DELETE = _descriptor.Descriptor(
  name='Delete',
  full_name='grakn.protocol.Rule.Delete',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_RULE_DELETE_REQ, _RULE_DELETE_RES, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1295,
  serialized_end=1317,
)

_RULE_SETLABEL_REQ = _descriptor.Descriptor(
  name='Req',
  full_name='grakn.protocol.Rule.SetLabel.Req',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='grakn.protocol.Rule.SetLabel.Req.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='label', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=572,
  serialized_end=599,
)

_RULE_SETLABEL_RES = _descriptor.Descriptor(
  name='Res',
  full_name='grakn.protocol.Rule.SetLabel.Res',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=310,
  serialized_end=315,
)

_RULE_SETLABEL = _descriptor.Descriptor(
  name='SetLabel',
  full_name='grakn.protocol.Rule.SetLabel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_RULE_SETLABEL_REQ, _RULE_SETLABEL_RES, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1319,
  serialized_end=1365,
)

_RULE = _descriptor.Descriptor(
  name='Rule',
  full_name='grakn.protocol.Rule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='grakn.protocol.Rule.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='label', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='when', full_name='grakn.protocol.Rule.when', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='when', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='then', full_name='grakn.protocol.Rule.then', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='then', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_RULE_REQ, _RULE_RES, _RULE_DELETE, _RULE_SETLABEL, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=859,
  serialized_end=1365,
)

_LOGICMANAGER_REQ.fields_by_name['get_rule_req'].message_type = _LOGICMANAGER_GETRULE_REQ
_LOGICMANAGER_REQ.fields_by_name['put_rule_req'].message_type = _LOGICMANAGER_PUTRULE_REQ
_LOGICMANAGER_REQ.fields_by_name['get_rules_req'].message_type = _LOGICMANAGER_GETRULES_REQ
_LOGICMANAGER_REQ.containing_type = _LOGICMANAGER
_LOGICMANAGER_REQ.oneofs_by_name['req'].fields.append(
  _LOGICMANAGER_REQ.fields_by_name['get_rule_req'])
_LOGICMANAGER_REQ.fields_by_name['get_rule_req'].containing_oneof = _LOGICMANAGER_REQ.oneofs_by_name['req']
_LOGICMANAGER_REQ.oneofs_by_name['req'].fields.append(
  _LOGICMANAGER_REQ.fields_by_name['put_rule_req'])
_LOGICMANAGER_REQ.fields_by_name['put_rule_req'].containing_oneof = _LOGICMANAGER_REQ.oneofs_by_name['req']
_LOGICMANAGER_REQ.oneofs_by_name['req'].fields.append(
  _LOGICMANAGER_REQ.fields_by_name['get_rules_req'])
_LOGICMANAGER_REQ.fields_by_name['get_rules_req'].containing_oneof = _LOGICMANAGER_REQ.oneofs_by_name['req']
_LOGICMANAGER_RES.fields_by_name['get_rule_res'].message_type = _LOGICMANAGER_GETRULE_RES
_LOGICMANAGER_RES.fields_by_name['put_rule_res'].message_type = _LOGICMANAGER_PUTRULE_RES
_LOGICMANAGER_RES.fields_by_name['get_rules_res'].message_type = _LOGICMANAGER_GETRULES_RES
_LOGICMANAGER_RES.containing_type = _LOGICMANAGER
_LOGICMANAGER_RES.oneofs_by_name['res'].fields.append(
  _LOGICMANAGER_RES.fields_by_name['get_rule_res'])
_LOGICMANAGER_RES.fields_by_name['get_rule_res'].containing_oneof = _LOGICMANAGER_RES.oneofs_by_name['res']
_LOGICMANAGER_RES.oneofs_by_name['res'].fields.append(
  _LOGICMANAGER_RES.fields_by_name['put_rule_res'])
_LOGICMANAGER_RES.fields_by_name['put_rule_res'].containing_oneof = _LOGICMANAGER_RES.oneofs_by_name['res']
_LOGICMANAGER_RES.oneofs_by_name['res'].fields.append(
  _LOGICMANAGER_RES.fields_by_name['get_rules_res'])
_LOGICMANAGER_RES.fields_by_name['get_rules_res'].containing_oneof = _LOGICMANAGER_RES.oneofs_by_name['res']
_LOGICMANAGER_GETRULE_REQ.containing_type = _LOGICMANAGER_GETRULE
_LOGICMANAGER_GETRULE_RES.fields_by_name['rule'].message_type = _RULE
_LOGICMANAGER_GETRULE_RES.containing_type = _LOGICMANAGER_GETRULE
_LOGICMANAGER_GETRULE_RES.oneofs_by_name['res'].fields.append(
  _LOGICMANAGER_GETRULE_RES.fields_by_name['rule'])
_LOGICMANAGER_GETRULE_RES.fields_by_name['rule'].containing_oneof = _LOGICMANAGER_GETRULE_RES.oneofs_by_name['res']
_LOGICMANAGER_GETRULE.containing_type = _LOGICMANAGER
_LOGICMANAGER_PUTRULE_REQ.containing_type = _LOGICMANAGER_PUTRULE
_LOGICMANAGER_PUTRULE_RES.fields_by_name['rule'].message_type = _RULE
_LOGICMANAGER_PUTRULE_RES.containing_type = _LOGICMANAGER_PUTRULE
_LOGICMANAGER_PUTRULE.containing_type = _LOGICMANAGER
_LOGICMANAGER_GETRULES_REQ.containing_type = _LOGICMANAGER_GETRULES
_LOGICMANAGER_GETRULES_RES.fields_by_name['rules'].message_type = _RULE
_LOGICMANAGER_GETRULES_RES.containing_type = _LOGICMANAGER_GETRULES
_LOGICMANAGER_GETRULES.containing_type = _LOGICMANAGER
_RULE_REQ.fields_by_name['rule_delete_req'].message_type = _RULE_DELETE_REQ
_RULE_REQ.fields_by_name['rule_set_label_req'].message_type = _RULE_SETLABEL_REQ
_RULE_REQ.containing_type = _RULE
_RULE_REQ.oneofs_by_name['req'].fields.append(
  _RULE_REQ.fields_by_name['rule_delete_req'])
_RULE_REQ.fields_by_name['rule_delete_req'].containing_oneof = _RULE_REQ.oneofs_by_name['req']
_RULE_REQ.oneofs_by_name['req'].fields.append(
  _RULE_REQ.fields_by_name['rule_set_label_req'])
_RULE_REQ.fields_by_name['rule_set_label_req'].containing_oneof = _RULE_REQ.oneofs_by_name['req']
_RULE_RES.fields_by_name['rule_delete_res'].message_type = _RULE_DELETE_RES
_RULE_RES.fields_by_name['rule_set_label_res'].message_type = _RULE_SETLABEL_RES
_RULE_RES.containing_type = _RULE
_RULE_RES.oneofs_by_name['res'].fields.append(
  _RULE_RES.fields_by_name['rule_delete_res'])
_RULE_RES.fields_by_name['rule_delete_res'].containing_oneof = _RULE_RES.oneofs_by_name['res']
_RULE_RES.oneofs_by_name['res'].fields.append(
  _RULE_RES.fields_by_name['rule_set_label_res'])
_RULE_RES.fields_by_name['rule_set_label_res'].containing_oneof = _RULE_RES.oneofs_by_name['res']
_RULE_DELETE_REQ.containing_type = _RULE_DELETE
_RULE_DELETE_RES.containing_type = _RULE_DELETE
_RULE_DELETE.containing_type = _RULE
_RULE_SETLABEL_REQ.containing_type = _RULE_SETLABEL
_RULE_SETLABEL_RES.containing_type = _RULE_SETLABEL
_RULE_SETLABEL.containing_type = _RULE
DESCRIPTOR.message_types_by_name['LogicManager'] = _LOGICMANAGER
DESCRIPTOR.message_types_by_name['Rule'] = _RULE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

LogicManager = _reflection.GeneratedProtocolMessageType('LogicManager', (_message.Message,), dict(

  Req = _reflection.GeneratedProtocolMessageType('Req', (_message.Message,), dict(
    DESCRIPTOR = _LOGICMANAGER_REQ,
    __module__ = 'protobuf.logic_pb2'
    # @@protoc_insertion_point(class_scope:grakn.protocol.LogicManager.Req)
    ))
  ,

  Res = _reflection.GeneratedProtocolMessageType('Res', (_message.Message,), dict(
    DESCRIPTOR = _LOGICMANAGER_RES,
    __module__ = 'protobuf.logic_pb2'
    # @@protoc_insertion_point(class_scope:grakn.protocol.LogicManager.Res)
    ))
  ,

  GetRule = _reflection.GeneratedProtocolMessageType('GetRule', (_message.Message,), dict(

    Req = _reflection.GeneratedProtocolMessageType('Req', (_message.Message,), dict(
      DESCRIPTOR = _LOGICMANAGER_GETRULE_REQ,
      __module__ = 'protobuf.logic_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.LogicManager.GetRule.Req)
      ))
    ,

    Res = _reflection.GeneratedProtocolMessageType('Res', (_message.Message,), dict(
      DESCRIPTOR = _LOGICMANAGER_GETRULE_RES,
      __module__ = 'protobuf.logic_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.LogicManager.GetRule.Res)
      ))
    ,
    DESCRIPTOR = _LOGICMANAGER_GETRULE,
    __module__ = 'protobuf.logic_pb2'
    # @@protoc_insertion_point(class_scope:grakn.protocol.LogicManager.GetRule)
    ))
  ,

  PutRule = _reflection.GeneratedProtocolMessageType('PutRule', (_message.Message,), dict(

    Req = _reflection.GeneratedProtocolMessageType('Req', (_message.Message,), dict(
      DESCRIPTOR = _LOGICMANAGER_PUTRULE_REQ,
      __module__ = 'protobuf.logic_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.LogicManager.PutRule.Req)
      ))
    ,

    Res = _reflection.GeneratedProtocolMessageType('Res', (_message.Message,), dict(
      DESCRIPTOR = _LOGICMANAGER_PUTRULE_RES,
      __module__ = 'protobuf.logic_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.LogicManager.PutRule.Res)
      ))
    ,
    DESCRIPTOR = _LOGICMANAGER_PUTRULE,
    __module__ = 'protobuf.logic_pb2'
    # @@protoc_insertion_point(class_scope:grakn.protocol.LogicManager.PutRule)
    ))
  ,

  GetRules = _reflection.GeneratedProtocolMessageType('GetRules', (_message.Message,), dict(

    Req = _reflection.GeneratedProtocolMessageType('Req', (_message.Message,), dict(
      DESCRIPTOR = _LOGICMANAGER_GETRULES_REQ,
      __module__ = 'protobuf.logic_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.LogicManager.GetRules.Req)
      ))
    ,

    Res = _reflection.GeneratedProtocolMessageType('Res', (_message.Message,), dict(
      DESCRIPTOR = _LOGICMANAGER_GETRULES_RES,
      __module__ = 'protobuf.logic_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.LogicManager.GetRules.Res)
      ))
    ,
    DESCRIPTOR = _LOGICMANAGER_GETRULES,
    __module__ = 'protobuf.logic_pb2'
    # @@protoc_insertion_point(class_scope:grakn.protocol.LogicManager.GetRules)
    ))
  ,
  DESCRIPTOR = _LOGICMANAGER,
  __module__ = 'protobuf.logic_pb2'
  # @@protoc_insertion_point(class_scope:grakn.protocol.LogicManager)
  ))
_sym_db.RegisterMessage(LogicManager)
_sym_db.RegisterMessage(LogicManager.Req)
_sym_db.RegisterMessage(LogicManager.Res)
_sym_db.RegisterMessage(LogicManager.GetRule)
_sym_db.RegisterMessage(LogicManager.GetRule.Req)
_sym_db.RegisterMessage(LogicManager.GetRule.Res)
_sym_db.RegisterMessage(LogicManager.PutRule)
_sym_db.RegisterMessage(LogicManager.PutRule.Req)
_sym_db.RegisterMessage(LogicManager.PutRule.Res)
_sym_db.RegisterMessage(LogicManager.GetRules)
_sym_db.RegisterMessage(LogicManager.GetRules.Req)
_sym_db.RegisterMessage(LogicManager.GetRules.Res)

Rule = _reflection.GeneratedProtocolMessageType('Rule', (_message.Message,), dict(

  Req = _reflection.GeneratedProtocolMessageType('Req', (_message.Message,), dict(
    DESCRIPTOR = _RULE_REQ,
    __module__ = 'protobuf.logic_pb2'
    # @@protoc_insertion_point(class_scope:grakn.protocol.Rule.Req)
    ))
  ,

  Res = _reflection.GeneratedProtocolMessageType('Res', (_message.Message,), dict(
    DESCRIPTOR = _RULE_RES,
    __module__ = 'protobuf.logic_pb2'
    # @@protoc_insertion_point(class_scope:grakn.protocol.Rule.Res)
    ))
  ,

  Delete = _reflection.GeneratedProtocolMessageType('Delete', (_message.Message,), dict(

    Req = _reflection.GeneratedProtocolMessageType('Req', (_message.Message,), dict(
      DESCRIPTOR = _RULE_DELETE_REQ,
      __module__ = 'protobuf.logic_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.Rule.Delete.Req)
      ))
    ,

    Res = _reflection.GeneratedProtocolMessageType('Res', (_message.Message,), dict(
      DESCRIPTOR = _RULE_DELETE_RES,
      __module__ = 'protobuf.logic_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.Rule.Delete.Res)
      ))
    ,
    DESCRIPTOR = _RULE_DELETE,
    __module__ = 'protobuf.logic_pb2'
    # @@protoc_insertion_point(class_scope:grakn.protocol.Rule.Delete)
    ))
  ,

  SetLabel = _reflection.GeneratedProtocolMessageType('SetLabel', (_message.Message,), dict(

    Req = _reflection.GeneratedProtocolMessageType('Req', (_message.Message,), dict(
      DESCRIPTOR = _RULE_SETLABEL_REQ,
      __module__ = 'protobuf.logic_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.Rule.SetLabel.Req)
      ))
    ,

    Res = _reflection.GeneratedProtocolMessageType('Res', (_message.Message,), dict(
      DESCRIPTOR = _RULE_SETLABEL_RES,
      __module__ = 'protobuf.logic_pb2'
      # @@protoc_insertion_point(class_scope:grakn.protocol.Rule.SetLabel.Res)
      ))
    ,
    DESCRIPTOR = _RULE_SETLABEL,
    __module__ = 'protobuf.logic_pb2'
    # @@protoc_insertion_point(class_scope:grakn.protocol.Rule.SetLabel)
    ))
  ,
  DESCRIPTOR = _RULE,
  __module__ = 'protobuf.logic_pb2'
  # @@protoc_insertion_point(class_scope:grakn.protocol.Rule)
  ))
_sym_db.RegisterMessage(Rule)
_sym_db.RegisterMessage(Rule.Req)
_sym_db.RegisterMessage(Rule.Res)
_sym_db.RegisterMessage(Rule.Delete)
_sym_db.RegisterMessage(Rule.Delete.Req)
_sym_db.RegisterMessage(Rule.Delete.Res)
_sym_db.RegisterMessage(Rule.SetLabel)
_sym_db.RegisterMessage(Rule.SetLabel.Req)
_sym_db.RegisterMessage(Rule.SetLabel.Res)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
