# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from grpc_channelz.v1 import channelz_pb2 as grpc__channelz_dot_v1_dot_channelz__pb2


class ChannelzStub(object):
    """Channelz is a service exposed by gRPC servers that provides detailed debug
    information.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetTopChannels = channel.unary_unary(
                '/grpc.channelz.v1.Channelz/GetTopChannels',
                request_serializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetTopChannelsRequest.SerializeToString,
                response_deserializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetTopChannelsResponse.FromString,
                )
        self.GetServers = channel.unary_unary(
                '/grpc.channelz.v1.Channelz/GetServers',
                request_serializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetServersRequest.SerializeToString,
                response_deserializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetServersResponse.FromString,
                )
        self.GetServer = channel.unary_unary(
                '/grpc.channelz.v1.Channelz/GetServer',
                request_serializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetServerRequest.SerializeToString,
                response_deserializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetServerResponse.FromString,
                )
        self.GetServerSockets = channel.unary_unary(
                '/grpc.channelz.v1.Channelz/GetServerSockets',
                request_serializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetServerSocketsRequest.SerializeToString,
                response_deserializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetServerSocketsResponse.FromString,
                )
        self.GetChannel = channel.unary_unary(
                '/grpc.channelz.v1.Channelz/GetChannel',
                request_serializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetChannelRequest.SerializeToString,
                response_deserializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetChannelResponse.FromString,
                )
        self.GetSubchannel = channel.unary_unary(
                '/grpc.channelz.v1.Channelz/GetSubchannel',
                request_serializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetSubchannelRequest.SerializeToString,
                response_deserializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetSubchannelResponse.FromString,
                )
        self.GetSocket = channel.unary_unary(
                '/grpc.channelz.v1.Channelz/GetSocket',
                request_serializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetSocketRequest.SerializeToString,
                response_deserializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetSocketResponse.FromString,
                )


class ChannelzServicer(object):
    """Channelz is a service exposed by gRPC servers that provides detailed debug
    information.
    """

    def GetTopChannels(self, request, context):
        """Gets all root channels (i.e. channels the application has directly
        created). This does not include subchannels nor non-top level channels.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServers(self, request, context):
        """Gets all servers that exist in the process.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServer(self, request, context):
        """Returns a single Server, or else a NOT_FOUND code.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServerSockets(self, request, context):
        """Gets all server sockets that exist in the process.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChannel(self, request, context):
        """Returns a single Channel, or else a NOT_FOUND code.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSubchannel(self, request, context):
        """Returns a single Subchannel, or else a NOT_FOUND code.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSocket(self, request, context):
        """Returns a single Socket or else a NOT_FOUND code.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChannelzServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetTopChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopChannels,
                    request_deserializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetTopChannelsRequest.FromString,
                    response_serializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetTopChannelsResponse.SerializeToString,
            ),
            'GetServers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServers,
                    request_deserializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetServersRequest.FromString,
                    response_serializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetServersResponse.SerializeToString,
            ),
            'GetServer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServer,
                    request_deserializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetServerRequest.FromString,
                    response_serializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetServerResponse.SerializeToString,
            ),
            'GetServerSockets': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServerSockets,
                    request_deserializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetServerSocketsRequest.FromString,
                    response_serializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetServerSocketsResponse.SerializeToString,
            ),
            'GetChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChannel,
                    request_deserializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetChannelRequest.FromString,
                    response_serializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetChannelResponse.SerializeToString,
            ),
            'GetSubchannel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSubchannel,
                    request_deserializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetSubchannelRequest.FromString,
                    response_serializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetSubchannelResponse.SerializeToString,
            ),
            'GetSocket': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSocket,
                    request_deserializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetSocketRequest.FromString,
                    response_serializer=grpc__channelz_dot_v1_dot_channelz__pb2.GetSocketResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc.channelz.v1.Channelz', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Channelz(object):
    """Channelz is a service exposed by gRPC servers that provides detailed debug
    information.
    """

    @staticmethod
    def GetTopChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.channelz.v1.Channelz/GetTopChannels',
            grpc__channelz_dot_v1_dot_channelz__pb2.GetTopChannelsRequest.SerializeToString,
            grpc__channelz_dot_v1_dot_channelz__pb2.GetTopChannelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.channelz.v1.Channelz/GetServers',
            grpc__channelz_dot_v1_dot_channelz__pb2.GetServersRequest.SerializeToString,
            grpc__channelz_dot_v1_dot_channelz__pb2.GetServersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.channelz.v1.Channelz/GetServer',
            grpc__channelz_dot_v1_dot_channelz__pb2.GetServerRequest.SerializeToString,
            grpc__channelz_dot_v1_dot_channelz__pb2.GetServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServerSockets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.channelz.v1.Channelz/GetServerSockets',
            grpc__channelz_dot_v1_dot_channelz__pb2.GetServerSocketsRequest.SerializeToString,
            grpc__channelz_dot_v1_dot_channelz__pb2.GetServerSocketsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.channelz.v1.Channelz/GetChannel',
            grpc__channelz_dot_v1_dot_channelz__pb2.GetChannelRequest.SerializeToString,
            grpc__channelz_dot_v1_dot_channelz__pb2.GetChannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSubchannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.channelz.v1.Channelz/GetSubchannel',
            grpc__channelz_dot_v1_dot_channelz__pb2.GetSubchannelRequest.SerializeToString,
            grpc__channelz_dot_v1_dot_channelz__pb2.GetSubchannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSocket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.channelz.v1.Channelz/GetSocket',
            grpc__channelz_dot_v1_dot_channelz__pb2.GetSocketRequest.SerializeToString,
            grpc__channelz_dot_v1_dot_channelz__pb2.GetSocketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
