Metadata-Version: 2.1
Name: ifmO3r
Version: 0.0.10
Summary: ifm o3r library
Home-page: https://www.ifm3d.com
Author-email: sebastian.voegele@ifm.com
License: Apache 2.0 License
Keywords: ifm,o3r,3d
Platform: UNKNOWN
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Description-Content-Type: text/markdown
Requires-Dist: numpy (>=1.11.0)
Requires-Dist: matplotlib (>=3.3.3)
Requires-Dist: h5py (>=3.1.0)

# ifmO3r

## New python environment
The get the best experience, we recommend to use a blank python venv:
  `python -m venv [path/name_of_venv]`
Now you can choose to either use the local, wheel or pip installation.

## Local install
To install and use the ifmO3r and the ifm3dTiny, you need to install this complete repository with:
`pip install -e [path to setup.py do not include the setup.py within the path]`
This will take care for the python path and dependencies.

## Site package install via wheel
You can also install this package via installing the wheel:
`pip install [path to wheel].whl`
This will be an installation to your python site packages.

## CSR-PyPi
You can also install the ifmO3r via the ifm Nexus3 CSR-PyPi: [https://nexus3.intra.ifm/#browse/browse:csr-pypi]
For that, you have to follow the description from our IT-colleagues:  [https://wiki.ifm.com/display/IT/Nexus+Repository+Manager+OSS#NexusRepositoryManagerOSS-PythonRepository]

Just change the part within the ini file to look like this: 
```
[global]
index = https://nexus3.intra.ifm/repository/csr-pypi/
index-url = https://nexus3.intra.ifm/repository/csr-pypi/simple
extra-index-url =https://nexus.intra.ifm/repository/pypi_python_org/simple
cert = "C:\Users\devoegse\AppData\Roaming\pip\ifmcacert.crt"
```

Beware that the path fits to your user (%appdata%).

## 3D viewer
The 3D viewer is also a package within the ifm csr-pypi repository. You can install therefore the
3D viewer by `pip install ifmO3rViewer`

## Styleguide

- File/Folder names: camelCase - e.g. ifm3dTiny, integrationTests, ...
- Class names: PascalCase - e.g. FrameGrabber(), ImageBuffer(), ...
- Function/Method names: snake_style - e.g. amplitude_image(), _get_xyz_image(), ...
- Variable names: snake_style

### Commit/Merge

GitLab is using a pipeline and will check the code style guide. You can use pylint and the pylint.rc file for
testing your code before committing. A score bellow 5 is disapproved of right now. This score will be increased
later. 


