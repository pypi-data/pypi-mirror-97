# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _CleaverPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCleaverImageToMeshFilterPython
else:
    import _itkCleaverImageToMeshFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkCleaverImageToMeshFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkCleaverImageToMeshFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.stdcomplexPython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkCleaverImageToMeshFilterID2ID2_New():
    return itkCleaverImageToMeshFilterID2ID2.New()

class itkCleaverImageToMeshFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkCleaverImageToMeshFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID2ID2_Clone)
    __swig_destroy__ = _itkCleaverImageToMeshFilterPython.delete_itkCleaverImageToMeshFilterID2ID2
    cast = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkCleaverImageToMeshFilterID2ID2

        Create a new object of the class itkCleaverImageToMeshFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCleaverImageToMeshFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCleaverImageToMeshFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCleaverImageToMeshFilterID2ID2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCleaverImageToMeshFilterID2ID2 in _itkCleaverImageToMeshFilterPython:
_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID2ID2_swigregister(itkCleaverImageToMeshFilterID2ID2)
itkCleaverImageToMeshFilterID2ID2___New_orig__ = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID2ID2___New_orig__
itkCleaverImageToMeshFilterID2ID2_cast = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID2ID2_cast


def itkCleaverImageToMeshFilterID3ID3_New():
    return itkCleaverImageToMeshFilterID3ID3.New()

class itkCleaverImageToMeshFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkCleaverImageToMeshFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID3ID3_Clone)
    __swig_destroy__ = _itkCleaverImageToMeshFilterPython.delete_itkCleaverImageToMeshFilterID3ID3
    cast = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkCleaverImageToMeshFilterID3ID3

        Create a new object of the class itkCleaverImageToMeshFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCleaverImageToMeshFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCleaverImageToMeshFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCleaverImageToMeshFilterID3ID3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCleaverImageToMeshFilterID3ID3 in _itkCleaverImageToMeshFilterPython:
_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID3ID3_swigregister(itkCleaverImageToMeshFilterID3ID3)
itkCleaverImageToMeshFilterID3ID3___New_orig__ = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID3ID3___New_orig__
itkCleaverImageToMeshFilterID3ID3_cast = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID3ID3_cast


def itkCleaverImageToMeshFilterID4ID4_New():
    return itkCleaverImageToMeshFilterID4ID4.New()

class itkCleaverImageToMeshFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkCleaverImageToMeshFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID4ID4_Clone)
    __swig_destroy__ = _itkCleaverImageToMeshFilterPython.delete_itkCleaverImageToMeshFilterID4ID4
    cast = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkCleaverImageToMeshFilterID4ID4

        Create a new object of the class itkCleaverImageToMeshFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCleaverImageToMeshFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCleaverImageToMeshFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCleaverImageToMeshFilterID4ID4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCleaverImageToMeshFilterID4ID4 in _itkCleaverImageToMeshFilterPython:
_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID4ID4_swigregister(itkCleaverImageToMeshFilterID4ID4)
itkCleaverImageToMeshFilterID4ID4___New_orig__ = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID4ID4___New_orig__
itkCleaverImageToMeshFilterID4ID4_cast = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterID4ID4_cast


def itkCleaverImageToMeshFilterIF2IF2_New():
    return itkCleaverImageToMeshFilterIF2IF2.New()

class itkCleaverImageToMeshFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkCleaverImageToMeshFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF2IF2_Clone)
    __swig_destroy__ = _itkCleaverImageToMeshFilterPython.delete_itkCleaverImageToMeshFilterIF2IF2
    cast = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkCleaverImageToMeshFilterIF2IF2

        Create a new object of the class itkCleaverImageToMeshFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCleaverImageToMeshFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCleaverImageToMeshFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCleaverImageToMeshFilterIF2IF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCleaverImageToMeshFilterIF2IF2 in _itkCleaverImageToMeshFilterPython:
_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF2IF2_swigregister(itkCleaverImageToMeshFilterIF2IF2)
itkCleaverImageToMeshFilterIF2IF2___New_orig__ = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF2IF2___New_orig__
itkCleaverImageToMeshFilterIF2IF2_cast = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF2IF2_cast


def itkCleaverImageToMeshFilterIF3IF3_New():
    return itkCleaverImageToMeshFilterIF3IF3.New()

class itkCleaverImageToMeshFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkCleaverImageToMeshFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF3IF3_Clone)
    __swig_destroy__ = _itkCleaverImageToMeshFilterPython.delete_itkCleaverImageToMeshFilterIF3IF3
    cast = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkCleaverImageToMeshFilterIF3IF3

        Create a new object of the class itkCleaverImageToMeshFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCleaverImageToMeshFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCleaverImageToMeshFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCleaverImageToMeshFilterIF3IF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCleaverImageToMeshFilterIF3IF3 in _itkCleaverImageToMeshFilterPython:
_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF3IF3_swigregister(itkCleaverImageToMeshFilterIF3IF3)
itkCleaverImageToMeshFilterIF3IF3___New_orig__ = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF3IF3___New_orig__
itkCleaverImageToMeshFilterIF3IF3_cast = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF3IF3_cast


def itkCleaverImageToMeshFilterIF4IF4_New():
    return itkCleaverImageToMeshFilterIF4IF4.New()

class itkCleaverImageToMeshFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkCleaverImageToMeshFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF4IF4_Clone)
    __swig_destroy__ = _itkCleaverImageToMeshFilterPython.delete_itkCleaverImageToMeshFilterIF4IF4
    cast = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkCleaverImageToMeshFilterIF4IF4

        Create a new object of the class itkCleaverImageToMeshFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCleaverImageToMeshFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCleaverImageToMeshFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCleaverImageToMeshFilterIF4IF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCleaverImageToMeshFilterIF4IF4 in _itkCleaverImageToMeshFilterPython:
_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF4IF4_swigregister(itkCleaverImageToMeshFilterIF4IF4)
itkCleaverImageToMeshFilterIF4IF4___New_orig__ = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF4IF4___New_orig__
itkCleaverImageToMeshFilterIF4IF4_cast = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIF4IF4_cast


def itkCleaverImageToMeshFilterISS2ISS2_New():
    return itkCleaverImageToMeshFilterISS2ISS2.New()

class itkCleaverImageToMeshFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkCleaverImageToMeshFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS2ISS2_Clone)
    __swig_destroy__ = _itkCleaverImageToMeshFilterPython.delete_itkCleaverImageToMeshFilterISS2ISS2
    cast = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkCleaverImageToMeshFilterISS2ISS2

        Create a new object of the class itkCleaverImageToMeshFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCleaverImageToMeshFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCleaverImageToMeshFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCleaverImageToMeshFilterISS2ISS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCleaverImageToMeshFilterISS2ISS2 in _itkCleaverImageToMeshFilterPython:
_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS2ISS2_swigregister(itkCleaverImageToMeshFilterISS2ISS2)
itkCleaverImageToMeshFilterISS2ISS2___New_orig__ = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS2ISS2___New_orig__
itkCleaverImageToMeshFilterISS2ISS2_cast = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS2ISS2_cast


def itkCleaverImageToMeshFilterISS3ISS3_New():
    return itkCleaverImageToMeshFilterISS3ISS3.New()

class itkCleaverImageToMeshFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkCleaverImageToMeshFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS3ISS3_Clone)
    __swig_destroy__ = _itkCleaverImageToMeshFilterPython.delete_itkCleaverImageToMeshFilterISS3ISS3
    cast = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkCleaverImageToMeshFilterISS3ISS3

        Create a new object of the class itkCleaverImageToMeshFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCleaverImageToMeshFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCleaverImageToMeshFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCleaverImageToMeshFilterISS3ISS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCleaverImageToMeshFilterISS3ISS3 in _itkCleaverImageToMeshFilterPython:
_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS3ISS3_swigregister(itkCleaverImageToMeshFilterISS3ISS3)
itkCleaverImageToMeshFilterISS3ISS3___New_orig__ = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS3ISS3___New_orig__
itkCleaverImageToMeshFilterISS3ISS3_cast = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS3ISS3_cast


def itkCleaverImageToMeshFilterISS4ISS4_New():
    return itkCleaverImageToMeshFilterISS4ISS4.New()

class itkCleaverImageToMeshFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkCleaverImageToMeshFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS4ISS4_Clone)
    __swig_destroy__ = _itkCleaverImageToMeshFilterPython.delete_itkCleaverImageToMeshFilterISS4ISS4
    cast = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkCleaverImageToMeshFilterISS4ISS4

        Create a new object of the class itkCleaverImageToMeshFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCleaverImageToMeshFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCleaverImageToMeshFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCleaverImageToMeshFilterISS4ISS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCleaverImageToMeshFilterISS4ISS4 in _itkCleaverImageToMeshFilterPython:
_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS4ISS4_swigregister(itkCleaverImageToMeshFilterISS4ISS4)
itkCleaverImageToMeshFilterISS4ISS4___New_orig__ = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS4ISS4___New_orig__
itkCleaverImageToMeshFilterISS4ISS4_cast = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterISS4ISS4_cast


def itkCleaverImageToMeshFilterIUC2IUC2_New():
    return itkCleaverImageToMeshFilterIUC2IUC2.New()

class itkCleaverImageToMeshFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkCleaverImageToMeshFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC2IUC2_Clone)
    __swig_destroy__ = _itkCleaverImageToMeshFilterPython.delete_itkCleaverImageToMeshFilterIUC2IUC2
    cast = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCleaverImageToMeshFilterIUC2IUC2

        Create a new object of the class itkCleaverImageToMeshFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCleaverImageToMeshFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCleaverImageToMeshFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCleaverImageToMeshFilterIUC2IUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCleaverImageToMeshFilterIUC2IUC2 in _itkCleaverImageToMeshFilterPython:
_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC2IUC2_swigregister(itkCleaverImageToMeshFilterIUC2IUC2)
itkCleaverImageToMeshFilterIUC2IUC2___New_orig__ = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC2IUC2___New_orig__
itkCleaverImageToMeshFilterIUC2IUC2_cast = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC2IUC2_cast


def itkCleaverImageToMeshFilterIUC3IUC3_New():
    return itkCleaverImageToMeshFilterIUC3IUC3.New()

class itkCleaverImageToMeshFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkCleaverImageToMeshFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC3IUC3_Clone)
    __swig_destroy__ = _itkCleaverImageToMeshFilterPython.delete_itkCleaverImageToMeshFilterIUC3IUC3
    cast = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCleaverImageToMeshFilterIUC3IUC3

        Create a new object of the class itkCleaverImageToMeshFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCleaverImageToMeshFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCleaverImageToMeshFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCleaverImageToMeshFilterIUC3IUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCleaverImageToMeshFilterIUC3IUC3 in _itkCleaverImageToMeshFilterPython:
_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC3IUC3_swigregister(itkCleaverImageToMeshFilterIUC3IUC3)
itkCleaverImageToMeshFilterIUC3IUC3___New_orig__ = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC3IUC3___New_orig__
itkCleaverImageToMeshFilterIUC3IUC3_cast = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC3IUC3_cast


def itkCleaverImageToMeshFilterIUC4IUC4_New():
    return itkCleaverImageToMeshFilterIUC4IUC4.New()

class itkCleaverImageToMeshFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkCleaverImageToMeshFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC4IUC4_Clone)
    __swig_destroy__ = _itkCleaverImageToMeshFilterPython.delete_itkCleaverImageToMeshFilterIUC4IUC4
    cast = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkCleaverImageToMeshFilterIUC4IUC4

        Create a new object of the class itkCleaverImageToMeshFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCleaverImageToMeshFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCleaverImageToMeshFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCleaverImageToMeshFilterIUC4IUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCleaverImageToMeshFilterIUC4IUC4 in _itkCleaverImageToMeshFilterPython:
_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC4IUC4_swigregister(itkCleaverImageToMeshFilterIUC4IUC4)
itkCleaverImageToMeshFilterIUC4IUC4___New_orig__ = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC4IUC4___New_orig__
itkCleaverImageToMeshFilterIUC4IUC4_cast = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUC4IUC4_cast


def itkCleaverImageToMeshFilterIUS2IUS2_New():
    return itkCleaverImageToMeshFilterIUS2IUS2.New()

class itkCleaverImageToMeshFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkCleaverImageToMeshFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS2IUS2_Clone)
    __swig_destroy__ = _itkCleaverImageToMeshFilterPython.delete_itkCleaverImageToMeshFilterIUS2IUS2
    cast = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkCleaverImageToMeshFilterIUS2IUS2

        Create a new object of the class itkCleaverImageToMeshFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCleaverImageToMeshFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCleaverImageToMeshFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCleaverImageToMeshFilterIUS2IUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCleaverImageToMeshFilterIUS2IUS2 in _itkCleaverImageToMeshFilterPython:
_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS2IUS2_swigregister(itkCleaverImageToMeshFilterIUS2IUS2)
itkCleaverImageToMeshFilterIUS2IUS2___New_orig__ = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS2IUS2___New_orig__
itkCleaverImageToMeshFilterIUS2IUS2_cast = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS2IUS2_cast


def itkCleaverImageToMeshFilterIUS3IUS3_New():
    return itkCleaverImageToMeshFilterIUS3IUS3.New()

class itkCleaverImageToMeshFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkCleaverImageToMeshFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS3IUS3_Clone)
    __swig_destroy__ = _itkCleaverImageToMeshFilterPython.delete_itkCleaverImageToMeshFilterIUS3IUS3
    cast = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkCleaverImageToMeshFilterIUS3IUS3

        Create a new object of the class itkCleaverImageToMeshFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCleaverImageToMeshFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCleaverImageToMeshFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCleaverImageToMeshFilterIUS3IUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCleaverImageToMeshFilterIUS3IUS3 in _itkCleaverImageToMeshFilterPython:
_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS3IUS3_swigregister(itkCleaverImageToMeshFilterIUS3IUS3)
itkCleaverImageToMeshFilterIUS3IUS3___New_orig__ = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS3IUS3___New_orig__
itkCleaverImageToMeshFilterIUS3IUS3_cast = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS3IUS3_cast


def itkCleaverImageToMeshFilterIUS4IUS4_New():
    return itkCleaverImageToMeshFilterIUS4IUS4.New()

class itkCleaverImageToMeshFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkCleaverImageToMeshFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS4IUS4_Clone)
    __swig_destroy__ = _itkCleaverImageToMeshFilterPython.delete_itkCleaverImageToMeshFilterIUS4IUS4
    cast = _swig_new_static_method(_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkCleaverImageToMeshFilterIUS4IUS4

        Create a new object of the class itkCleaverImageToMeshFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCleaverImageToMeshFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCleaverImageToMeshFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCleaverImageToMeshFilterIUS4IUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCleaverImageToMeshFilterIUS4IUS4 in _itkCleaverImageToMeshFilterPython:
_itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS4IUS4_swigregister(itkCleaverImageToMeshFilterIUS4IUS4)
itkCleaverImageToMeshFilterIUS4IUS4___New_orig__ = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS4IUS4___New_orig__
itkCleaverImageToMeshFilterIUS4IUS4_cast = _itkCleaverImageToMeshFilterPython.itkCleaverImageToMeshFilterIUS4IUS4_cast


from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def cleaver_image_to_mesh_filter(*args, **kwargs):
    """Procedural interface for CleaverImageToMeshFilter"""
    import itk

    instance = itk.CleaverImageToMeshFilter.New(*args, **kwargs)
    return instance.__internal_call__()


def cleaver_image_to_mesh_filter_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    filter_class = itk.Cleaver.CleaverImageToMeshFilter
    is_template = isinstance(filter_class, itkTemplate.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    cleaver_image_to_mesh_filter.__doc__ = filter_object.__doc__
    cleaver_image_to_mesh_filter.__doc__ += "\n args are input(s) to the filter.\n\n"
    cleaver_image_to_mesh_filter.__doc__ += "\n Available keyword arguments:\n"
    if is_template:
        cleaver_image_to_mesh_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        cleaver_image_to_mesh_filter.__doc__ += "\n"
        cleaver_image_to_mesh_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        cleaver_image_to_mesh_filter.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )




