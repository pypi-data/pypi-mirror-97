# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _ITKIOSpatialObjectsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSpatialObjectWriterPython
else:
    import _itkSpatialObjectWriterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkSpatialObjectWriterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkSpatialObjectWriterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkSpatialObjectBasePython
import itk.itkCovariantVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkSpatialObjectPropertyPython
import itk.ITKCommonBasePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkAffineTransformPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkDiffusionTensor3DPython
import itk.itkTransformBasePython
import itk.itkArrayPython
import itk.itkOptimizerParametersPython
import itk.itkVariableLengthVectorPython
import itk.itkArray2DPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkMetaConverterBasePython

def itkSpatialObjectWriter2_New():
    return itkSpatialObjectWriter2.New()

class itkSpatialObjectWriter2(itk.ITKCommonBasePython.itkObject):
    r"""


    TODO. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter2_Clone)
    Update = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter2_Update)
    SetFileName = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter2_SetFileName)
    GetFileName = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter2_GetFileName)
    SetInput = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter2_SetInput)
    SetBinaryPoints = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter2_SetBinaryPoints)
    GetBinaryPoints = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter2_GetBinaryPoints)
    SetTransformPrecision = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter2_SetTransformPrecision)
    GetTransformPrecision = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter2_GetTransformPrecision)
    SetWriteImagesInSeparateFile = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter2_SetWriteImagesInSeparateFile)
    GetWriteImagesInSeparateFile = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter2_GetWriteImagesInSeparateFile)
    RegisterMetaConverter = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter2_RegisterMetaConverter)
    __swig_destroy__ = _itkSpatialObjectWriterPython.delete_itkSpatialObjectWriter2
    cast = _swig_new_static_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter2_cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectWriter2

        Create a new object of the class itkSpatialObjectWriter2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectWriter2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectWriter2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectWriter2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectWriter2 in _itkSpatialObjectWriterPython:
_itkSpatialObjectWriterPython.itkSpatialObjectWriter2_swigregister(itkSpatialObjectWriter2)
itkSpatialObjectWriter2___New_orig__ = _itkSpatialObjectWriterPython.itkSpatialObjectWriter2___New_orig__
itkSpatialObjectWriter2_cast = _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_cast


def itkSpatialObjectWriter3_New():
    return itkSpatialObjectWriter3.New()

class itkSpatialObjectWriter3(itk.ITKCommonBasePython.itkObject):
    r"""


    TODO. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter3_Clone)
    Update = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter3_Update)
    SetFileName = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter3_SetFileName)
    GetFileName = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter3_GetFileName)
    SetInput = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter3_SetInput)
    SetBinaryPoints = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter3_SetBinaryPoints)
    GetBinaryPoints = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter3_GetBinaryPoints)
    SetTransformPrecision = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter3_SetTransformPrecision)
    GetTransformPrecision = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter3_GetTransformPrecision)
    SetWriteImagesInSeparateFile = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter3_SetWriteImagesInSeparateFile)
    GetWriteImagesInSeparateFile = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter3_GetWriteImagesInSeparateFile)
    RegisterMetaConverter = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter3_RegisterMetaConverter)
    __swig_destroy__ = _itkSpatialObjectWriterPython.delete_itkSpatialObjectWriter3
    cast = _swig_new_static_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter3_cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectWriter3

        Create a new object of the class itkSpatialObjectWriter3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectWriter3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectWriter3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectWriter3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectWriter3 in _itkSpatialObjectWriterPython:
_itkSpatialObjectWriterPython.itkSpatialObjectWriter3_swigregister(itkSpatialObjectWriter3)
itkSpatialObjectWriter3___New_orig__ = _itkSpatialObjectWriterPython.itkSpatialObjectWriter3___New_orig__
itkSpatialObjectWriter3_cast = _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_cast


def itkSpatialObjectWriter4_New():
    return itkSpatialObjectWriter4.New()

class itkSpatialObjectWriter4(itk.ITKCommonBasePython.itkObject):
    r"""


    TODO. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter4___New_orig__)
    Clone = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter4_Clone)
    Update = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter4_Update)
    SetFileName = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter4_SetFileName)
    GetFileName = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter4_GetFileName)
    SetInput = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter4_SetInput)
    SetBinaryPoints = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter4_SetBinaryPoints)
    GetBinaryPoints = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter4_GetBinaryPoints)
    SetTransformPrecision = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter4_SetTransformPrecision)
    GetTransformPrecision = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter4_GetTransformPrecision)
    SetWriteImagesInSeparateFile = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter4_SetWriteImagesInSeparateFile)
    GetWriteImagesInSeparateFile = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter4_GetWriteImagesInSeparateFile)
    RegisterMetaConverter = _swig_new_instance_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter4_RegisterMetaConverter)
    __swig_destroy__ = _itkSpatialObjectWriterPython.delete_itkSpatialObjectWriter4
    cast = _swig_new_static_method(_itkSpatialObjectWriterPython.itkSpatialObjectWriter4_cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectWriter4

        Create a new object of the class itkSpatialObjectWriter4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectWriter4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectWriter4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectWriter4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectWriter4 in _itkSpatialObjectWriterPython:
_itkSpatialObjectWriterPython.itkSpatialObjectWriter4_swigregister(itkSpatialObjectWriter4)
itkSpatialObjectWriter4___New_orig__ = _itkSpatialObjectWriterPython.itkSpatialObjectWriter4___New_orig__
itkSpatialObjectWriter4_cast = _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_cast



