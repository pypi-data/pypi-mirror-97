# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _NDRegPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkWrapExtrapolateImageFunctionPython
else:
    import _itkWrapExtrapolateImageFunctionPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkWrapExtrapolateImageFunctionPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkWrapExtrapolateImageFunctionPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkInterpolateImageFunctionPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkImageFunctionBasePython
import itk.itkImagePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkFunctionBasePython
import itk.itkArrayPython
import itk.itkExtrapolateImageFunctionPython

def itkWrapExtrapolateImageFunctionID2D_New():
    return itkWrapExtrapolateImageFunctionID2D.New()

class itkWrapExtrapolateImageFunctionID2D(itk.itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionID2D):
    r"""Proxy of C++ itkWrapExtrapolateImageFunctionID2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID2D___New_orig__)
    Clone = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID2D_Clone)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID2D_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID2D_GetInterpolator)
    SetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID2D_SetInterpolator)
    __swig_destroy__ = _itkWrapExtrapolateImageFunctionPython.delete_itkWrapExtrapolateImageFunctionID2D
    cast = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID2D_cast)

    def New(*args, **kargs):
        """New() -> itkWrapExtrapolateImageFunctionID2D

        Create a new object of the class itkWrapExtrapolateImageFunctionID2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWrapExtrapolateImageFunctionID2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWrapExtrapolateImageFunctionID2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWrapExtrapolateImageFunctionID2D.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWrapExtrapolateImageFunctionID2D in _itkWrapExtrapolateImageFunctionPython:
_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID2D_swigregister(itkWrapExtrapolateImageFunctionID2D)
itkWrapExtrapolateImageFunctionID2D___New_orig__ = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID2D___New_orig__
itkWrapExtrapolateImageFunctionID2D_cast = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID2D_cast


def itkWrapExtrapolateImageFunctionID3D_New():
    return itkWrapExtrapolateImageFunctionID3D.New()

class itkWrapExtrapolateImageFunctionID3D(itk.itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionID3D):
    r"""Proxy of C++ itkWrapExtrapolateImageFunctionID3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID3D___New_orig__)
    Clone = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID3D_Clone)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID3D_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID3D_GetInterpolator)
    SetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID3D_SetInterpolator)
    __swig_destroy__ = _itkWrapExtrapolateImageFunctionPython.delete_itkWrapExtrapolateImageFunctionID3D
    cast = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID3D_cast)

    def New(*args, **kargs):
        """New() -> itkWrapExtrapolateImageFunctionID3D

        Create a new object of the class itkWrapExtrapolateImageFunctionID3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWrapExtrapolateImageFunctionID3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWrapExtrapolateImageFunctionID3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWrapExtrapolateImageFunctionID3D.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWrapExtrapolateImageFunctionID3D in _itkWrapExtrapolateImageFunctionPython:
_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID3D_swigregister(itkWrapExtrapolateImageFunctionID3D)
itkWrapExtrapolateImageFunctionID3D___New_orig__ = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID3D___New_orig__
itkWrapExtrapolateImageFunctionID3D_cast = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID3D_cast


def itkWrapExtrapolateImageFunctionID4D_New():
    return itkWrapExtrapolateImageFunctionID4D.New()

class itkWrapExtrapolateImageFunctionID4D(itk.itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionID4D):
    r"""Proxy of C++ itkWrapExtrapolateImageFunctionID4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID4D___New_orig__)
    Clone = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID4D_Clone)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID4D_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID4D_GetInterpolator)
    SetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID4D_SetInterpolator)
    __swig_destroy__ = _itkWrapExtrapolateImageFunctionPython.delete_itkWrapExtrapolateImageFunctionID4D
    cast = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID4D_cast)

    def New(*args, **kargs):
        """New() -> itkWrapExtrapolateImageFunctionID4D

        Create a new object of the class itkWrapExtrapolateImageFunctionID4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWrapExtrapolateImageFunctionID4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWrapExtrapolateImageFunctionID4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWrapExtrapolateImageFunctionID4D.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWrapExtrapolateImageFunctionID4D in _itkWrapExtrapolateImageFunctionPython:
_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID4D_swigregister(itkWrapExtrapolateImageFunctionID4D)
itkWrapExtrapolateImageFunctionID4D___New_orig__ = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID4D___New_orig__
itkWrapExtrapolateImageFunctionID4D_cast = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionID4D_cast


def itkWrapExtrapolateImageFunctionIF2D_New():
    return itkWrapExtrapolateImageFunctionIF2D.New()

class itkWrapExtrapolateImageFunctionIF2D(itk.itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIF2D):
    r"""Proxy of C++ itkWrapExtrapolateImageFunctionIF2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF2D___New_orig__)
    Clone = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF2D_Clone)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF2D_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF2D_GetInterpolator)
    SetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF2D_SetInterpolator)
    __swig_destroy__ = _itkWrapExtrapolateImageFunctionPython.delete_itkWrapExtrapolateImageFunctionIF2D
    cast = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF2D_cast)

    def New(*args, **kargs):
        """New() -> itkWrapExtrapolateImageFunctionIF2D

        Create a new object of the class itkWrapExtrapolateImageFunctionIF2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWrapExtrapolateImageFunctionIF2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWrapExtrapolateImageFunctionIF2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWrapExtrapolateImageFunctionIF2D.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWrapExtrapolateImageFunctionIF2D in _itkWrapExtrapolateImageFunctionPython:
_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF2D_swigregister(itkWrapExtrapolateImageFunctionIF2D)
itkWrapExtrapolateImageFunctionIF2D___New_orig__ = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF2D___New_orig__
itkWrapExtrapolateImageFunctionIF2D_cast = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF2D_cast


def itkWrapExtrapolateImageFunctionIF3D_New():
    return itkWrapExtrapolateImageFunctionIF3D.New()

class itkWrapExtrapolateImageFunctionIF3D(itk.itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIF3D):
    r"""Proxy of C++ itkWrapExtrapolateImageFunctionIF3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF3D___New_orig__)
    Clone = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF3D_Clone)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF3D_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF3D_GetInterpolator)
    SetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF3D_SetInterpolator)
    __swig_destroy__ = _itkWrapExtrapolateImageFunctionPython.delete_itkWrapExtrapolateImageFunctionIF3D
    cast = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF3D_cast)

    def New(*args, **kargs):
        """New() -> itkWrapExtrapolateImageFunctionIF3D

        Create a new object of the class itkWrapExtrapolateImageFunctionIF3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWrapExtrapolateImageFunctionIF3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWrapExtrapolateImageFunctionIF3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWrapExtrapolateImageFunctionIF3D.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWrapExtrapolateImageFunctionIF3D in _itkWrapExtrapolateImageFunctionPython:
_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF3D_swigregister(itkWrapExtrapolateImageFunctionIF3D)
itkWrapExtrapolateImageFunctionIF3D___New_orig__ = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF3D___New_orig__
itkWrapExtrapolateImageFunctionIF3D_cast = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF3D_cast


def itkWrapExtrapolateImageFunctionIF4D_New():
    return itkWrapExtrapolateImageFunctionIF4D.New()

class itkWrapExtrapolateImageFunctionIF4D(itk.itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIF4D):
    r"""Proxy of C++ itkWrapExtrapolateImageFunctionIF4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF4D___New_orig__)
    Clone = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF4D_Clone)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF4D_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF4D_GetInterpolator)
    SetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF4D_SetInterpolator)
    __swig_destroy__ = _itkWrapExtrapolateImageFunctionPython.delete_itkWrapExtrapolateImageFunctionIF4D
    cast = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF4D_cast)

    def New(*args, **kargs):
        """New() -> itkWrapExtrapolateImageFunctionIF4D

        Create a new object of the class itkWrapExtrapolateImageFunctionIF4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWrapExtrapolateImageFunctionIF4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWrapExtrapolateImageFunctionIF4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWrapExtrapolateImageFunctionIF4D.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWrapExtrapolateImageFunctionIF4D in _itkWrapExtrapolateImageFunctionPython:
_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF4D_swigregister(itkWrapExtrapolateImageFunctionIF4D)
itkWrapExtrapolateImageFunctionIF4D___New_orig__ = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF4D___New_orig__
itkWrapExtrapolateImageFunctionIF4D_cast = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIF4D_cast


def itkWrapExtrapolateImageFunctionISS2D_New():
    return itkWrapExtrapolateImageFunctionISS2D.New()

class itkWrapExtrapolateImageFunctionISS2D(itk.itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionISS2D):
    r"""Proxy of C++ itkWrapExtrapolateImageFunctionISS2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS2D___New_orig__)
    Clone = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS2D_Clone)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS2D_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS2D_GetInterpolator)
    SetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS2D_SetInterpolator)
    __swig_destroy__ = _itkWrapExtrapolateImageFunctionPython.delete_itkWrapExtrapolateImageFunctionISS2D
    cast = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS2D_cast)

    def New(*args, **kargs):
        """New() -> itkWrapExtrapolateImageFunctionISS2D

        Create a new object of the class itkWrapExtrapolateImageFunctionISS2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWrapExtrapolateImageFunctionISS2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWrapExtrapolateImageFunctionISS2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWrapExtrapolateImageFunctionISS2D.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWrapExtrapolateImageFunctionISS2D in _itkWrapExtrapolateImageFunctionPython:
_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS2D_swigregister(itkWrapExtrapolateImageFunctionISS2D)
itkWrapExtrapolateImageFunctionISS2D___New_orig__ = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS2D___New_orig__
itkWrapExtrapolateImageFunctionISS2D_cast = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS2D_cast


def itkWrapExtrapolateImageFunctionISS3D_New():
    return itkWrapExtrapolateImageFunctionISS3D.New()

class itkWrapExtrapolateImageFunctionISS3D(itk.itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionISS3D):
    r"""Proxy of C++ itkWrapExtrapolateImageFunctionISS3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS3D___New_orig__)
    Clone = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS3D_Clone)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS3D_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS3D_GetInterpolator)
    SetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS3D_SetInterpolator)
    __swig_destroy__ = _itkWrapExtrapolateImageFunctionPython.delete_itkWrapExtrapolateImageFunctionISS3D
    cast = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS3D_cast)

    def New(*args, **kargs):
        """New() -> itkWrapExtrapolateImageFunctionISS3D

        Create a new object of the class itkWrapExtrapolateImageFunctionISS3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWrapExtrapolateImageFunctionISS3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWrapExtrapolateImageFunctionISS3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWrapExtrapolateImageFunctionISS3D.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWrapExtrapolateImageFunctionISS3D in _itkWrapExtrapolateImageFunctionPython:
_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS3D_swigregister(itkWrapExtrapolateImageFunctionISS3D)
itkWrapExtrapolateImageFunctionISS3D___New_orig__ = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS3D___New_orig__
itkWrapExtrapolateImageFunctionISS3D_cast = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS3D_cast


def itkWrapExtrapolateImageFunctionISS4D_New():
    return itkWrapExtrapolateImageFunctionISS4D.New()

class itkWrapExtrapolateImageFunctionISS4D(itk.itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionISS4D):
    r"""Proxy of C++ itkWrapExtrapolateImageFunctionISS4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS4D___New_orig__)
    Clone = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS4D_Clone)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS4D_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS4D_GetInterpolator)
    SetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS4D_SetInterpolator)
    __swig_destroy__ = _itkWrapExtrapolateImageFunctionPython.delete_itkWrapExtrapolateImageFunctionISS4D
    cast = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS4D_cast)

    def New(*args, **kargs):
        """New() -> itkWrapExtrapolateImageFunctionISS4D

        Create a new object of the class itkWrapExtrapolateImageFunctionISS4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWrapExtrapolateImageFunctionISS4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWrapExtrapolateImageFunctionISS4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWrapExtrapolateImageFunctionISS4D.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWrapExtrapolateImageFunctionISS4D in _itkWrapExtrapolateImageFunctionPython:
_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS4D_swigregister(itkWrapExtrapolateImageFunctionISS4D)
itkWrapExtrapolateImageFunctionISS4D___New_orig__ = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS4D___New_orig__
itkWrapExtrapolateImageFunctionISS4D_cast = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionISS4D_cast


def itkWrapExtrapolateImageFunctionIUC2D_New():
    return itkWrapExtrapolateImageFunctionIUC2D.New()

class itkWrapExtrapolateImageFunctionIUC2D(itk.itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUC2D):
    r"""Proxy of C++ itkWrapExtrapolateImageFunctionIUC2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC2D___New_orig__)
    Clone = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC2D_Clone)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC2D_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC2D_GetInterpolator)
    SetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC2D_SetInterpolator)
    __swig_destroy__ = _itkWrapExtrapolateImageFunctionPython.delete_itkWrapExtrapolateImageFunctionIUC2D
    cast = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC2D_cast)

    def New(*args, **kargs):
        """New() -> itkWrapExtrapolateImageFunctionIUC2D

        Create a new object of the class itkWrapExtrapolateImageFunctionIUC2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWrapExtrapolateImageFunctionIUC2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWrapExtrapolateImageFunctionIUC2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWrapExtrapolateImageFunctionIUC2D.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWrapExtrapolateImageFunctionIUC2D in _itkWrapExtrapolateImageFunctionPython:
_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC2D_swigregister(itkWrapExtrapolateImageFunctionIUC2D)
itkWrapExtrapolateImageFunctionIUC2D___New_orig__ = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC2D___New_orig__
itkWrapExtrapolateImageFunctionIUC2D_cast = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC2D_cast


def itkWrapExtrapolateImageFunctionIUC3D_New():
    return itkWrapExtrapolateImageFunctionIUC3D.New()

class itkWrapExtrapolateImageFunctionIUC3D(itk.itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUC3D):
    r"""Proxy of C++ itkWrapExtrapolateImageFunctionIUC3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC3D___New_orig__)
    Clone = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC3D_Clone)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC3D_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC3D_GetInterpolator)
    SetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC3D_SetInterpolator)
    __swig_destroy__ = _itkWrapExtrapolateImageFunctionPython.delete_itkWrapExtrapolateImageFunctionIUC3D
    cast = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC3D_cast)

    def New(*args, **kargs):
        """New() -> itkWrapExtrapolateImageFunctionIUC3D

        Create a new object of the class itkWrapExtrapolateImageFunctionIUC3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWrapExtrapolateImageFunctionIUC3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWrapExtrapolateImageFunctionIUC3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWrapExtrapolateImageFunctionIUC3D.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWrapExtrapolateImageFunctionIUC3D in _itkWrapExtrapolateImageFunctionPython:
_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC3D_swigregister(itkWrapExtrapolateImageFunctionIUC3D)
itkWrapExtrapolateImageFunctionIUC3D___New_orig__ = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC3D___New_orig__
itkWrapExtrapolateImageFunctionIUC3D_cast = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC3D_cast


def itkWrapExtrapolateImageFunctionIUC4D_New():
    return itkWrapExtrapolateImageFunctionIUC4D.New()

class itkWrapExtrapolateImageFunctionIUC4D(itk.itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUC4D):
    r"""Proxy of C++ itkWrapExtrapolateImageFunctionIUC4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC4D___New_orig__)
    Clone = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC4D_Clone)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC4D_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC4D_GetInterpolator)
    SetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC4D_SetInterpolator)
    __swig_destroy__ = _itkWrapExtrapolateImageFunctionPython.delete_itkWrapExtrapolateImageFunctionIUC4D
    cast = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC4D_cast)

    def New(*args, **kargs):
        """New() -> itkWrapExtrapolateImageFunctionIUC4D

        Create a new object of the class itkWrapExtrapolateImageFunctionIUC4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWrapExtrapolateImageFunctionIUC4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWrapExtrapolateImageFunctionIUC4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWrapExtrapolateImageFunctionIUC4D.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWrapExtrapolateImageFunctionIUC4D in _itkWrapExtrapolateImageFunctionPython:
_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC4D_swigregister(itkWrapExtrapolateImageFunctionIUC4D)
itkWrapExtrapolateImageFunctionIUC4D___New_orig__ = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC4D___New_orig__
itkWrapExtrapolateImageFunctionIUC4D_cast = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUC4D_cast


def itkWrapExtrapolateImageFunctionIUS2D_New():
    return itkWrapExtrapolateImageFunctionIUS2D.New()

class itkWrapExtrapolateImageFunctionIUS2D(itk.itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUS2D):
    r"""Proxy of C++ itkWrapExtrapolateImageFunctionIUS2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS2D___New_orig__)
    Clone = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS2D_Clone)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS2D_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS2D_GetInterpolator)
    SetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS2D_SetInterpolator)
    __swig_destroy__ = _itkWrapExtrapolateImageFunctionPython.delete_itkWrapExtrapolateImageFunctionIUS2D
    cast = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS2D_cast)

    def New(*args, **kargs):
        """New() -> itkWrapExtrapolateImageFunctionIUS2D

        Create a new object of the class itkWrapExtrapolateImageFunctionIUS2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWrapExtrapolateImageFunctionIUS2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWrapExtrapolateImageFunctionIUS2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWrapExtrapolateImageFunctionIUS2D.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWrapExtrapolateImageFunctionIUS2D in _itkWrapExtrapolateImageFunctionPython:
_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS2D_swigregister(itkWrapExtrapolateImageFunctionIUS2D)
itkWrapExtrapolateImageFunctionIUS2D___New_orig__ = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS2D___New_orig__
itkWrapExtrapolateImageFunctionIUS2D_cast = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS2D_cast


def itkWrapExtrapolateImageFunctionIUS3D_New():
    return itkWrapExtrapolateImageFunctionIUS3D.New()

class itkWrapExtrapolateImageFunctionIUS3D(itk.itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUS3D):
    r"""Proxy of C++ itkWrapExtrapolateImageFunctionIUS3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS3D___New_orig__)
    Clone = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS3D_Clone)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS3D_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS3D_GetInterpolator)
    SetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS3D_SetInterpolator)
    __swig_destroy__ = _itkWrapExtrapolateImageFunctionPython.delete_itkWrapExtrapolateImageFunctionIUS3D
    cast = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS3D_cast)

    def New(*args, **kargs):
        """New() -> itkWrapExtrapolateImageFunctionIUS3D

        Create a new object of the class itkWrapExtrapolateImageFunctionIUS3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWrapExtrapolateImageFunctionIUS3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWrapExtrapolateImageFunctionIUS3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWrapExtrapolateImageFunctionIUS3D.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWrapExtrapolateImageFunctionIUS3D in _itkWrapExtrapolateImageFunctionPython:
_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS3D_swigregister(itkWrapExtrapolateImageFunctionIUS3D)
itkWrapExtrapolateImageFunctionIUS3D___New_orig__ = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS3D___New_orig__
itkWrapExtrapolateImageFunctionIUS3D_cast = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS3D_cast


def itkWrapExtrapolateImageFunctionIUS4D_New():
    return itkWrapExtrapolateImageFunctionIUS4D.New()

class itkWrapExtrapolateImageFunctionIUS4D(itk.itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUS4D):
    r"""Proxy of C++ itkWrapExtrapolateImageFunctionIUS4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS4D___New_orig__)
    Clone = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS4D_Clone)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS4D_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS4D_GetInterpolator)
    SetInterpolator = _swig_new_instance_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS4D_SetInterpolator)
    __swig_destroy__ = _itkWrapExtrapolateImageFunctionPython.delete_itkWrapExtrapolateImageFunctionIUS4D
    cast = _swig_new_static_method(_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS4D_cast)

    def New(*args, **kargs):
        """New() -> itkWrapExtrapolateImageFunctionIUS4D

        Create a new object of the class itkWrapExtrapolateImageFunctionIUS4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWrapExtrapolateImageFunctionIUS4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWrapExtrapolateImageFunctionIUS4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWrapExtrapolateImageFunctionIUS4D.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWrapExtrapolateImageFunctionIUS4D in _itkWrapExtrapolateImageFunctionPython:
_itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS4D_swigregister(itkWrapExtrapolateImageFunctionIUS4D)
itkWrapExtrapolateImageFunctionIUS4D___New_orig__ = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS4D___New_orig__
itkWrapExtrapolateImageFunctionIUS4D_cast = _itkWrapExtrapolateImageFunctionPython.itkWrapExtrapolateImageFunctionIUS4D_cast



