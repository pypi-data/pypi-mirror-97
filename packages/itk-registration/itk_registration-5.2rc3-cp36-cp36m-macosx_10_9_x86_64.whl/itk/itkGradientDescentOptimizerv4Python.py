# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _ITKOptimizersv4Python



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkGradientDescentOptimizerv4Python
else:
    import _itkGradientDescentOptimizerv4Python

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkGradientDescentOptimizerv4Python.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkGradientDescentOptimizerv4Python.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkGradientDescentOptimizerBasev4Python
import itk.itkObjectToObjectOptimizerBasePython
import itk.itkOptimizerParameterScalesEstimatorPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkObjectToObjectMetricBasePython
import itk.itkSingleValuedCostFunctionv4Python
import itk.itkCostFunctionPython

def itkGradientDescentOptimizerv4_New():
    return itkGradientDescentOptimizerv4.New()

class itkGradientDescentOptimizerv4(itk.itkGradientDescentOptimizerBasev4Python.itkGradientDescentOptimizerBasev4TemplateD):
    r"""Proxy of C++ itkGradientDescentOptimizerv4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_Clone)
    SetLearningRate = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_SetLearningRate)
    GetLearningRate = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_GetLearningRate)
    SetMaximumStepSizeInPhysicalUnits = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_SetMaximumStepSizeInPhysicalUnits)
    GetMaximumStepSizeInPhysicalUnits = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_GetMaximumStepSizeInPhysicalUnits)
    SetDoEstimateLearningRateAtEachIteration = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_SetDoEstimateLearningRateAtEachIteration)
    GetDoEstimateLearningRateAtEachIteration = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_GetDoEstimateLearningRateAtEachIteration)
    DoEstimateLearningRateAtEachIterationOn = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_DoEstimateLearningRateAtEachIterationOn)
    DoEstimateLearningRateAtEachIterationOff = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_DoEstimateLearningRateAtEachIterationOff)
    SetDoEstimateLearningRateOnce = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_SetDoEstimateLearningRateOnce)
    GetDoEstimateLearningRateOnce = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_GetDoEstimateLearningRateOnce)
    DoEstimateLearningRateOnceOn = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_DoEstimateLearningRateOnceOn)
    DoEstimateLearningRateOnceOff = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_DoEstimateLearningRateOnceOff)
    SetMinimumConvergenceValue = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_SetMinimumConvergenceValue)
    SetConvergenceWindowSize = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_SetConvergenceWindowSize)
    GetConvergenceValue = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_GetConvergenceValue)
    SetReturnBestParametersAndValue = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_SetReturnBestParametersAndValue)
    GetReturnBestParametersAndValue = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_GetReturnBestParametersAndValue)
    ReturnBestParametersAndValueOn = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_ReturnBestParametersAndValueOn)
    ReturnBestParametersAndValueOff = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_ReturnBestParametersAndValueOff)
    StartOptimization = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_StartOptimization)
    EstimateLearningRate = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_EstimateLearningRate)
    __swig_destroy__ = _itkGradientDescentOptimizerv4Python.delete_itkGradientDescentOptimizerv4
    cast = _swig_new_static_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_cast)

    def New(*args, **kargs):
        """New() -> itkGradientDescentOptimizerv4

        Create a new object of the class itkGradientDescentOptimizerv4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientDescentOptimizerv4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientDescentOptimizerv4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientDescentOptimizerv4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientDescentOptimizerv4 in _itkGradientDescentOptimizerv4Python:
_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_swigregister(itkGradientDescentOptimizerv4)
itkGradientDescentOptimizerv4___New_orig__ = _itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4___New_orig__
itkGradientDescentOptimizerv4_cast = _itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4_cast


def itkGradientDescentOptimizerv4TemplateD_New():
    return itkGradientDescentOptimizerv4TemplateD.New()

class itkGradientDescentOptimizerv4TemplateD(itk.itkGradientDescentOptimizerBasev4Python.itkGradientDescentOptimizerBasev4TemplateD):
    r"""Proxy of C++ itkGradientDescentOptimizerv4TemplateD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_Clone)
    SetLearningRate = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_SetLearningRate)
    GetLearningRate = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_GetLearningRate)
    SetMaximumStepSizeInPhysicalUnits = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_SetMaximumStepSizeInPhysicalUnits)
    GetMaximumStepSizeInPhysicalUnits = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_GetMaximumStepSizeInPhysicalUnits)
    SetDoEstimateLearningRateAtEachIteration = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_SetDoEstimateLearningRateAtEachIteration)
    GetDoEstimateLearningRateAtEachIteration = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_GetDoEstimateLearningRateAtEachIteration)
    DoEstimateLearningRateAtEachIterationOn = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_DoEstimateLearningRateAtEachIterationOn)
    DoEstimateLearningRateAtEachIterationOff = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_DoEstimateLearningRateAtEachIterationOff)
    SetDoEstimateLearningRateOnce = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_SetDoEstimateLearningRateOnce)
    GetDoEstimateLearningRateOnce = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_GetDoEstimateLearningRateOnce)
    DoEstimateLearningRateOnceOn = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_DoEstimateLearningRateOnceOn)
    DoEstimateLearningRateOnceOff = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_DoEstimateLearningRateOnceOff)
    SetMinimumConvergenceValue = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_SetMinimumConvergenceValue)
    SetConvergenceWindowSize = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_SetConvergenceWindowSize)
    GetConvergenceValue = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_GetConvergenceValue)
    SetReturnBestParametersAndValue = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_SetReturnBestParametersAndValue)
    GetReturnBestParametersAndValue = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_GetReturnBestParametersAndValue)
    ReturnBestParametersAndValueOn = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_ReturnBestParametersAndValueOn)
    ReturnBestParametersAndValueOff = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_ReturnBestParametersAndValueOff)
    StartOptimization = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_StartOptimization)
    EstimateLearningRate = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_EstimateLearningRate)
    __swig_destroy__ = _itkGradientDescentOptimizerv4Python.delete_itkGradientDescentOptimizerv4TemplateD
    cast = _swig_new_static_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_cast)

    def New(*args, **kargs):
        """New() -> itkGradientDescentOptimizerv4TemplateD

        Create a new object of the class itkGradientDescentOptimizerv4TemplateD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientDescentOptimizerv4TemplateD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientDescentOptimizerv4TemplateD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientDescentOptimizerv4TemplateD.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientDescentOptimizerv4TemplateD in _itkGradientDescentOptimizerv4Python:
_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_swigregister(itkGradientDescentOptimizerv4TemplateD)
itkGradientDescentOptimizerv4TemplateD___New_orig__ = _itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD___New_orig__
itkGradientDescentOptimizerv4TemplateD_cast = _itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD_cast


def itkGradientDescentOptimizerv4TemplateF_New():
    return itkGradientDescentOptimizerv4TemplateF.New()

class itkGradientDescentOptimizerv4TemplateF(itk.itkGradientDescentOptimizerBasev4Python.itkGradientDescentOptimizerBasev4TemplateF):
    r"""Proxy of C++ itkGradientDescentOptimizerv4TemplateF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_Clone)
    SetLearningRate = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_SetLearningRate)
    GetLearningRate = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_GetLearningRate)
    SetMaximumStepSizeInPhysicalUnits = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_SetMaximumStepSizeInPhysicalUnits)
    GetMaximumStepSizeInPhysicalUnits = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_GetMaximumStepSizeInPhysicalUnits)
    SetDoEstimateLearningRateAtEachIteration = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_SetDoEstimateLearningRateAtEachIteration)
    GetDoEstimateLearningRateAtEachIteration = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_GetDoEstimateLearningRateAtEachIteration)
    DoEstimateLearningRateAtEachIterationOn = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_DoEstimateLearningRateAtEachIterationOn)
    DoEstimateLearningRateAtEachIterationOff = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_DoEstimateLearningRateAtEachIterationOff)
    SetDoEstimateLearningRateOnce = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_SetDoEstimateLearningRateOnce)
    GetDoEstimateLearningRateOnce = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_GetDoEstimateLearningRateOnce)
    DoEstimateLearningRateOnceOn = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_DoEstimateLearningRateOnceOn)
    DoEstimateLearningRateOnceOff = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_DoEstimateLearningRateOnceOff)
    SetMinimumConvergenceValue = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_SetMinimumConvergenceValue)
    SetConvergenceWindowSize = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_SetConvergenceWindowSize)
    GetConvergenceValue = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_GetConvergenceValue)
    SetReturnBestParametersAndValue = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_SetReturnBestParametersAndValue)
    GetReturnBestParametersAndValue = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_GetReturnBestParametersAndValue)
    ReturnBestParametersAndValueOn = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_ReturnBestParametersAndValueOn)
    ReturnBestParametersAndValueOff = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_ReturnBestParametersAndValueOff)
    StartOptimization = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_StartOptimization)
    EstimateLearningRate = _swig_new_instance_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_EstimateLearningRate)
    __swig_destroy__ = _itkGradientDescentOptimizerv4Python.delete_itkGradientDescentOptimizerv4TemplateF
    cast = _swig_new_static_method(_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_cast)

    def New(*args, **kargs):
        """New() -> itkGradientDescentOptimizerv4TemplateF

        Create a new object of the class itkGradientDescentOptimizerv4TemplateF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientDescentOptimizerv4TemplateF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientDescentOptimizerv4TemplateF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientDescentOptimizerv4TemplateF.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientDescentOptimizerv4TemplateF in _itkGradientDescentOptimizerv4Python:
_itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_swigregister(itkGradientDescentOptimizerv4TemplateF)
itkGradientDescentOptimizerv4TemplateF___New_orig__ = _itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF___New_orig__
itkGradientDescentOptimizerv4TemplateF_cast = _itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF_cast



