# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _ITKRegistrationMethodsv4Python



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageRegistrationMethodv4Python
else:
    import _itkImageRegistrationMethodv4Python

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkImageRegistrationMethodv4Python.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkImageRegistrationMethodv4Python.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkPointSetPython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrix_fixedPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.ITKCommonBasePython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkObjectToObjectMetricBasePython
import itk.itkArrayPython
import itk.itkSingleValuedCostFunctionv4Python
import itk.itkCostFunctionPython
import itk.itkOptimizerParametersPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVariableLengthVectorPython
import itk.itkArray2DPython
import itk.itkObjectToObjectOptimizerBasePython
import itk.itkOptimizerParameterScalesEstimatorPython
import itk.itkTransformParametersAdaptorBasePython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
class itkImageRegistrationMethodv4Enums(object):
    r"""Proxy of C++ itkImageRegistrationMethodv4Enums class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    MetricSamplingStrategy_NONE = _itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4Enums_MetricSamplingStrategy_NONE
    
    MetricSamplingStrategy_REGULAR = _itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4Enums_MetricSamplingStrategy_REGULAR
    
    MetricSamplingStrategy_RANDOM = _itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4Enums_MetricSamplingStrategy_RANDOM
    

    def __init__(self, *args):
        r"""
        __init__(self) -> itkImageRegistrationMethodv4Enums
        __init__(self, arg0) -> itkImageRegistrationMethodv4Enums

        Parameters
        ----------
        arg0: itkImageRegistrationMethodv4Enums const &

        """
        _itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4Enums_swiginit(self, _itkImageRegistrationMethodv4Python.new_itkImageRegistrationMethodv4Enums(*args))
    __swig_destroy__ = _itkImageRegistrationMethodv4Python.delete_itkImageRegistrationMethodv4Enums

# Register itkImageRegistrationMethodv4Enums in _itkImageRegistrationMethodv4Python:
_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4Enums_swigregister(itkImageRegistrationMethodv4Enums)


def itkImageRegistrationMethodv4REGv4D2D2_New():
    return itkImageRegistrationMethodv4REGv4D2D2.New()

class itkImageRegistrationMethodv4REGv4D2D2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Interface method for the current registration framework.

    This interface method class encapsulates typical registration usage by
    incorporating all the necessary elements for performing a simple image
    registration between two images. This method also allows for
    multistage registration whereby each stage is characterize by possibly
    different transforms of and different image metrics. For example, many
    users will want to perform a linear registration followed by
    deformable registration where both stages are performed in multiple
    levels. Each level can be characterized by:

    the resolution of the virtual domain image (see below)

    smoothing of the fixed and moving images

    the coarseness of the current transform via transform adaptors (see
    below)  Multiple stages are handled by linking multiple instantiations
    of this class where the output transform is added to the optional
    composite transform input.

    Transform adaptors: To accommodate new changes to the current ITK
    registration framework, we introduced the concept of transform
    adaptors. Whereas each stage is associated with a moving and,
    possibly, fixed transform, each level of each stage is defined by a
    transform adaptor which describes how to adapt the transform to the
    current level. For example, if one were to use the B-spline transform
    during a deformable registration stage, common practice is to increase
    the resolution of the B-spline mesh (or, analogously, the control
    point grid size) at each level. At each level, one would define the
    parameters of the B-spline transform adaptor at that level which
    increases the resolution from the previous level. For many transforms,
    such as affine, this concept of an adaptor may be nonsensical. For
    this reason, the base transform adaptor class does not do anything to
    the transform but merely passes it through. Each level of each stage
    must define a transform adaptor but, by default, the base adaptor
    class is assigned which, again, does not do anything to the transform.
    A special mention should be made of the transform adaptor at level 0
    of any stage. Most likely, the user will not want to do anything to
    the transform as it enters into the given stage so typical use will be
    to assign the base adaptor class to level 0 of all stages but we leave
    that open to the user.

    Output: The output is the updated transform.

    Nick Tustison

    Brian Avants 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_Clone)
    SetFixedImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetMovingImage)
    SetFixedPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetFixedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetMovingPointSet)
    SetOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetOptimizer)
    SetOptimizerWeights = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetOptimizerWeights)
    GetOptimizerWeights = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetOptimizerWeights)
    SetMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetMetric)
    SetMetricSamplingStrategy = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetMetricSamplingStrategy)
    GetMetricSamplingStrategy = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetMetricSamplingStrategy)
    MetricSamplingReinitializeSeed = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_MetricSamplingReinitializeSeed)
    SetMetricSamplingPercentage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetMetricSamplingPercentage)
    SetMetricSamplingPercentagePerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetMetricSamplingPercentagePerLevel)
    GetMetricSamplingPercentagePerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetMetricSamplingPercentagePerLevel)
    SetFixedInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetFixedInitialTransformInput)
    SetFixedInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetFixedInitialTransform)
    GetFixedInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetFixedInitialTransformInput)
    GetFixedInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetFixedInitialTransform)
    SetMovingInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetMovingInitialTransformInput)
    SetMovingInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetMovingInitialTransform)
    GetMovingInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetMovingInitialTransformInput)
    GetMovingInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetMovingInitialTransform)
    SetInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetInitialTransform)
    SetTransformParametersAdaptorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetTransformParametersAdaptorsPerLevel)
    GetTransformParametersAdaptorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetTransformParametersAdaptorsPerLevel)
    SetNumberOfLevels = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetNumberOfLevels)
    SetShrinkFactorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetShrinkFactorsPerLevel)
    GetShrinkFactorsPerDimension = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetShrinkFactorsPerDimension)
    SetShrinkFactorsPerDimension = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetShrinkFactorsPerDimension)
    SetSmoothingSigmasPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetSmoothingSigmasPerLevel)
    GetSmoothingSigmasPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetSmoothingSigmasPerLevel)
    SetSmoothingSigmasAreSpecifiedInPhysicalUnits = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetSmoothingSigmasAreSpecifiedInPhysicalUnits)
    GetSmoothingSigmasAreSpecifiedInPhysicalUnits = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetSmoothingSigmasAreSpecifiedInPhysicalUnits)
    SmoothingSigmasAreSpecifiedInPhysicalUnitsOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SmoothingSigmasAreSpecifiedInPhysicalUnitsOn)
    SmoothingSigmasAreSpecifiedInPhysicalUnitsOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SmoothingSigmasAreSpecifiedInPhysicalUnitsOff)
    GetOutput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetOutput)
    GetTransformOutput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetTransformOutput)
    GetModifiableTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetTransform)
    GetCurrentLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetCurrentLevel)
    GetCurrentIteration = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetCurrentIteration)
    GetCurrentMetricValue = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetCurrentMetricValue)
    GetCurrentConvergenceValue = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetCurrentConvergenceValue)
    GetIsConverged = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetIsConverged)
    SetInPlace = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_InPlaceOff)
    InitializeCenterOfLinearOutputTransformOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_InitializeCenterOfLinearOutputTransformOn)
    InitializeCenterOfLinearOutputTransformOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_InitializeCenterOfLinearOutputTransformOff)
    SetInitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_SetInitializeCenterOfLinearOutputTransform)
    GetInitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_GetInitializeCenterOfLinearOutputTransform)
    InitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_InitializeCenterOfLinearOutputTransform)
    __swig_destroy__ = _itkImageRegistrationMethodv4Python.delete_itkImageRegistrationMethodv4REGv4D2D2
    cast = _swig_new_static_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_cast)

    def New(*args, **kargs):
        """New() -> itkImageRegistrationMethodv4REGv4D2D2

        Create a new object of the class itkImageRegistrationMethodv4REGv4D2D2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageRegistrationMethodv4REGv4D2D2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageRegistrationMethodv4REGv4D2D2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageRegistrationMethodv4REGv4D2D2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageRegistrationMethodv4REGv4D2D2 in _itkImageRegistrationMethodv4Python:
_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_swigregister(itkImageRegistrationMethodv4REGv4D2D2)
itkImageRegistrationMethodv4REGv4D2D2___New_orig__ = _itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2___New_orig__
itkImageRegistrationMethodv4REGv4D2D2_cast = _itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D2D2_cast


def itkImageRegistrationMethodv4REGv4D3D3_New():
    return itkImageRegistrationMethodv4REGv4D3D3.New()

class itkImageRegistrationMethodv4REGv4D3D3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Interface method for the current registration framework.

    This interface method class encapsulates typical registration usage by
    incorporating all the necessary elements for performing a simple image
    registration between two images. This method also allows for
    multistage registration whereby each stage is characterize by possibly
    different transforms of and different image metrics. For example, many
    users will want to perform a linear registration followed by
    deformable registration where both stages are performed in multiple
    levels. Each level can be characterized by:

    the resolution of the virtual domain image (see below)

    smoothing of the fixed and moving images

    the coarseness of the current transform via transform adaptors (see
    below)  Multiple stages are handled by linking multiple instantiations
    of this class where the output transform is added to the optional
    composite transform input.

    Transform adaptors: To accommodate new changes to the current ITK
    registration framework, we introduced the concept of transform
    adaptors. Whereas each stage is associated with a moving and,
    possibly, fixed transform, each level of each stage is defined by a
    transform adaptor which describes how to adapt the transform to the
    current level. For example, if one were to use the B-spline transform
    during a deformable registration stage, common practice is to increase
    the resolution of the B-spline mesh (or, analogously, the control
    point grid size) at each level. At each level, one would define the
    parameters of the B-spline transform adaptor at that level which
    increases the resolution from the previous level. For many transforms,
    such as affine, this concept of an adaptor may be nonsensical. For
    this reason, the base transform adaptor class does not do anything to
    the transform but merely passes it through. Each level of each stage
    must define a transform adaptor but, by default, the base adaptor
    class is assigned which, again, does not do anything to the transform.
    A special mention should be made of the transform adaptor at level 0
    of any stage. Most likely, the user will not want to do anything to
    the transform as it enters into the given stage so typical use will be
    to assign the base adaptor class to level 0 of all stages but we leave
    that open to the user.

    Output: The output is the updated transform.

    Nick Tustison

    Brian Avants 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_Clone)
    SetFixedImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetMovingImage)
    SetFixedPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetFixedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetMovingPointSet)
    SetOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetOptimizer)
    SetOptimizerWeights = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetOptimizerWeights)
    GetOptimizerWeights = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetOptimizerWeights)
    SetMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetMetric)
    SetMetricSamplingStrategy = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetMetricSamplingStrategy)
    GetMetricSamplingStrategy = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetMetricSamplingStrategy)
    MetricSamplingReinitializeSeed = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_MetricSamplingReinitializeSeed)
    SetMetricSamplingPercentage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetMetricSamplingPercentage)
    SetMetricSamplingPercentagePerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetMetricSamplingPercentagePerLevel)
    GetMetricSamplingPercentagePerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetMetricSamplingPercentagePerLevel)
    SetFixedInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetFixedInitialTransformInput)
    SetFixedInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetFixedInitialTransform)
    GetFixedInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetFixedInitialTransformInput)
    GetFixedInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetFixedInitialTransform)
    SetMovingInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetMovingInitialTransformInput)
    SetMovingInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetMovingInitialTransform)
    GetMovingInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetMovingInitialTransformInput)
    GetMovingInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetMovingInitialTransform)
    SetInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetInitialTransform)
    SetTransformParametersAdaptorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetTransformParametersAdaptorsPerLevel)
    GetTransformParametersAdaptorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetTransformParametersAdaptorsPerLevel)
    SetNumberOfLevels = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetNumberOfLevels)
    SetShrinkFactorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetShrinkFactorsPerLevel)
    GetShrinkFactorsPerDimension = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetShrinkFactorsPerDimension)
    SetShrinkFactorsPerDimension = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetShrinkFactorsPerDimension)
    SetSmoothingSigmasPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetSmoothingSigmasPerLevel)
    GetSmoothingSigmasPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetSmoothingSigmasPerLevel)
    SetSmoothingSigmasAreSpecifiedInPhysicalUnits = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetSmoothingSigmasAreSpecifiedInPhysicalUnits)
    GetSmoothingSigmasAreSpecifiedInPhysicalUnits = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetSmoothingSigmasAreSpecifiedInPhysicalUnits)
    SmoothingSigmasAreSpecifiedInPhysicalUnitsOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SmoothingSigmasAreSpecifiedInPhysicalUnitsOn)
    SmoothingSigmasAreSpecifiedInPhysicalUnitsOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SmoothingSigmasAreSpecifiedInPhysicalUnitsOff)
    GetOutput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetOutput)
    GetTransformOutput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetTransformOutput)
    GetModifiableTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetTransform)
    GetCurrentLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetCurrentLevel)
    GetCurrentIteration = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetCurrentIteration)
    GetCurrentMetricValue = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetCurrentMetricValue)
    GetCurrentConvergenceValue = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetCurrentConvergenceValue)
    GetIsConverged = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetIsConverged)
    SetInPlace = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_InPlaceOff)
    InitializeCenterOfLinearOutputTransformOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_InitializeCenterOfLinearOutputTransformOn)
    InitializeCenterOfLinearOutputTransformOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_InitializeCenterOfLinearOutputTransformOff)
    SetInitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_SetInitializeCenterOfLinearOutputTransform)
    GetInitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_GetInitializeCenterOfLinearOutputTransform)
    InitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_InitializeCenterOfLinearOutputTransform)
    __swig_destroy__ = _itkImageRegistrationMethodv4Python.delete_itkImageRegistrationMethodv4REGv4D3D3
    cast = _swig_new_static_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_cast)

    def New(*args, **kargs):
        """New() -> itkImageRegistrationMethodv4REGv4D3D3

        Create a new object of the class itkImageRegistrationMethodv4REGv4D3D3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageRegistrationMethodv4REGv4D3D3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageRegistrationMethodv4REGv4D3D3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageRegistrationMethodv4REGv4D3D3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageRegistrationMethodv4REGv4D3D3 in _itkImageRegistrationMethodv4Python:
_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_swigregister(itkImageRegistrationMethodv4REGv4D3D3)
itkImageRegistrationMethodv4REGv4D3D3___New_orig__ = _itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3___New_orig__
itkImageRegistrationMethodv4REGv4D3D3_cast = _itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D3D3_cast


def itkImageRegistrationMethodv4REGv4D4D4_New():
    return itkImageRegistrationMethodv4REGv4D4D4.New()

class itkImageRegistrationMethodv4REGv4D4D4(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Interface method for the current registration framework.

    This interface method class encapsulates typical registration usage by
    incorporating all the necessary elements for performing a simple image
    registration between two images. This method also allows for
    multistage registration whereby each stage is characterize by possibly
    different transforms of and different image metrics. For example, many
    users will want to perform a linear registration followed by
    deformable registration where both stages are performed in multiple
    levels. Each level can be characterized by:

    the resolution of the virtual domain image (see below)

    smoothing of the fixed and moving images

    the coarseness of the current transform via transform adaptors (see
    below)  Multiple stages are handled by linking multiple instantiations
    of this class where the output transform is added to the optional
    composite transform input.

    Transform adaptors: To accommodate new changes to the current ITK
    registration framework, we introduced the concept of transform
    adaptors. Whereas each stage is associated with a moving and,
    possibly, fixed transform, each level of each stage is defined by a
    transform adaptor which describes how to adapt the transform to the
    current level. For example, if one were to use the B-spline transform
    during a deformable registration stage, common practice is to increase
    the resolution of the B-spline mesh (or, analogously, the control
    point grid size) at each level. At each level, one would define the
    parameters of the B-spline transform adaptor at that level which
    increases the resolution from the previous level. For many transforms,
    such as affine, this concept of an adaptor may be nonsensical. For
    this reason, the base transform adaptor class does not do anything to
    the transform but merely passes it through. Each level of each stage
    must define a transform adaptor but, by default, the base adaptor
    class is assigned which, again, does not do anything to the transform.
    A special mention should be made of the transform adaptor at level 0
    of any stage. Most likely, the user will not want to do anything to
    the transform as it enters into the given stage so typical use will be
    to assign the base adaptor class to level 0 of all stages but we leave
    that open to the user.

    Output: The output is the updated transform.

    Nick Tustison

    Brian Avants 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_Clone)
    SetFixedImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetMovingImage)
    SetFixedPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetFixedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetMovingPointSet)
    SetOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetOptimizer)
    SetOptimizerWeights = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetOptimizerWeights)
    GetOptimizerWeights = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetOptimizerWeights)
    SetMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetMetric)
    SetMetricSamplingStrategy = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetMetricSamplingStrategy)
    GetMetricSamplingStrategy = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetMetricSamplingStrategy)
    MetricSamplingReinitializeSeed = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_MetricSamplingReinitializeSeed)
    SetMetricSamplingPercentage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetMetricSamplingPercentage)
    SetMetricSamplingPercentagePerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetMetricSamplingPercentagePerLevel)
    GetMetricSamplingPercentagePerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetMetricSamplingPercentagePerLevel)
    SetFixedInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetFixedInitialTransformInput)
    SetFixedInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetFixedInitialTransform)
    GetFixedInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetFixedInitialTransformInput)
    GetFixedInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetFixedInitialTransform)
    SetMovingInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetMovingInitialTransformInput)
    SetMovingInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetMovingInitialTransform)
    GetMovingInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetMovingInitialTransformInput)
    GetMovingInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetMovingInitialTransform)
    SetInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetInitialTransform)
    SetTransformParametersAdaptorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetTransformParametersAdaptorsPerLevel)
    GetTransformParametersAdaptorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetTransformParametersAdaptorsPerLevel)
    SetNumberOfLevels = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetNumberOfLevels)
    SetShrinkFactorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetShrinkFactorsPerLevel)
    GetShrinkFactorsPerDimension = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetShrinkFactorsPerDimension)
    SetShrinkFactorsPerDimension = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetShrinkFactorsPerDimension)
    SetSmoothingSigmasPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetSmoothingSigmasPerLevel)
    GetSmoothingSigmasPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetSmoothingSigmasPerLevel)
    SetSmoothingSigmasAreSpecifiedInPhysicalUnits = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetSmoothingSigmasAreSpecifiedInPhysicalUnits)
    GetSmoothingSigmasAreSpecifiedInPhysicalUnits = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetSmoothingSigmasAreSpecifiedInPhysicalUnits)
    SmoothingSigmasAreSpecifiedInPhysicalUnitsOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SmoothingSigmasAreSpecifiedInPhysicalUnitsOn)
    SmoothingSigmasAreSpecifiedInPhysicalUnitsOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SmoothingSigmasAreSpecifiedInPhysicalUnitsOff)
    GetOutput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetOutput)
    GetTransformOutput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetTransformOutput)
    GetModifiableTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetTransform)
    GetCurrentLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetCurrentLevel)
    GetCurrentIteration = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetCurrentIteration)
    GetCurrentMetricValue = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetCurrentMetricValue)
    GetCurrentConvergenceValue = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetCurrentConvergenceValue)
    GetIsConverged = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetIsConverged)
    SetInPlace = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_InPlaceOff)
    InitializeCenterOfLinearOutputTransformOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_InitializeCenterOfLinearOutputTransformOn)
    InitializeCenterOfLinearOutputTransformOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_InitializeCenterOfLinearOutputTransformOff)
    SetInitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_SetInitializeCenterOfLinearOutputTransform)
    GetInitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_GetInitializeCenterOfLinearOutputTransform)
    InitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_InitializeCenterOfLinearOutputTransform)
    __swig_destroy__ = _itkImageRegistrationMethodv4Python.delete_itkImageRegistrationMethodv4REGv4D4D4
    cast = _swig_new_static_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_cast)

    def New(*args, **kargs):
        """New() -> itkImageRegistrationMethodv4REGv4D4D4

        Create a new object of the class itkImageRegistrationMethodv4REGv4D4D4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageRegistrationMethodv4REGv4D4D4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageRegistrationMethodv4REGv4D4D4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageRegistrationMethodv4REGv4D4D4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageRegistrationMethodv4REGv4D4D4 in _itkImageRegistrationMethodv4Python:
_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_swigregister(itkImageRegistrationMethodv4REGv4D4D4)
itkImageRegistrationMethodv4REGv4D4D4___New_orig__ = _itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4___New_orig__
itkImageRegistrationMethodv4REGv4D4D4_cast = _itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4D4D4_cast


def itkImageRegistrationMethodv4REGv4F2F2_New():
    return itkImageRegistrationMethodv4REGv4F2F2.New()

class itkImageRegistrationMethodv4REGv4F2F2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Interface method for the current registration framework.

    This interface method class encapsulates typical registration usage by
    incorporating all the necessary elements for performing a simple image
    registration between two images. This method also allows for
    multistage registration whereby each stage is characterize by possibly
    different transforms of and different image metrics. For example, many
    users will want to perform a linear registration followed by
    deformable registration where both stages are performed in multiple
    levels. Each level can be characterized by:

    the resolution of the virtual domain image (see below)

    smoothing of the fixed and moving images

    the coarseness of the current transform via transform adaptors (see
    below)  Multiple stages are handled by linking multiple instantiations
    of this class where the output transform is added to the optional
    composite transform input.

    Transform adaptors: To accommodate new changes to the current ITK
    registration framework, we introduced the concept of transform
    adaptors. Whereas each stage is associated with a moving and,
    possibly, fixed transform, each level of each stage is defined by a
    transform adaptor which describes how to adapt the transform to the
    current level. For example, if one were to use the B-spline transform
    during a deformable registration stage, common practice is to increase
    the resolution of the B-spline mesh (or, analogously, the control
    point grid size) at each level. At each level, one would define the
    parameters of the B-spline transform adaptor at that level which
    increases the resolution from the previous level. For many transforms,
    such as affine, this concept of an adaptor may be nonsensical. For
    this reason, the base transform adaptor class does not do anything to
    the transform but merely passes it through. Each level of each stage
    must define a transform adaptor but, by default, the base adaptor
    class is assigned which, again, does not do anything to the transform.
    A special mention should be made of the transform adaptor at level 0
    of any stage. Most likely, the user will not want to do anything to
    the transform as it enters into the given stage so typical use will be
    to assign the base adaptor class to level 0 of all stages but we leave
    that open to the user.

    Output: The output is the updated transform.

    Nick Tustison

    Brian Avants 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_Clone)
    SetFixedImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetMovingImage)
    SetFixedPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetFixedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetMovingPointSet)
    SetOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetOptimizer)
    SetOptimizerWeights = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetOptimizerWeights)
    GetOptimizerWeights = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetOptimizerWeights)
    SetMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetMetric)
    SetMetricSamplingStrategy = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetMetricSamplingStrategy)
    GetMetricSamplingStrategy = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetMetricSamplingStrategy)
    MetricSamplingReinitializeSeed = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_MetricSamplingReinitializeSeed)
    SetMetricSamplingPercentage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetMetricSamplingPercentage)
    SetMetricSamplingPercentagePerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetMetricSamplingPercentagePerLevel)
    GetMetricSamplingPercentagePerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetMetricSamplingPercentagePerLevel)
    SetFixedInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetFixedInitialTransformInput)
    SetFixedInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetFixedInitialTransform)
    GetFixedInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetFixedInitialTransformInput)
    GetFixedInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetFixedInitialTransform)
    SetMovingInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetMovingInitialTransformInput)
    SetMovingInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetMovingInitialTransform)
    GetMovingInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetMovingInitialTransformInput)
    GetMovingInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetMovingInitialTransform)
    SetInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetInitialTransform)
    SetTransformParametersAdaptorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetTransformParametersAdaptorsPerLevel)
    GetTransformParametersAdaptorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetTransformParametersAdaptorsPerLevel)
    SetNumberOfLevels = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetNumberOfLevels)
    SetShrinkFactorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetShrinkFactorsPerLevel)
    GetShrinkFactorsPerDimension = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetShrinkFactorsPerDimension)
    SetShrinkFactorsPerDimension = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetShrinkFactorsPerDimension)
    SetSmoothingSigmasPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetSmoothingSigmasPerLevel)
    GetSmoothingSigmasPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetSmoothingSigmasPerLevel)
    SetSmoothingSigmasAreSpecifiedInPhysicalUnits = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetSmoothingSigmasAreSpecifiedInPhysicalUnits)
    GetSmoothingSigmasAreSpecifiedInPhysicalUnits = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetSmoothingSigmasAreSpecifiedInPhysicalUnits)
    SmoothingSigmasAreSpecifiedInPhysicalUnitsOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SmoothingSigmasAreSpecifiedInPhysicalUnitsOn)
    SmoothingSigmasAreSpecifiedInPhysicalUnitsOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SmoothingSigmasAreSpecifiedInPhysicalUnitsOff)
    GetOutput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetOutput)
    GetTransformOutput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetTransformOutput)
    GetModifiableTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetTransform)
    GetCurrentLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetCurrentLevel)
    GetCurrentIteration = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetCurrentIteration)
    GetCurrentMetricValue = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetCurrentMetricValue)
    GetCurrentConvergenceValue = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetCurrentConvergenceValue)
    GetIsConverged = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetIsConverged)
    SetInPlace = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_InPlaceOff)
    InitializeCenterOfLinearOutputTransformOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_InitializeCenterOfLinearOutputTransformOn)
    InitializeCenterOfLinearOutputTransformOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_InitializeCenterOfLinearOutputTransformOff)
    SetInitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_SetInitializeCenterOfLinearOutputTransform)
    GetInitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_GetInitializeCenterOfLinearOutputTransform)
    InitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_InitializeCenterOfLinearOutputTransform)
    __swig_destroy__ = _itkImageRegistrationMethodv4Python.delete_itkImageRegistrationMethodv4REGv4F2F2
    cast = _swig_new_static_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_cast)

    def New(*args, **kargs):
        """New() -> itkImageRegistrationMethodv4REGv4F2F2

        Create a new object of the class itkImageRegistrationMethodv4REGv4F2F2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageRegistrationMethodv4REGv4F2F2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageRegistrationMethodv4REGv4F2F2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageRegistrationMethodv4REGv4F2F2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageRegistrationMethodv4REGv4F2F2 in _itkImageRegistrationMethodv4Python:
_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_swigregister(itkImageRegistrationMethodv4REGv4F2F2)
itkImageRegistrationMethodv4REGv4F2F2___New_orig__ = _itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2___New_orig__
itkImageRegistrationMethodv4REGv4F2F2_cast = _itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F2F2_cast


def itkImageRegistrationMethodv4REGv4F3F3_New():
    return itkImageRegistrationMethodv4REGv4F3F3.New()

class itkImageRegistrationMethodv4REGv4F3F3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Interface method for the current registration framework.

    This interface method class encapsulates typical registration usage by
    incorporating all the necessary elements for performing a simple image
    registration between two images. This method also allows for
    multistage registration whereby each stage is characterize by possibly
    different transforms of and different image metrics. For example, many
    users will want to perform a linear registration followed by
    deformable registration where both stages are performed in multiple
    levels. Each level can be characterized by:

    the resolution of the virtual domain image (see below)

    smoothing of the fixed and moving images

    the coarseness of the current transform via transform adaptors (see
    below)  Multiple stages are handled by linking multiple instantiations
    of this class where the output transform is added to the optional
    composite transform input.

    Transform adaptors: To accommodate new changes to the current ITK
    registration framework, we introduced the concept of transform
    adaptors. Whereas each stage is associated with a moving and,
    possibly, fixed transform, each level of each stage is defined by a
    transform adaptor which describes how to adapt the transform to the
    current level. For example, if one were to use the B-spline transform
    during a deformable registration stage, common practice is to increase
    the resolution of the B-spline mesh (or, analogously, the control
    point grid size) at each level. At each level, one would define the
    parameters of the B-spline transform adaptor at that level which
    increases the resolution from the previous level. For many transforms,
    such as affine, this concept of an adaptor may be nonsensical. For
    this reason, the base transform adaptor class does not do anything to
    the transform but merely passes it through. Each level of each stage
    must define a transform adaptor but, by default, the base adaptor
    class is assigned which, again, does not do anything to the transform.
    A special mention should be made of the transform adaptor at level 0
    of any stage. Most likely, the user will not want to do anything to
    the transform as it enters into the given stage so typical use will be
    to assign the base adaptor class to level 0 of all stages but we leave
    that open to the user.

    Output: The output is the updated transform.

    Nick Tustison

    Brian Avants 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_Clone)
    SetFixedImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetMovingImage)
    SetFixedPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetFixedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetMovingPointSet)
    SetOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetOptimizer)
    SetOptimizerWeights = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetOptimizerWeights)
    GetOptimizerWeights = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetOptimizerWeights)
    SetMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetMetric)
    SetMetricSamplingStrategy = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetMetricSamplingStrategy)
    GetMetricSamplingStrategy = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetMetricSamplingStrategy)
    MetricSamplingReinitializeSeed = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_MetricSamplingReinitializeSeed)
    SetMetricSamplingPercentage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetMetricSamplingPercentage)
    SetMetricSamplingPercentagePerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetMetricSamplingPercentagePerLevel)
    GetMetricSamplingPercentagePerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetMetricSamplingPercentagePerLevel)
    SetFixedInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetFixedInitialTransformInput)
    SetFixedInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetFixedInitialTransform)
    GetFixedInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetFixedInitialTransformInput)
    GetFixedInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetFixedInitialTransform)
    SetMovingInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetMovingInitialTransformInput)
    SetMovingInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetMovingInitialTransform)
    GetMovingInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetMovingInitialTransformInput)
    GetMovingInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetMovingInitialTransform)
    SetInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetInitialTransform)
    SetTransformParametersAdaptorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetTransformParametersAdaptorsPerLevel)
    GetTransformParametersAdaptorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetTransformParametersAdaptorsPerLevel)
    SetNumberOfLevels = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetNumberOfLevels)
    SetShrinkFactorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetShrinkFactorsPerLevel)
    GetShrinkFactorsPerDimension = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetShrinkFactorsPerDimension)
    SetShrinkFactorsPerDimension = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetShrinkFactorsPerDimension)
    SetSmoothingSigmasPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetSmoothingSigmasPerLevel)
    GetSmoothingSigmasPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetSmoothingSigmasPerLevel)
    SetSmoothingSigmasAreSpecifiedInPhysicalUnits = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetSmoothingSigmasAreSpecifiedInPhysicalUnits)
    GetSmoothingSigmasAreSpecifiedInPhysicalUnits = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetSmoothingSigmasAreSpecifiedInPhysicalUnits)
    SmoothingSigmasAreSpecifiedInPhysicalUnitsOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SmoothingSigmasAreSpecifiedInPhysicalUnitsOn)
    SmoothingSigmasAreSpecifiedInPhysicalUnitsOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SmoothingSigmasAreSpecifiedInPhysicalUnitsOff)
    GetOutput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetOutput)
    GetTransformOutput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetTransformOutput)
    GetModifiableTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetTransform)
    GetCurrentLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetCurrentLevel)
    GetCurrentIteration = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetCurrentIteration)
    GetCurrentMetricValue = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetCurrentMetricValue)
    GetCurrentConvergenceValue = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetCurrentConvergenceValue)
    GetIsConverged = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetIsConverged)
    SetInPlace = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_InPlaceOff)
    InitializeCenterOfLinearOutputTransformOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_InitializeCenterOfLinearOutputTransformOn)
    InitializeCenterOfLinearOutputTransformOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_InitializeCenterOfLinearOutputTransformOff)
    SetInitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_SetInitializeCenterOfLinearOutputTransform)
    GetInitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_GetInitializeCenterOfLinearOutputTransform)
    InitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_InitializeCenterOfLinearOutputTransform)
    __swig_destroy__ = _itkImageRegistrationMethodv4Python.delete_itkImageRegistrationMethodv4REGv4F3F3
    cast = _swig_new_static_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_cast)

    def New(*args, **kargs):
        """New() -> itkImageRegistrationMethodv4REGv4F3F3

        Create a new object of the class itkImageRegistrationMethodv4REGv4F3F3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageRegistrationMethodv4REGv4F3F3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageRegistrationMethodv4REGv4F3F3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageRegistrationMethodv4REGv4F3F3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageRegistrationMethodv4REGv4F3F3 in _itkImageRegistrationMethodv4Python:
_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_swigregister(itkImageRegistrationMethodv4REGv4F3F3)
itkImageRegistrationMethodv4REGv4F3F3___New_orig__ = _itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3___New_orig__
itkImageRegistrationMethodv4REGv4F3F3_cast = _itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F3F3_cast


def itkImageRegistrationMethodv4REGv4F4F4_New():
    return itkImageRegistrationMethodv4REGv4F4F4.New()

class itkImageRegistrationMethodv4REGv4F4F4(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Interface method for the current registration framework.

    This interface method class encapsulates typical registration usage by
    incorporating all the necessary elements for performing a simple image
    registration between two images. This method also allows for
    multistage registration whereby each stage is characterize by possibly
    different transforms of and different image metrics. For example, many
    users will want to perform a linear registration followed by
    deformable registration where both stages are performed in multiple
    levels. Each level can be characterized by:

    the resolution of the virtual domain image (see below)

    smoothing of the fixed and moving images

    the coarseness of the current transform via transform adaptors (see
    below)  Multiple stages are handled by linking multiple instantiations
    of this class where the output transform is added to the optional
    composite transform input.

    Transform adaptors: To accommodate new changes to the current ITK
    registration framework, we introduced the concept of transform
    adaptors. Whereas each stage is associated with a moving and,
    possibly, fixed transform, each level of each stage is defined by a
    transform adaptor which describes how to adapt the transform to the
    current level. For example, if one were to use the B-spline transform
    during a deformable registration stage, common practice is to increase
    the resolution of the B-spline mesh (or, analogously, the control
    point grid size) at each level. At each level, one would define the
    parameters of the B-spline transform adaptor at that level which
    increases the resolution from the previous level. For many transforms,
    such as affine, this concept of an adaptor may be nonsensical. For
    this reason, the base transform adaptor class does not do anything to
    the transform but merely passes it through. Each level of each stage
    must define a transform adaptor but, by default, the base adaptor
    class is assigned which, again, does not do anything to the transform.
    A special mention should be made of the transform adaptor at level 0
    of any stage. Most likely, the user will not want to do anything to
    the transform as it enters into the given stage so typical use will be
    to assign the base adaptor class to level 0 of all stages but we leave
    that open to the user.

    Output: The output is the updated transform.

    Nick Tustison

    Brian Avants 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_Clone)
    SetFixedImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetMovingImage)
    SetFixedPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetFixedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetMovingPointSet)
    SetOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetOptimizer)
    SetOptimizerWeights = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetOptimizerWeights)
    GetOptimizerWeights = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetOptimizerWeights)
    SetMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetMetric)
    SetMetricSamplingStrategy = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetMetricSamplingStrategy)
    GetMetricSamplingStrategy = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetMetricSamplingStrategy)
    MetricSamplingReinitializeSeed = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_MetricSamplingReinitializeSeed)
    SetMetricSamplingPercentage = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetMetricSamplingPercentage)
    SetMetricSamplingPercentagePerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetMetricSamplingPercentagePerLevel)
    GetMetricSamplingPercentagePerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetMetricSamplingPercentagePerLevel)
    SetFixedInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetFixedInitialTransformInput)
    SetFixedInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetFixedInitialTransform)
    GetFixedInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetFixedInitialTransformInput)
    GetFixedInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetFixedInitialTransform)
    SetMovingInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetMovingInitialTransformInput)
    SetMovingInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetMovingInitialTransform)
    GetMovingInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetMovingInitialTransformInput)
    GetMovingInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetMovingInitialTransform)
    SetInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetInitialTransform)
    SetTransformParametersAdaptorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetTransformParametersAdaptorsPerLevel)
    GetTransformParametersAdaptorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetTransformParametersAdaptorsPerLevel)
    SetNumberOfLevels = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetNumberOfLevels)
    SetShrinkFactorsPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetShrinkFactorsPerLevel)
    GetShrinkFactorsPerDimension = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetShrinkFactorsPerDimension)
    SetShrinkFactorsPerDimension = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetShrinkFactorsPerDimension)
    SetSmoothingSigmasPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetSmoothingSigmasPerLevel)
    GetSmoothingSigmasPerLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetSmoothingSigmasPerLevel)
    SetSmoothingSigmasAreSpecifiedInPhysicalUnits = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetSmoothingSigmasAreSpecifiedInPhysicalUnits)
    GetSmoothingSigmasAreSpecifiedInPhysicalUnits = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetSmoothingSigmasAreSpecifiedInPhysicalUnits)
    SmoothingSigmasAreSpecifiedInPhysicalUnitsOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SmoothingSigmasAreSpecifiedInPhysicalUnitsOn)
    SmoothingSigmasAreSpecifiedInPhysicalUnitsOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SmoothingSigmasAreSpecifiedInPhysicalUnitsOff)
    GetOutput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetOutput)
    GetTransformOutput = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetTransformOutput)
    GetModifiableTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetTransform)
    GetCurrentLevel = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetCurrentLevel)
    GetCurrentIteration = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetCurrentIteration)
    GetCurrentMetricValue = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetCurrentMetricValue)
    GetCurrentConvergenceValue = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetCurrentConvergenceValue)
    GetIsConverged = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetIsConverged)
    SetInPlace = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_InPlaceOff)
    InitializeCenterOfLinearOutputTransformOn = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_InitializeCenterOfLinearOutputTransformOn)
    InitializeCenterOfLinearOutputTransformOff = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_InitializeCenterOfLinearOutputTransformOff)
    SetInitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_SetInitializeCenterOfLinearOutputTransform)
    GetInitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_GetInitializeCenterOfLinearOutputTransform)
    InitializeCenterOfLinearOutputTransform = _swig_new_instance_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_InitializeCenterOfLinearOutputTransform)
    __swig_destroy__ = _itkImageRegistrationMethodv4Python.delete_itkImageRegistrationMethodv4REGv4F4F4
    cast = _swig_new_static_method(_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_cast)

    def New(*args, **kargs):
        """New() -> itkImageRegistrationMethodv4REGv4F4F4

        Create a new object of the class itkImageRegistrationMethodv4REGv4F4F4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageRegistrationMethodv4REGv4F4F4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageRegistrationMethodv4REGv4F4F4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageRegistrationMethodv4REGv4F4F4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageRegistrationMethodv4REGv4F4F4 in _itkImageRegistrationMethodv4Python:
_itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_swigregister(itkImageRegistrationMethodv4REGv4F4F4)
itkImageRegistrationMethodv4REGv4F4F4___New_orig__ = _itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4___New_orig__
itkImageRegistrationMethodv4REGv4F4F4_cast = _itkImageRegistrationMethodv4Python.itkImageRegistrationMethodv4REGv4F4F4_cast


from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_registration_methodv4(*args, **kwargs):
    """Procedural interface for ImageRegistrationMethodv4"""
    import itk

    instance = itk.ImageRegistrationMethodv4.New(*args, **kwargs)
    return instance.__internal_call__()


def image_registration_methodv4_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    filter_class = itk.ITKRegistrationMethodsv4.ImageRegistrationMethodv4
    is_template = isinstance(filter_class, itkTemplate.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_registration_methodv4.__doc__ = filter_object.__doc__
    image_registration_methodv4.__doc__ += "\n args are input(s) to the filter.\n\n"
    image_registration_methodv4.__doc__ += "\n Available keyword arguments:\n"
    if is_template:
        image_registration_methodv4.__doc__ += itkHelpers.filter_args(filter_object)[0]
        image_registration_methodv4.__doc__ += "\n"
        image_registration_methodv4.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        image_registration_methodv4.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )




