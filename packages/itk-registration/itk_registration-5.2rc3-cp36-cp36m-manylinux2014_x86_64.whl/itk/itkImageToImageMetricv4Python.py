# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _ITKMetricsv4Python



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageToImageMetricv4Python
else:
    import _itkImageToImageMetricv4Python

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkImageToImageMetricv4Python.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkImageToImageMetricv4Python.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkImageToImageFilterBPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.ITKCommonBasePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkInterpolateImageFunctionPython
import itk.itkContinuousIndexPython
import itk.itkImageFunctionBasePython
import itk.itkFunctionBasePython
import itk.itkArrayPython
import itk.itkSpatialObjectBasePython
import itk.itkAffineTransformPython
import itk.itkTransformBasePython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkDiffusionTensor3DPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkSpatialObjectPropertyPython
import itk.itkPointSetPython
import itk.itkDisplacementFieldTransformPython
import itk.itkObjectToObjectMetricBasePython
import itk.itkSingleValuedCostFunctionv4Python
import itk.itkCostFunctionPython
class itkImageToImageMetricv4D2D2_Superclass(itk.itkObjectToObjectMetricBasePython.itkObjectToObjectMetricBaseTemplateD):
    r"""Proxy of C++ itkImageToImageMetricv4D2D2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_SetFixedTransform)
    GetModifiableFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_GetModifiableFixedTransform)
    GetFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_GetFixedTransform)
    SetMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_SetMovingTransform)
    GetModifiableMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_GetModifiableMovingTransform)
    GetMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_GetMovingTransform)
    SetTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_SetTransform)
    GetTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_GetTransform)
    GetNumberOfValidPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_GetNumberOfValidPoints)
    SetVirtualDomain = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_SetVirtualDomain)
    SetVirtualDomainFromImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_SetVirtualDomainFromImage)
    SupportsArbitraryVirtualDomainSamples = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_SupportsArbitraryVirtualDomainSamples)
    GetVirtualDomainTimeStamp = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_GetVirtualDomainTimeStamp)
    GetVirtualSpacing = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_GetVirtualSpacing)
    GetVirtualOrigin = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_GetVirtualOrigin)
    GetVirtualDirection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_GetVirtualDirection)
    GetVirtualRegion = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_GetVirtualRegion)
    GetModifiableVirtualImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_GetModifiableVirtualImage)
    GetVirtualImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_GetVirtualImage)
    ComputeParameterOffsetFromVirtualIndex = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_ComputeParameterOffsetFromVirtualIndex)
    ComputeParameterOffsetFromVirtualPoint = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_ComputeParameterOffsetFromVirtualPoint)
    IsInsideVirtualDomain = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_IsInsideVirtualDomain)
    __swig_destroy__ = _itkImageToImageMetricv4Python.delete_itkImageToImageMetricv4D2D2_Superclass
    cast = _swig_new_static_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_cast)

# Register itkImageToImageMetricv4D2D2_Superclass in _itkImageToImageMetricv4Python:
_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_swigregister(itkImageToImageMetricv4D2D2_Superclass)
itkImageToImageMetricv4D2D2_Superclass_cast = _itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_Superclass_cast

class itkImageToImageMetricv4D3D3_Superclass(itk.itkObjectToObjectMetricBasePython.itkObjectToObjectMetricBaseTemplateD):
    r"""Proxy of C++ itkImageToImageMetricv4D3D3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_SetFixedTransform)
    GetModifiableFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_GetModifiableFixedTransform)
    GetFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_GetFixedTransform)
    SetMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_SetMovingTransform)
    GetModifiableMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_GetModifiableMovingTransform)
    GetMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_GetMovingTransform)
    SetTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_SetTransform)
    GetTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_GetTransform)
    GetNumberOfValidPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_GetNumberOfValidPoints)
    SetVirtualDomain = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_SetVirtualDomain)
    SetVirtualDomainFromImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_SetVirtualDomainFromImage)
    SupportsArbitraryVirtualDomainSamples = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_SupportsArbitraryVirtualDomainSamples)
    GetVirtualDomainTimeStamp = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_GetVirtualDomainTimeStamp)
    GetVirtualSpacing = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_GetVirtualSpacing)
    GetVirtualOrigin = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_GetVirtualOrigin)
    GetVirtualDirection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_GetVirtualDirection)
    GetVirtualRegion = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_GetVirtualRegion)
    GetModifiableVirtualImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_GetModifiableVirtualImage)
    GetVirtualImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_GetVirtualImage)
    ComputeParameterOffsetFromVirtualIndex = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_ComputeParameterOffsetFromVirtualIndex)
    ComputeParameterOffsetFromVirtualPoint = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_ComputeParameterOffsetFromVirtualPoint)
    IsInsideVirtualDomain = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_IsInsideVirtualDomain)
    __swig_destroy__ = _itkImageToImageMetricv4Python.delete_itkImageToImageMetricv4D3D3_Superclass
    cast = _swig_new_static_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_cast)

# Register itkImageToImageMetricv4D3D3_Superclass in _itkImageToImageMetricv4Python:
_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_swigregister(itkImageToImageMetricv4D3D3_Superclass)
itkImageToImageMetricv4D3D3_Superclass_cast = _itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_Superclass_cast

class itkImageToImageMetricv4D4D4_Superclass(itk.itkObjectToObjectMetricBasePython.itkObjectToObjectMetricBaseTemplateD):
    r"""Proxy of C++ itkImageToImageMetricv4D4D4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_SetFixedTransform)
    GetModifiableFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_GetModifiableFixedTransform)
    GetFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_GetFixedTransform)
    SetMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_SetMovingTransform)
    GetModifiableMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_GetModifiableMovingTransform)
    GetMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_GetMovingTransform)
    SetTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_SetTransform)
    GetTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_GetTransform)
    GetNumberOfValidPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_GetNumberOfValidPoints)
    SetVirtualDomain = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_SetVirtualDomain)
    SetVirtualDomainFromImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_SetVirtualDomainFromImage)
    SupportsArbitraryVirtualDomainSamples = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_SupportsArbitraryVirtualDomainSamples)
    GetVirtualDomainTimeStamp = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_GetVirtualDomainTimeStamp)
    GetVirtualSpacing = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_GetVirtualSpacing)
    GetVirtualOrigin = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_GetVirtualOrigin)
    GetVirtualDirection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_GetVirtualDirection)
    GetVirtualRegion = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_GetVirtualRegion)
    GetModifiableVirtualImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_GetModifiableVirtualImage)
    GetVirtualImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_GetVirtualImage)
    ComputeParameterOffsetFromVirtualIndex = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_ComputeParameterOffsetFromVirtualIndex)
    ComputeParameterOffsetFromVirtualPoint = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_ComputeParameterOffsetFromVirtualPoint)
    IsInsideVirtualDomain = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_IsInsideVirtualDomain)
    __swig_destroy__ = _itkImageToImageMetricv4Python.delete_itkImageToImageMetricv4D4D4_Superclass
    cast = _swig_new_static_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_cast)

# Register itkImageToImageMetricv4D4D4_Superclass in _itkImageToImageMetricv4Python:
_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_swigregister(itkImageToImageMetricv4D4D4_Superclass)
itkImageToImageMetricv4D4D4_Superclass_cast = _itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_Superclass_cast

class itkImageToImageMetricv4F2F2_Superclass(itk.itkObjectToObjectMetricBasePython.itkObjectToObjectMetricBaseTemplateD):
    r"""Proxy of C++ itkImageToImageMetricv4F2F2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SetFixedTransform)
    GetModifiableFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetModifiableFixedTransform)
    GetFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetFixedTransform)
    SetMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SetMovingTransform)
    GetModifiableMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetModifiableMovingTransform)
    GetMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetMovingTransform)
    SetTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SetTransform)
    GetTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetTransform)
    GetNumberOfValidPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetNumberOfValidPoints)
    SetVirtualDomain = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SetVirtualDomain)
    SetVirtualDomainFromImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SetVirtualDomainFromImage)
    SupportsArbitraryVirtualDomainSamples = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_SupportsArbitraryVirtualDomainSamples)
    GetVirtualDomainTimeStamp = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualDomainTimeStamp)
    GetVirtualSpacing = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualSpacing)
    GetVirtualOrigin = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualOrigin)
    GetVirtualDirection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualDirection)
    GetVirtualRegion = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualRegion)
    GetModifiableVirtualImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetModifiableVirtualImage)
    GetVirtualImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_GetVirtualImage)
    ComputeParameterOffsetFromVirtualIndex = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_ComputeParameterOffsetFromVirtualIndex)
    ComputeParameterOffsetFromVirtualPoint = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_ComputeParameterOffsetFromVirtualPoint)
    IsInsideVirtualDomain = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_IsInsideVirtualDomain)
    __swig_destroy__ = _itkImageToImageMetricv4Python.delete_itkImageToImageMetricv4F2F2_Superclass
    cast = _swig_new_static_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_cast)

# Register itkImageToImageMetricv4F2F2_Superclass in _itkImageToImageMetricv4Python:
_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_swigregister(itkImageToImageMetricv4F2F2_Superclass)
itkImageToImageMetricv4F2F2_Superclass_cast = _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_Superclass_cast

class itkImageToImageMetricv4F3F3_Superclass(itk.itkObjectToObjectMetricBasePython.itkObjectToObjectMetricBaseTemplateD):
    r"""Proxy of C++ itkImageToImageMetricv4F3F3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SetFixedTransform)
    GetModifiableFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetModifiableFixedTransform)
    GetFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetFixedTransform)
    SetMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SetMovingTransform)
    GetModifiableMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetModifiableMovingTransform)
    GetMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetMovingTransform)
    SetTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SetTransform)
    GetTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetTransform)
    GetNumberOfValidPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetNumberOfValidPoints)
    SetVirtualDomain = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SetVirtualDomain)
    SetVirtualDomainFromImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SetVirtualDomainFromImage)
    SupportsArbitraryVirtualDomainSamples = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_SupportsArbitraryVirtualDomainSamples)
    GetVirtualDomainTimeStamp = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualDomainTimeStamp)
    GetVirtualSpacing = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualSpacing)
    GetVirtualOrigin = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualOrigin)
    GetVirtualDirection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualDirection)
    GetVirtualRegion = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualRegion)
    GetModifiableVirtualImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetModifiableVirtualImage)
    GetVirtualImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_GetVirtualImage)
    ComputeParameterOffsetFromVirtualIndex = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_ComputeParameterOffsetFromVirtualIndex)
    ComputeParameterOffsetFromVirtualPoint = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_ComputeParameterOffsetFromVirtualPoint)
    IsInsideVirtualDomain = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_IsInsideVirtualDomain)
    __swig_destroy__ = _itkImageToImageMetricv4Python.delete_itkImageToImageMetricv4F3F3_Superclass
    cast = _swig_new_static_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_cast)

# Register itkImageToImageMetricv4F3F3_Superclass in _itkImageToImageMetricv4Python:
_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_swigregister(itkImageToImageMetricv4F3F3_Superclass)
itkImageToImageMetricv4F3F3_Superclass_cast = _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_Superclass_cast

class itkImageToImageMetricv4F4F4_Superclass(itk.itkObjectToObjectMetricBasePython.itkObjectToObjectMetricBaseTemplateD):
    r"""Proxy of C++ itkImageToImageMetricv4F4F4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_SetFixedTransform)
    GetModifiableFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_GetModifiableFixedTransform)
    GetFixedTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_GetFixedTransform)
    SetMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_SetMovingTransform)
    GetModifiableMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_GetModifiableMovingTransform)
    GetMovingTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_GetMovingTransform)
    SetTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_SetTransform)
    GetTransform = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_GetTransform)
    GetNumberOfValidPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_GetNumberOfValidPoints)
    SetVirtualDomain = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_SetVirtualDomain)
    SetVirtualDomainFromImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_SetVirtualDomainFromImage)
    SupportsArbitraryVirtualDomainSamples = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_SupportsArbitraryVirtualDomainSamples)
    GetVirtualDomainTimeStamp = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_GetVirtualDomainTimeStamp)
    GetVirtualSpacing = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_GetVirtualSpacing)
    GetVirtualOrigin = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_GetVirtualOrigin)
    GetVirtualDirection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_GetVirtualDirection)
    GetVirtualRegion = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_GetVirtualRegion)
    GetModifiableVirtualImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_GetModifiableVirtualImage)
    GetVirtualImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_GetVirtualImage)
    ComputeParameterOffsetFromVirtualIndex = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_ComputeParameterOffsetFromVirtualIndex)
    ComputeParameterOffsetFromVirtualPoint = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_ComputeParameterOffsetFromVirtualPoint)
    IsInsideVirtualDomain = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_IsInsideVirtualDomain)
    __swig_destroy__ = _itkImageToImageMetricv4Python.delete_itkImageToImageMetricv4F4F4_Superclass
    cast = _swig_new_static_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_cast)

# Register itkImageToImageMetricv4F4F4_Superclass in _itkImageToImageMetricv4Python:
_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_swigregister(itkImageToImageMetricv4F4F4_Superclass)
itkImageToImageMetricv4F4F4_Superclass_cast = _itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_Superclass_cast

class itkImageToImageMetricv4D2D2(itkImageToImageMetricv4D2D2_Superclass):
    r"""


    Computes similarity between regions of two images, using two user-
    supplied transforms, a 'fixed' transform and a 'moving' transform.

    WARNING:  Integer-type images are not yet supported. See concept-
    checking in DefaultImageToImageMetricTraitsv4.  Templated over the
    fixed and moving image types, as well as an optional VirtualImage type
    to define the virtual domain. The VirtualImage type defaults to
    TFixedImage. If TFixedImage is type VectorImage, then TVirtualImage
    must be set separately to a non-VectorImage type, e.g. Image<unsigned
    char, dimension>.  If the user does not set the virtual domain
    explicitly, then it is created during the call to Initialize from the
    fixed image by copying its information. See ObjectToObjectMetric for
    more discussion on the virtual domain.

    At a minimum, the user must: 1) Set images using SetFixedImage and
    SetMovingImage. 2) Call Initialize.

    Image gradient calculations

    Image gradients can be calculated in one of two ways: 1) Using a
    gradient image filter, by setting Use[Fixed|Moving]ImageGradientFilter
    to true. By default this is set as an
    itkGradientRecursiveGaussianImageFilter, a smoothed gradient filter. A
    filter uses more memory, because it calculates all gradients at once
    and stores them in an image. The advantage of pre-calculation is for
    the fixed image gradients, since they only need be calculated once,
    and for metrics that need to access image gradients more than once for
    a particular point. The fixed image gradients are only calculated once
    when this option is set, during Initialize. 2) Otherwise, an image
    gradient calculator based on ImageFunction is used. By default the
    CentralDifferenceImageFunction is used. This calculation is not
    smoothed and gives different results than
    GradientRecursiveGaussianImageFilter. The advantage is that less
    memory is used. However for the fixed image, it means needlessly
    computing the image gradients at each iteration of a registration
    instead of just computing once at the beginning. The user can supply a
    different function by calling SetFixedImageGradientCalculator and/or
    SetMovingImageGradientCalculator.

    Both image gradient calculation methods are threaded. Generally it is
    not recommended to use different image gradient methods for the fixed
    and moving images because the methods return different results.

    Image Masks

    Image masks are supported using SetMovingImageMask or
    SetFixedImageMask. If the image mask is sparse, see the comments for
    use of sparse point sets.

    Sparse Sampling

    Sparse sampling is performed by supplying an arbitrary point list over
    which to evaluate the metric. It's presumed that the user will be
    working in terms of the fixed image domain, and thus the point list is
    expected to be in the fixed domain. Internally, the points are
    transformed into the virtual domain as needed. The attributes/data of
    each point in the set are not used, but rather the point's geometric
    coordinates. Point sets are enabled by calling UseSampledPointSet,
    then the SetFixedSampledPointSet is called or
    SetVirtualSampledPointSet along with SetUseVirtualSampledPointSet.

    If the point set is sparse, the option
    SetUse[Fixed|Moving]ImageGradientFilter typically should be disabled
    to avoid excessive computation. However, the gradient values of the
    fixed image are not cached when using a point set (there are plans for
    this in the future), so depending on the number of iterations (when
    used during optimization) and the level of sparsity, it may be more
    efficient to use a gradient image filter for it because it will only
    be calculated once.  Vector Images

    To support vector images, the class must be declared using the
    VectorImageToImageMetricTraitsv4 class in the template declaration, as
    described above. Derived classes must provide special handling for
    vector pixel

    Threading

    This class is threaded. Threading is handled by friend classes
    ImageToImageMetricv4GetValueAndDerivativeThreaderBase and
    ImageToImageMetricv4GetValueAndDerivativeThreader. Dense and sparse
    evaluation are handled by template specialization of the
    ImageToImageMetricv4GetValueAndDerivativeThreader::ThreadedExecution
    method, in order to iterate over either all points in the virtual
    space in the case of dense evaluation, or a list of points in the
    sparse case.

    Methods and members of ImageToImageMetricv4 are accessed by the
    threading class using its m_Associate member, which points to the
    containing instance of ImageToImageMetricv4.

    Pre- and post-processing for threaded operation is handled in ImageToI
    mageMetricv4GetValueAndDerivativeThreaderBase::BeforeThreadedExecution
    , and ImageToImageMetricv4GetValueAndDerivativeThreaderBase::AfterThre
    adedExecution, respectively.

    Derived classes:

    The GetValue method may be overridden to provide better-optimized or
    otherwise different behavior as needed. Otherwise, the
    m_ComputeDerivative member should be checked to avoid computing
    derivatives when the caller has called GetValue(). See
    GetComputeDerivative() in this class and in this metric's threader
    class.

    Derived classes must derive a threader class from
    ImageToImageMetricv4GetValueAndDerivativeThreader, from which a
    DenseGetValueAndDerivativeThreader and
    SparseGetValueAndDerivativeThreader must be defined. Then, must be
    called in the constructor.

    The ProcessPoint method of the derived threader must be overriden to
    provide the metric-specific evaluation.

    To access methods and members within the derived metric class from the
    derived threader class, the user must cast m_Associate to the type of
    the derived metric class.

    derived class must implement and do. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetMovingImage)
    SetFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetFixedInterpolator)
    GetModifiableFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetModifiableFixedInterpolator)
    GetFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetFixedInterpolator)
    SetMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetMovingInterpolator)
    GetModifiableMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetModifiableMovingInterpolator)
    GetMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetMovingInterpolator)
    SetMovingImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetMovingImageMask)
    GetMovingImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetMovingImageMask)
    SetFixedImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetFixedImageMask)
    GetFixedImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetFixedImageMask)
    SetFixedSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetFixedSampledPointSet)
    GetFixedSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetFixedSampledPointSet)
    SetVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetVirtualSampledPointSet)
    GetVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetVirtualSampledPointSet)
    SetUseSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetUseSampledPointSet)
    GetUseSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetUseSampledPointSet)
    UseSampledPointSetOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_UseSampledPointSetOn)
    UseSampledPointSetOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_UseSampledPointSetOff)
    SetUseVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetUseVirtualSampledPointSet)
    GetUseVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetUseVirtualSampledPointSet)
    UseVirtualSampledPointSetOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_UseVirtualSampledPointSetOn)
    UseVirtualSampledPointSetOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_UseVirtualSampledPointSetOff)
    SetFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetFixedImageGradientFilter)
    GetModifiableFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetModifiableFixedImageGradientFilter)
    GetFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetFixedImageGradientFilter)
    SetMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetMovingImageGradientFilter)
    GetModifiableMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetModifiableMovingImageGradientFilter)
    GetMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetMovingImageGradientFilter)
    SetFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetFixedImageGradientCalculator)
    GetModifiableFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetModifiableFixedImageGradientCalculator)
    GetFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetFixedImageGradientCalculator)
    SetMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetMovingImageGradientCalculator)
    GetModifiableMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetModifiableMovingImageGradientCalculator)
    GetMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetMovingImageGradientCalculator)
    SetUseFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetUseFixedImageGradientFilter)
    GetUseFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetUseFixedImageGradientFilter)
    UseFixedImageGradientFilterOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_UseFixedImageGradientFilterOn)
    UseFixedImageGradientFilterOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_UseFixedImageGradientFilterOff)
    SetUseMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetUseMovingImageGradientFilter)
    GetUseMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetUseMovingImageGradientFilter)
    UseMovingImageGradientFilterOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_UseMovingImageGradientFilterOn)
    UseMovingImageGradientFilterOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_UseMovingImageGradientFilterOff)
    GetNumberOfWorkUnitsUsed = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetNumberOfWorkUnitsUsed)
    SetMaximumNumberOfWorkUnits = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetMaximumNumberOfWorkUnits)
    GetMaximumNumberOfWorkUnits = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetMaximumNumberOfWorkUnits)
    FinalizeThread = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_FinalizeThread)
    GetModifiableFixedImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetModifiableFixedImageGradientImage)
    GetFixedImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetFixedImageGradientImage)
    GetModifiableMovingImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetModifiableMovingImageGradientImage)
    GetMovingImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetMovingImageGradientImage)
    GetNumberOfDomainPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetNumberOfDomainPoints)
    SetUseFloatingPointCorrection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetUseFloatingPointCorrection)
    GetUseFloatingPointCorrection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetUseFloatingPointCorrection)
    UseFloatingPointCorrectionOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_UseFloatingPointCorrectionOn)
    UseFloatingPointCorrectionOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_UseFloatingPointCorrectionOff)
    SetFloatingPointCorrectionResolution = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_SetFloatingPointCorrectionResolution)
    GetFloatingPointCorrectionResolution = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetFloatingPointCorrectionResolution)
    GetNumberOfSkippedFixedSampledPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_GetNumberOfSkippedFixedSampledPoints)
    __swig_destroy__ = _itkImageToImageMetricv4Python.delete_itkImageToImageMetricv4D2D2
    cast = _swig_new_static_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_cast)

# Register itkImageToImageMetricv4D2D2 in _itkImageToImageMetricv4Python:
_itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_swigregister(itkImageToImageMetricv4D2D2)
itkImageToImageMetricv4D2D2_cast = _itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2_cast

class itkImageToImageMetricv4D3D3(itkImageToImageMetricv4D3D3_Superclass):
    r"""


    Computes similarity between regions of two images, using two user-
    supplied transforms, a 'fixed' transform and a 'moving' transform.

    WARNING:  Integer-type images are not yet supported. See concept-
    checking in DefaultImageToImageMetricTraitsv4.  Templated over the
    fixed and moving image types, as well as an optional VirtualImage type
    to define the virtual domain. The VirtualImage type defaults to
    TFixedImage. If TFixedImage is type VectorImage, then TVirtualImage
    must be set separately to a non-VectorImage type, e.g. Image<unsigned
    char, dimension>.  If the user does not set the virtual domain
    explicitly, then it is created during the call to Initialize from the
    fixed image by copying its information. See ObjectToObjectMetric for
    more discussion on the virtual domain.

    At a minimum, the user must: 1) Set images using SetFixedImage and
    SetMovingImage. 2) Call Initialize.

    Image gradient calculations

    Image gradients can be calculated in one of two ways: 1) Using a
    gradient image filter, by setting Use[Fixed|Moving]ImageGradientFilter
    to true. By default this is set as an
    itkGradientRecursiveGaussianImageFilter, a smoothed gradient filter. A
    filter uses more memory, because it calculates all gradients at once
    and stores them in an image. The advantage of pre-calculation is for
    the fixed image gradients, since they only need be calculated once,
    and for metrics that need to access image gradients more than once for
    a particular point. The fixed image gradients are only calculated once
    when this option is set, during Initialize. 2) Otherwise, an image
    gradient calculator based on ImageFunction is used. By default the
    CentralDifferenceImageFunction is used. This calculation is not
    smoothed and gives different results than
    GradientRecursiveGaussianImageFilter. The advantage is that less
    memory is used. However for the fixed image, it means needlessly
    computing the image gradients at each iteration of a registration
    instead of just computing once at the beginning. The user can supply a
    different function by calling SetFixedImageGradientCalculator and/or
    SetMovingImageGradientCalculator.

    Both image gradient calculation methods are threaded. Generally it is
    not recommended to use different image gradient methods for the fixed
    and moving images because the methods return different results.

    Image Masks

    Image masks are supported using SetMovingImageMask or
    SetFixedImageMask. If the image mask is sparse, see the comments for
    use of sparse point sets.

    Sparse Sampling

    Sparse sampling is performed by supplying an arbitrary point list over
    which to evaluate the metric. It's presumed that the user will be
    working in terms of the fixed image domain, and thus the point list is
    expected to be in the fixed domain. Internally, the points are
    transformed into the virtual domain as needed. The attributes/data of
    each point in the set are not used, but rather the point's geometric
    coordinates. Point sets are enabled by calling UseSampledPointSet,
    then the SetFixedSampledPointSet is called or
    SetVirtualSampledPointSet along with SetUseVirtualSampledPointSet.

    If the point set is sparse, the option
    SetUse[Fixed|Moving]ImageGradientFilter typically should be disabled
    to avoid excessive computation. However, the gradient values of the
    fixed image are not cached when using a point set (there are plans for
    this in the future), so depending on the number of iterations (when
    used during optimization) and the level of sparsity, it may be more
    efficient to use a gradient image filter for it because it will only
    be calculated once.  Vector Images

    To support vector images, the class must be declared using the
    VectorImageToImageMetricTraitsv4 class in the template declaration, as
    described above. Derived classes must provide special handling for
    vector pixel

    Threading

    This class is threaded. Threading is handled by friend classes
    ImageToImageMetricv4GetValueAndDerivativeThreaderBase and
    ImageToImageMetricv4GetValueAndDerivativeThreader. Dense and sparse
    evaluation are handled by template specialization of the
    ImageToImageMetricv4GetValueAndDerivativeThreader::ThreadedExecution
    method, in order to iterate over either all points in the virtual
    space in the case of dense evaluation, or a list of points in the
    sparse case.

    Methods and members of ImageToImageMetricv4 are accessed by the
    threading class using its m_Associate member, which points to the
    containing instance of ImageToImageMetricv4.

    Pre- and post-processing for threaded operation is handled in ImageToI
    mageMetricv4GetValueAndDerivativeThreaderBase::BeforeThreadedExecution
    , and ImageToImageMetricv4GetValueAndDerivativeThreaderBase::AfterThre
    adedExecution, respectively.

    Derived classes:

    The GetValue method may be overridden to provide better-optimized or
    otherwise different behavior as needed. Otherwise, the
    m_ComputeDerivative member should be checked to avoid computing
    derivatives when the caller has called GetValue(). See
    GetComputeDerivative() in this class and in this metric's threader
    class.

    Derived classes must derive a threader class from
    ImageToImageMetricv4GetValueAndDerivativeThreader, from which a
    DenseGetValueAndDerivativeThreader and
    SparseGetValueAndDerivativeThreader must be defined. Then, must be
    called in the constructor.

    The ProcessPoint method of the derived threader must be overriden to
    provide the metric-specific evaluation.

    To access methods and members within the derived metric class from the
    derived threader class, the user must cast m_Associate to the type of
    the derived metric class.

    derived class must implement and do. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetMovingImage)
    SetFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetFixedInterpolator)
    GetModifiableFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetModifiableFixedInterpolator)
    GetFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetFixedInterpolator)
    SetMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetMovingInterpolator)
    GetModifiableMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetModifiableMovingInterpolator)
    GetMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetMovingInterpolator)
    SetMovingImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetMovingImageMask)
    GetMovingImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetMovingImageMask)
    SetFixedImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetFixedImageMask)
    GetFixedImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetFixedImageMask)
    SetFixedSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetFixedSampledPointSet)
    GetFixedSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetFixedSampledPointSet)
    SetVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetVirtualSampledPointSet)
    GetVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetVirtualSampledPointSet)
    SetUseSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetUseSampledPointSet)
    GetUseSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetUseSampledPointSet)
    UseSampledPointSetOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_UseSampledPointSetOn)
    UseSampledPointSetOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_UseSampledPointSetOff)
    SetUseVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetUseVirtualSampledPointSet)
    GetUseVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetUseVirtualSampledPointSet)
    UseVirtualSampledPointSetOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_UseVirtualSampledPointSetOn)
    UseVirtualSampledPointSetOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_UseVirtualSampledPointSetOff)
    SetFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetFixedImageGradientFilter)
    GetModifiableFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetModifiableFixedImageGradientFilter)
    GetFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetFixedImageGradientFilter)
    SetMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetMovingImageGradientFilter)
    GetModifiableMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetModifiableMovingImageGradientFilter)
    GetMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetMovingImageGradientFilter)
    SetFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetFixedImageGradientCalculator)
    GetModifiableFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetModifiableFixedImageGradientCalculator)
    GetFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetFixedImageGradientCalculator)
    SetMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetMovingImageGradientCalculator)
    GetModifiableMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetModifiableMovingImageGradientCalculator)
    GetMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetMovingImageGradientCalculator)
    SetUseFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetUseFixedImageGradientFilter)
    GetUseFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetUseFixedImageGradientFilter)
    UseFixedImageGradientFilterOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_UseFixedImageGradientFilterOn)
    UseFixedImageGradientFilterOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_UseFixedImageGradientFilterOff)
    SetUseMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetUseMovingImageGradientFilter)
    GetUseMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetUseMovingImageGradientFilter)
    UseMovingImageGradientFilterOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_UseMovingImageGradientFilterOn)
    UseMovingImageGradientFilterOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_UseMovingImageGradientFilterOff)
    GetNumberOfWorkUnitsUsed = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetNumberOfWorkUnitsUsed)
    SetMaximumNumberOfWorkUnits = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetMaximumNumberOfWorkUnits)
    GetMaximumNumberOfWorkUnits = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetMaximumNumberOfWorkUnits)
    FinalizeThread = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_FinalizeThread)
    GetModifiableFixedImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetModifiableFixedImageGradientImage)
    GetFixedImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetFixedImageGradientImage)
    GetModifiableMovingImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetModifiableMovingImageGradientImage)
    GetMovingImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetMovingImageGradientImage)
    GetNumberOfDomainPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetNumberOfDomainPoints)
    SetUseFloatingPointCorrection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetUseFloatingPointCorrection)
    GetUseFloatingPointCorrection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetUseFloatingPointCorrection)
    UseFloatingPointCorrectionOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_UseFloatingPointCorrectionOn)
    UseFloatingPointCorrectionOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_UseFloatingPointCorrectionOff)
    SetFloatingPointCorrectionResolution = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_SetFloatingPointCorrectionResolution)
    GetFloatingPointCorrectionResolution = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetFloatingPointCorrectionResolution)
    GetNumberOfSkippedFixedSampledPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_GetNumberOfSkippedFixedSampledPoints)
    __swig_destroy__ = _itkImageToImageMetricv4Python.delete_itkImageToImageMetricv4D3D3
    cast = _swig_new_static_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_cast)

# Register itkImageToImageMetricv4D3D3 in _itkImageToImageMetricv4Python:
_itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_swigregister(itkImageToImageMetricv4D3D3)
itkImageToImageMetricv4D3D3_cast = _itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3_cast

class itkImageToImageMetricv4D4D4(itkImageToImageMetricv4D4D4_Superclass):
    r"""


    Computes similarity between regions of two images, using two user-
    supplied transforms, a 'fixed' transform and a 'moving' transform.

    WARNING:  Integer-type images are not yet supported. See concept-
    checking in DefaultImageToImageMetricTraitsv4.  Templated over the
    fixed and moving image types, as well as an optional VirtualImage type
    to define the virtual domain. The VirtualImage type defaults to
    TFixedImage. If TFixedImage is type VectorImage, then TVirtualImage
    must be set separately to a non-VectorImage type, e.g. Image<unsigned
    char, dimension>.  If the user does not set the virtual domain
    explicitly, then it is created during the call to Initialize from the
    fixed image by copying its information. See ObjectToObjectMetric for
    more discussion on the virtual domain.

    At a minimum, the user must: 1) Set images using SetFixedImage and
    SetMovingImage. 2) Call Initialize.

    Image gradient calculations

    Image gradients can be calculated in one of two ways: 1) Using a
    gradient image filter, by setting Use[Fixed|Moving]ImageGradientFilter
    to true. By default this is set as an
    itkGradientRecursiveGaussianImageFilter, a smoothed gradient filter. A
    filter uses more memory, because it calculates all gradients at once
    and stores them in an image. The advantage of pre-calculation is for
    the fixed image gradients, since they only need be calculated once,
    and for metrics that need to access image gradients more than once for
    a particular point. The fixed image gradients are only calculated once
    when this option is set, during Initialize. 2) Otherwise, an image
    gradient calculator based on ImageFunction is used. By default the
    CentralDifferenceImageFunction is used. This calculation is not
    smoothed and gives different results than
    GradientRecursiveGaussianImageFilter. The advantage is that less
    memory is used. However for the fixed image, it means needlessly
    computing the image gradients at each iteration of a registration
    instead of just computing once at the beginning. The user can supply a
    different function by calling SetFixedImageGradientCalculator and/or
    SetMovingImageGradientCalculator.

    Both image gradient calculation methods are threaded. Generally it is
    not recommended to use different image gradient methods for the fixed
    and moving images because the methods return different results.

    Image Masks

    Image masks are supported using SetMovingImageMask or
    SetFixedImageMask. If the image mask is sparse, see the comments for
    use of sparse point sets.

    Sparse Sampling

    Sparse sampling is performed by supplying an arbitrary point list over
    which to evaluate the metric. It's presumed that the user will be
    working in terms of the fixed image domain, and thus the point list is
    expected to be in the fixed domain. Internally, the points are
    transformed into the virtual domain as needed. The attributes/data of
    each point in the set are not used, but rather the point's geometric
    coordinates. Point sets are enabled by calling UseSampledPointSet,
    then the SetFixedSampledPointSet is called or
    SetVirtualSampledPointSet along with SetUseVirtualSampledPointSet.

    If the point set is sparse, the option
    SetUse[Fixed|Moving]ImageGradientFilter typically should be disabled
    to avoid excessive computation. However, the gradient values of the
    fixed image are not cached when using a point set (there are plans for
    this in the future), so depending on the number of iterations (when
    used during optimization) and the level of sparsity, it may be more
    efficient to use a gradient image filter for it because it will only
    be calculated once.  Vector Images

    To support vector images, the class must be declared using the
    VectorImageToImageMetricTraitsv4 class in the template declaration, as
    described above. Derived classes must provide special handling for
    vector pixel

    Threading

    This class is threaded. Threading is handled by friend classes
    ImageToImageMetricv4GetValueAndDerivativeThreaderBase and
    ImageToImageMetricv4GetValueAndDerivativeThreader. Dense and sparse
    evaluation are handled by template specialization of the
    ImageToImageMetricv4GetValueAndDerivativeThreader::ThreadedExecution
    method, in order to iterate over either all points in the virtual
    space in the case of dense evaluation, or a list of points in the
    sparse case.

    Methods and members of ImageToImageMetricv4 are accessed by the
    threading class using its m_Associate member, which points to the
    containing instance of ImageToImageMetricv4.

    Pre- and post-processing for threaded operation is handled in ImageToI
    mageMetricv4GetValueAndDerivativeThreaderBase::BeforeThreadedExecution
    , and ImageToImageMetricv4GetValueAndDerivativeThreaderBase::AfterThre
    adedExecution, respectively.

    Derived classes:

    The GetValue method may be overridden to provide better-optimized or
    otherwise different behavior as needed. Otherwise, the
    m_ComputeDerivative member should be checked to avoid computing
    derivatives when the caller has called GetValue(). See
    GetComputeDerivative() in this class and in this metric's threader
    class.

    Derived classes must derive a threader class from
    ImageToImageMetricv4GetValueAndDerivativeThreader, from which a
    DenseGetValueAndDerivativeThreader and
    SparseGetValueAndDerivativeThreader must be defined. Then, must be
    called in the constructor.

    The ProcessPoint method of the derived threader must be overriden to
    provide the metric-specific evaluation.

    To access methods and members within the derived metric class from the
    derived threader class, the user must cast m_Associate to the type of
    the derived metric class.

    derived class must implement and do. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetMovingImage)
    SetFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetFixedInterpolator)
    GetModifiableFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetModifiableFixedInterpolator)
    GetFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetFixedInterpolator)
    SetMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetMovingInterpolator)
    GetModifiableMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetModifiableMovingInterpolator)
    GetMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetMovingInterpolator)
    SetMovingImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetMovingImageMask)
    GetMovingImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetMovingImageMask)
    SetFixedImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetFixedImageMask)
    GetFixedImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetFixedImageMask)
    SetFixedSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetFixedSampledPointSet)
    GetFixedSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetFixedSampledPointSet)
    SetVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetVirtualSampledPointSet)
    GetVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetVirtualSampledPointSet)
    SetUseSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetUseSampledPointSet)
    GetUseSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetUseSampledPointSet)
    UseSampledPointSetOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_UseSampledPointSetOn)
    UseSampledPointSetOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_UseSampledPointSetOff)
    SetUseVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetUseVirtualSampledPointSet)
    GetUseVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetUseVirtualSampledPointSet)
    UseVirtualSampledPointSetOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_UseVirtualSampledPointSetOn)
    UseVirtualSampledPointSetOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_UseVirtualSampledPointSetOff)
    SetFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetFixedImageGradientFilter)
    GetModifiableFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetModifiableFixedImageGradientFilter)
    GetFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetFixedImageGradientFilter)
    SetMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetMovingImageGradientFilter)
    GetModifiableMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetModifiableMovingImageGradientFilter)
    GetMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetMovingImageGradientFilter)
    SetFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetFixedImageGradientCalculator)
    GetModifiableFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetModifiableFixedImageGradientCalculator)
    GetFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetFixedImageGradientCalculator)
    SetMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetMovingImageGradientCalculator)
    GetModifiableMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetModifiableMovingImageGradientCalculator)
    GetMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetMovingImageGradientCalculator)
    SetUseFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetUseFixedImageGradientFilter)
    GetUseFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetUseFixedImageGradientFilter)
    UseFixedImageGradientFilterOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_UseFixedImageGradientFilterOn)
    UseFixedImageGradientFilterOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_UseFixedImageGradientFilterOff)
    SetUseMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetUseMovingImageGradientFilter)
    GetUseMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetUseMovingImageGradientFilter)
    UseMovingImageGradientFilterOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_UseMovingImageGradientFilterOn)
    UseMovingImageGradientFilterOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_UseMovingImageGradientFilterOff)
    GetNumberOfWorkUnitsUsed = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetNumberOfWorkUnitsUsed)
    SetMaximumNumberOfWorkUnits = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetMaximumNumberOfWorkUnits)
    GetMaximumNumberOfWorkUnits = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetMaximumNumberOfWorkUnits)
    FinalizeThread = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_FinalizeThread)
    GetModifiableFixedImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetModifiableFixedImageGradientImage)
    GetFixedImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetFixedImageGradientImage)
    GetModifiableMovingImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetModifiableMovingImageGradientImage)
    GetMovingImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetMovingImageGradientImage)
    GetNumberOfDomainPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetNumberOfDomainPoints)
    SetUseFloatingPointCorrection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetUseFloatingPointCorrection)
    GetUseFloatingPointCorrection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetUseFloatingPointCorrection)
    UseFloatingPointCorrectionOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_UseFloatingPointCorrectionOn)
    UseFloatingPointCorrectionOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_UseFloatingPointCorrectionOff)
    SetFloatingPointCorrectionResolution = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_SetFloatingPointCorrectionResolution)
    GetFloatingPointCorrectionResolution = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetFloatingPointCorrectionResolution)
    GetNumberOfSkippedFixedSampledPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_GetNumberOfSkippedFixedSampledPoints)
    __swig_destroy__ = _itkImageToImageMetricv4Python.delete_itkImageToImageMetricv4D4D4
    cast = _swig_new_static_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_cast)

# Register itkImageToImageMetricv4D4D4 in _itkImageToImageMetricv4Python:
_itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_swigregister(itkImageToImageMetricv4D4D4)
itkImageToImageMetricv4D4D4_cast = _itkImageToImageMetricv4Python.itkImageToImageMetricv4D4D4_cast

class itkImageToImageMetricv4F2F2(itkImageToImageMetricv4F2F2_Superclass):
    r"""


    Computes similarity between regions of two images, using two user-
    supplied transforms, a 'fixed' transform and a 'moving' transform.

    WARNING:  Integer-type images are not yet supported. See concept-
    checking in DefaultImageToImageMetricTraitsv4.  Templated over the
    fixed and moving image types, as well as an optional VirtualImage type
    to define the virtual domain. The VirtualImage type defaults to
    TFixedImage. If TFixedImage is type VectorImage, then TVirtualImage
    must be set separately to a non-VectorImage type, e.g. Image<unsigned
    char, dimension>.  If the user does not set the virtual domain
    explicitly, then it is created during the call to Initialize from the
    fixed image by copying its information. See ObjectToObjectMetric for
    more discussion on the virtual domain.

    At a minimum, the user must: 1) Set images using SetFixedImage and
    SetMovingImage. 2) Call Initialize.

    Image gradient calculations

    Image gradients can be calculated in one of two ways: 1) Using a
    gradient image filter, by setting Use[Fixed|Moving]ImageGradientFilter
    to true. By default this is set as an
    itkGradientRecursiveGaussianImageFilter, a smoothed gradient filter. A
    filter uses more memory, because it calculates all gradients at once
    and stores them in an image. The advantage of pre-calculation is for
    the fixed image gradients, since they only need be calculated once,
    and for metrics that need to access image gradients more than once for
    a particular point. The fixed image gradients are only calculated once
    when this option is set, during Initialize. 2) Otherwise, an image
    gradient calculator based on ImageFunction is used. By default the
    CentralDifferenceImageFunction is used. This calculation is not
    smoothed and gives different results than
    GradientRecursiveGaussianImageFilter. The advantage is that less
    memory is used. However for the fixed image, it means needlessly
    computing the image gradients at each iteration of a registration
    instead of just computing once at the beginning. The user can supply a
    different function by calling SetFixedImageGradientCalculator and/or
    SetMovingImageGradientCalculator.

    Both image gradient calculation methods are threaded. Generally it is
    not recommended to use different image gradient methods for the fixed
    and moving images because the methods return different results.

    Image Masks

    Image masks are supported using SetMovingImageMask or
    SetFixedImageMask. If the image mask is sparse, see the comments for
    use of sparse point sets.

    Sparse Sampling

    Sparse sampling is performed by supplying an arbitrary point list over
    which to evaluate the metric. It's presumed that the user will be
    working in terms of the fixed image domain, and thus the point list is
    expected to be in the fixed domain. Internally, the points are
    transformed into the virtual domain as needed. The attributes/data of
    each point in the set are not used, but rather the point's geometric
    coordinates. Point sets are enabled by calling UseSampledPointSet,
    then the SetFixedSampledPointSet is called or
    SetVirtualSampledPointSet along with SetUseVirtualSampledPointSet.

    If the point set is sparse, the option
    SetUse[Fixed|Moving]ImageGradientFilter typically should be disabled
    to avoid excessive computation. However, the gradient values of the
    fixed image are not cached when using a point set (there are plans for
    this in the future), so depending on the number of iterations (when
    used during optimization) and the level of sparsity, it may be more
    efficient to use a gradient image filter for it because it will only
    be calculated once.  Vector Images

    To support vector images, the class must be declared using the
    VectorImageToImageMetricTraitsv4 class in the template declaration, as
    described above. Derived classes must provide special handling for
    vector pixel

    Threading

    This class is threaded. Threading is handled by friend classes
    ImageToImageMetricv4GetValueAndDerivativeThreaderBase and
    ImageToImageMetricv4GetValueAndDerivativeThreader. Dense and sparse
    evaluation are handled by template specialization of the
    ImageToImageMetricv4GetValueAndDerivativeThreader::ThreadedExecution
    method, in order to iterate over either all points in the virtual
    space in the case of dense evaluation, or a list of points in the
    sparse case.

    Methods and members of ImageToImageMetricv4 are accessed by the
    threading class using its m_Associate member, which points to the
    containing instance of ImageToImageMetricv4.

    Pre- and post-processing for threaded operation is handled in ImageToI
    mageMetricv4GetValueAndDerivativeThreaderBase::BeforeThreadedExecution
    , and ImageToImageMetricv4GetValueAndDerivativeThreaderBase::AfterThre
    adedExecution, respectively.

    Derived classes:

    The GetValue method may be overridden to provide better-optimized or
    otherwise different behavior as needed. Otherwise, the
    m_ComputeDerivative member should be checked to avoid computing
    derivatives when the caller has called GetValue(). See
    GetComputeDerivative() in this class and in this metric's threader
    class.

    Derived classes must derive a threader class from
    ImageToImageMetricv4GetValueAndDerivativeThreader, from which a
    DenseGetValueAndDerivativeThreader and
    SparseGetValueAndDerivativeThreader must be defined. Then, must be
    called in the constructor.

    The ProcessPoint method of the derived threader must be overriden to
    provide the metric-specific evaluation.

    To access methods and members within the derived metric class from the
    derived threader class, the user must cast m_Associate to the type of
    the derived metric class.

    derived class must implement and do. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingImage)
    SetFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedInterpolator)
    GetModifiableFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableFixedInterpolator)
    GetFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedInterpolator)
    SetMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMovingInterpolator)
    GetModifiableMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableMovingInterpolator)
    GetMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingInterpolator)
    SetMovingImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMovingImageMask)
    GetMovingImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingImageMask)
    SetFixedImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedImageMask)
    GetFixedImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedImageMask)
    SetFixedSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedSampledPointSet)
    GetFixedSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedSampledPointSet)
    SetVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetVirtualSampledPointSet)
    GetVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetVirtualSampledPointSet)
    SetUseSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetUseSampledPointSet)
    GetUseSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetUseSampledPointSet)
    UseSampledPointSetOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseSampledPointSetOn)
    UseSampledPointSetOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseSampledPointSetOff)
    SetUseVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetUseVirtualSampledPointSet)
    GetUseVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetUseVirtualSampledPointSet)
    UseVirtualSampledPointSetOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseVirtualSampledPointSetOn)
    UseVirtualSampledPointSetOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseVirtualSampledPointSetOff)
    SetFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedImageGradientFilter)
    GetModifiableFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableFixedImageGradientFilter)
    GetFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedImageGradientFilter)
    SetMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMovingImageGradientFilter)
    GetModifiableMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableMovingImageGradientFilter)
    GetMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingImageGradientFilter)
    SetFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFixedImageGradientCalculator)
    GetModifiableFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableFixedImageGradientCalculator)
    GetFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedImageGradientCalculator)
    SetMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMovingImageGradientCalculator)
    GetModifiableMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableMovingImageGradientCalculator)
    GetMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingImageGradientCalculator)
    SetUseFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetUseFixedImageGradientFilter)
    GetUseFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetUseFixedImageGradientFilter)
    UseFixedImageGradientFilterOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseFixedImageGradientFilterOn)
    UseFixedImageGradientFilterOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseFixedImageGradientFilterOff)
    SetUseMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetUseMovingImageGradientFilter)
    GetUseMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetUseMovingImageGradientFilter)
    UseMovingImageGradientFilterOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseMovingImageGradientFilterOn)
    UseMovingImageGradientFilterOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseMovingImageGradientFilterOff)
    GetNumberOfWorkUnitsUsed = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetNumberOfWorkUnitsUsed)
    SetMaximumNumberOfWorkUnits = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetMaximumNumberOfWorkUnits)
    GetMaximumNumberOfWorkUnits = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMaximumNumberOfWorkUnits)
    FinalizeThread = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_FinalizeThread)
    GetModifiableFixedImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableFixedImageGradientImage)
    GetFixedImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFixedImageGradientImage)
    GetModifiableMovingImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetModifiableMovingImageGradientImage)
    GetMovingImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetMovingImageGradientImage)
    GetNumberOfDomainPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetNumberOfDomainPoints)
    SetUseFloatingPointCorrection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetUseFloatingPointCorrection)
    GetUseFloatingPointCorrection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetUseFloatingPointCorrection)
    UseFloatingPointCorrectionOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseFloatingPointCorrectionOn)
    UseFloatingPointCorrectionOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_UseFloatingPointCorrectionOff)
    SetFloatingPointCorrectionResolution = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_SetFloatingPointCorrectionResolution)
    GetFloatingPointCorrectionResolution = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetFloatingPointCorrectionResolution)
    GetNumberOfSkippedFixedSampledPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_GetNumberOfSkippedFixedSampledPoints)
    __swig_destroy__ = _itkImageToImageMetricv4Python.delete_itkImageToImageMetricv4F2F2
    cast = _swig_new_static_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_cast)

# Register itkImageToImageMetricv4F2F2 in _itkImageToImageMetricv4Python:
_itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_swigregister(itkImageToImageMetricv4F2F2)
itkImageToImageMetricv4F2F2_cast = _itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2_cast

class itkImageToImageMetricv4F3F3(itkImageToImageMetricv4F3F3_Superclass):
    r"""


    Computes similarity between regions of two images, using two user-
    supplied transforms, a 'fixed' transform and a 'moving' transform.

    WARNING:  Integer-type images are not yet supported. See concept-
    checking in DefaultImageToImageMetricTraitsv4.  Templated over the
    fixed and moving image types, as well as an optional VirtualImage type
    to define the virtual domain. The VirtualImage type defaults to
    TFixedImage. If TFixedImage is type VectorImage, then TVirtualImage
    must be set separately to a non-VectorImage type, e.g. Image<unsigned
    char, dimension>.  If the user does not set the virtual domain
    explicitly, then it is created during the call to Initialize from the
    fixed image by copying its information. See ObjectToObjectMetric for
    more discussion on the virtual domain.

    At a minimum, the user must: 1) Set images using SetFixedImage and
    SetMovingImage. 2) Call Initialize.

    Image gradient calculations

    Image gradients can be calculated in one of two ways: 1) Using a
    gradient image filter, by setting Use[Fixed|Moving]ImageGradientFilter
    to true. By default this is set as an
    itkGradientRecursiveGaussianImageFilter, a smoothed gradient filter. A
    filter uses more memory, because it calculates all gradients at once
    and stores them in an image. The advantage of pre-calculation is for
    the fixed image gradients, since they only need be calculated once,
    and for metrics that need to access image gradients more than once for
    a particular point. The fixed image gradients are only calculated once
    when this option is set, during Initialize. 2) Otherwise, an image
    gradient calculator based on ImageFunction is used. By default the
    CentralDifferenceImageFunction is used. This calculation is not
    smoothed and gives different results than
    GradientRecursiveGaussianImageFilter. The advantage is that less
    memory is used. However for the fixed image, it means needlessly
    computing the image gradients at each iteration of a registration
    instead of just computing once at the beginning. The user can supply a
    different function by calling SetFixedImageGradientCalculator and/or
    SetMovingImageGradientCalculator.

    Both image gradient calculation methods are threaded. Generally it is
    not recommended to use different image gradient methods for the fixed
    and moving images because the methods return different results.

    Image Masks

    Image masks are supported using SetMovingImageMask or
    SetFixedImageMask. If the image mask is sparse, see the comments for
    use of sparse point sets.

    Sparse Sampling

    Sparse sampling is performed by supplying an arbitrary point list over
    which to evaluate the metric. It's presumed that the user will be
    working in terms of the fixed image domain, and thus the point list is
    expected to be in the fixed domain. Internally, the points are
    transformed into the virtual domain as needed. The attributes/data of
    each point in the set are not used, but rather the point's geometric
    coordinates. Point sets are enabled by calling UseSampledPointSet,
    then the SetFixedSampledPointSet is called or
    SetVirtualSampledPointSet along with SetUseVirtualSampledPointSet.

    If the point set is sparse, the option
    SetUse[Fixed|Moving]ImageGradientFilter typically should be disabled
    to avoid excessive computation. However, the gradient values of the
    fixed image are not cached when using a point set (there are plans for
    this in the future), so depending on the number of iterations (when
    used during optimization) and the level of sparsity, it may be more
    efficient to use a gradient image filter for it because it will only
    be calculated once.  Vector Images

    To support vector images, the class must be declared using the
    VectorImageToImageMetricTraitsv4 class in the template declaration, as
    described above. Derived classes must provide special handling for
    vector pixel

    Threading

    This class is threaded. Threading is handled by friend classes
    ImageToImageMetricv4GetValueAndDerivativeThreaderBase and
    ImageToImageMetricv4GetValueAndDerivativeThreader. Dense and sparse
    evaluation are handled by template specialization of the
    ImageToImageMetricv4GetValueAndDerivativeThreader::ThreadedExecution
    method, in order to iterate over either all points in the virtual
    space in the case of dense evaluation, or a list of points in the
    sparse case.

    Methods and members of ImageToImageMetricv4 are accessed by the
    threading class using its m_Associate member, which points to the
    containing instance of ImageToImageMetricv4.

    Pre- and post-processing for threaded operation is handled in ImageToI
    mageMetricv4GetValueAndDerivativeThreaderBase::BeforeThreadedExecution
    , and ImageToImageMetricv4GetValueAndDerivativeThreaderBase::AfterThre
    adedExecution, respectively.

    Derived classes:

    The GetValue method may be overridden to provide better-optimized or
    otherwise different behavior as needed. Otherwise, the
    m_ComputeDerivative member should be checked to avoid computing
    derivatives when the caller has called GetValue(). See
    GetComputeDerivative() in this class and in this metric's threader
    class.

    Derived classes must derive a threader class from
    ImageToImageMetricv4GetValueAndDerivativeThreader, from which a
    DenseGetValueAndDerivativeThreader and
    SparseGetValueAndDerivativeThreader must be defined. Then, must be
    called in the constructor.

    The ProcessPoint method of the derived threader must be overriden to
    provide the metric-specific evaluation.

    To access methods and members within the derived metric class from the
    derived threader class, the user must cast m_Associate to the type of
    the derived metric class.

    derived class must implement and do. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingImage)
    SetFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedInterpolator)
    GetModifiableFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableFixedInterpolator)
    GetFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedInterpolator)
    SetMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMovingInterpolator)
    GetModifiableMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableMovingInterpolator)
    GetMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingInterpolator)
    SetMovingImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMovingImageMask)
    GetMovingImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingImageMask)
    SetFixedImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedImageMask)
    GetFixedImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedImageMask)
    SetFixedSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedSampledPointSet)
    GetFixedSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedSampledPointSet)
    SetVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetVirtualSampledPointSet)
    GetVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetVirtualSampledPointSet)
    SetUseSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetUseSampledPointSet)
    GetUseSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetUseSampledPointSet)
    UseSampledPointSetOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseSampledPointSetOn)
    UseSampledPointSetOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseSampledPointSetOff)
    SetUseVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetUseVirtualSampledPointSet)
    GetUseVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetUseVirtualSampledPointSet)
    UseVirtualSampledPointSetOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseVirtualSampledPointSetOn)
    UseVirtualSampledPointSetOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseVirtualSampledPointSetOff)
    SetFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedImageGradientFilter)
    GetModifiableFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableFixedImageGradientFilter)
    GetFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedImageGradientFilter)
    SetMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMovingImageGradientFilter)
    GetModifiableMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableMovingImageGradientFilter)
    GetMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingImageGradientFilter)
    SetFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFixedImageGradientCalculator)
    GetModifiableFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableFixedImageGradientCalculator)
    GetFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedImageGradientCalculator)
    SetMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMovingImageGradientCalculator)
    GetModifiableMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableMovingImageGradientCalculator)
    GetMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingImageGradientCalculator)
    SetUseFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetUseFixedImageGradientFilter)
    GetUseFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetUseFixedImageGradientFilter)
    UseFixedImageGradientFilterOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseFixedImageGradientFilterOn)
    UseFixedImageGradientFilterOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseFixedImageGradientFilterOff)
    SetUseMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetUseMovingImageGradientFilter)
    GetUseMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetUseMovingImageGradientFilter)
    UseMovingImageGradientFilterOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseMovingImageGradientFilterOn)
    UseMovingImageGradientFilterOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseMovingImageGradientFilterOff)
    GetNumberOfWorkUnitsUsed = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetNumberOfWorkUnitsUsed)
    SetMaximumNumberOfWorkUnits = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetMaximumNumberOfWorkUnits)
    GetMaximumNumberOfWorkUnits = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMaximumNumberOfWorkUnits)
    FinalizeThread = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_FinalizeThread)
    GetModifiableFixedImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableFixedImageGradientImage)
    GetFixedImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFixedImageGradientImage)
    GetModifiableMovingImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetModifiableMovingImageGradientImage)
    GetMovingImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetMovingImageGradientImage)
    GetNumberOfDomainPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetNumberOfDomainPoints)
    SetUseFloatingPointCorrection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetUseFloatingPointCorrection)
    GetUseFloatingPointCorrection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetUseFloatingPointCorrection)
    UseFloatingPointCorrectionOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseFloatingPointCorrectionOn)
    UseFloatingPointCorrectionOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_UseFloatingPointCorrectionOff)
    SetFloatingPointCorrectionResolution = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_SetFloatingPointCorrectionResolution)
    GetFloatingPointCorrectionResolution = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetFloatingPointCorrectionResolution)
    GetNumberOfSkippedFixedSampledPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_GetNumberOfSkippedFixedSampledPoints)
    __swig_destroy__ = _itkImageToImageMetricv4Python.delete_itkImageToImageMetricv4F3F3
    cast = _swig_new_static_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_cast)

# Register itkImageToImageMetricv4F3F3 in _itkImageToImageMetricv4Python:
_itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_swigregister(itkImageToImageMetricv4F3F3)
itkImageToImageMetricv4F3F3_cast = _itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3_cast

class itkImageToImageMetricv4F4F4(itkImageToImageMetricv4F4F4_Superclass):
    r"""


    Computes similarity between regions of two images, using two user-
    supplied transforms, a 'fixed' transform and a 'moving' transform.

    WARNING:  Integer-type images are not yet supported. See concept-
    checking in DefaultImageToImageMetricTraitsv4.  Templated over the
    fixed and moving image types, as well as an optional VirtualImage type
    to define the virtual domain. The VirtualImage type defaults to
    TFixedImage. If TFixedImage is type VectorImage, then TVirtualImage
    must be set separately to a non-VectorImage type, e.g. Image<unsigned
    char, dimension>.  If the user does not set the virtual domain
    explicitly, then it is created during the call to Initialize from the
    fixed image by copying its information. See ObjectToObjectMetric for
    more discussion on the virtual domain.

    At a minimum, the user must: 1) Set images using SetFixedImage and
    SetMovingImage. 2) Call Initialize.

    Image gradient calculations

    Image gradients can be calculated in one of two ways: 1) Using a
    gradient image filter, by setting Use[Fixed|Moving]ImageGradientFilter
    to true. By default this is set as an
    itkGradientRecursiveGaussianImageFilter, a smoothed gradient filter. A
    filter uses more memory, because it calculates all gradients at once
    and stores them in an image. The advantage of pre-calculation is for
    the fixed image gradients, since they only need be calculated once,
    and for metrics that need to access image gradients more than once for
    a particular point. The fixed image gradients are only calculated once
    when this option is set, during Initialize. 2) Otherwise, an image
    gradient calculator based on ImageFunction is used. By default the
    CentralDifferenceImageFunction is used. This calculation is not
    smoothed and gives different results than
    GradientRecursiveGaussianImageFilter. The advantage is that less
    memory is used. However for the fixed image, it means needlessly
    computing the image gradients at each iteration of a registration
    instead of just computing once at the beginning. The user can supply a
    different function by calling SetFixedImageGradientCalculator and/or
    SetMovingImageGradientCalculator.

    Both image gradient calculation methods are threaded. Generally it is
    not recommended to use different image gradient methods for the fixed
    and moving images because the methods return different results.

    Image Masks

    Image masks are supported using SetMovingImageMask or
    SetFixedImageMask. If the image mask is sparse, see the comments for
    use of sparse point sets.

    Sparse Sampling

    Sparse sampling is performed by supplying an arbitrary point list over
    which to evaluate the metric. It's presumed that the user will be
    working in terms of the fixed image domain, and thus the point list is
    expected to be in the fixed domain. Internally, the points are
    transformed into the virtual domain as needed. The attributes/data of
    each point in the set are not used, but rather the point's geometric
    coordinates. Point sets are enabled by calling UseSampledPointSet,
    then the SetFixedSampledPointSet is called or
    SetVirtualSampledPointSet along with SetUseVirtualSampledPointSet.

    If the point set is sparse, the option
    SetUse[Fixed|Moving]ImageGradientFilter typically should be disabled
    to avoid excessive computation. However, the gradient values of the
    fixed image are not cached when using a point set (there are plans for
    this in the future), so depending on the number of iterations (when
    used during optimization) and the level of sparsity, it may be more
    efficient to use a gradient image filter for it because it will only
    be calculated once.  Vector Images

    To support vector images, the class must be declared using the
    VectorImageToImageMetricTraitsv4 class in the template declaration, as
    described above. Derived classes must provide special handling for
    vector pixel

    Threading

    This class is threaded. Threading is handled by friend classes
    ImageToImageMetricv4GetValueAndDerivativeThreaderBase and
    ImageToImageMetricv4GetValueAndDerivativeThreader. Dense and sparse
    evaluation are handled by template specialization of the
    ImageToImageMetricv4GetValueAndDerivativeThreader::ThreadedExecution
    method, in order to iterate over either all points in the virtual
    space in the case of dense evaluation, or a list of points in the
    sparse case.

    Methods and members of ImageToImageMetricv4 are accessed by the
    threading class using its m_Associate member, which points to the
    containing instance of ImageToImageMetricv4.

    Pre- and post-processing for threaded operation is handled in ImageToI
    mageMetricv4GetValueAndDerivativeThreaderBase::BeforeThreadedExecution
    , and ImageToImageMetricv4GetValueAndDerivativeThreaderBase::AfterThre
    adedExecution, respectively.

    Derived classes:

    The GetValue method may be overridden to provide better-optimized or
    otherwise different behavior as needed. Otherwise, the
    m_ComputeDerivative member should be checked to avoid computing
    derivatives when the caller has called GetValue(). See
    GetComputeDerivative() in this class and in this metric's threader
    class.

    Derived classes must derive a threader class from
    ImageToImageMetricv4GetValueAndDerivativeThreader, from which a
    DenseGetValueAndDerivativeThreader and
    SparseGetValueAndDerivativeThreader must be defined. Then, must be
    called in the constructor.

    The ProcessPoint method of the derived threader must be overriden to
    provide the metric-specific evaluation.

    To access methods and members within the derived metric class from the
    derived threader class, the user must cast m_Associate to the type of
    the derived metric class.

    derived class must implement and do. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetMovingImage)
    SetFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetFixedInterpolator)
    GetModifiableFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetModifiableFixedInterpolator)
    GetFixedInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetFixedInterpolator)
    SetMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetMovingInterpolator)
    GetModifiableMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetModifiableMovingInterpolator)
    GetMovingInterpolator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetMovingInterpolator)
    SetMovingImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetMovingImageMask)
    GetMovingImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetMovingImageMask)
    SetFixedImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetFixedImageMask)
    GetFixedImageMask = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetFixedImageMask)
    SetFixedSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetFixedSampledPointSet)
    GetFixedSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetFixedSampledPointSet)
    SetVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetVirtualSampledPointSet)
    GetVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetVirtualSampledPointSet)
    SetUseSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetUseSampledPointSet)
    GetUseSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetUseSampledPointSet)
    UseSampledPointSetOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_UseSampledPointSetOn)
    UseSampledPointSetOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_UseSampledPointSetOff)
    SetUseVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetUseVirtualSampledPointSet)
    GetUseVirtualSampledPointSet = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetUseVirtualSampledPointSet)
    UseVirtualSampledPointSetOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_UseVirtualSampledPointSetOn)
    UseVirtualSampledPointSetOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_UseVirtualSampledPointSetOff)
    SetFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetFixedImageGradientFilter)
    GetModifiableFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetModifiableFixedImageGradientFilter)
    GetFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetFixedImageGradientFilter)
    SetMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetMovingImageGradientFilter)
    GetModifiableMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetModifiableMovingImageGradientFilter)
    GetMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetMovingImageGradientFilter)
    SetFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetFixedImageGradientCalculator)
    GetModifiableFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetModifiableFixedImageGradientCalculator)
    GetFixedImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetFixedImageGradientCalculator)
    SetMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetMovingImageGradientCalculator)
    GetModifiableMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetModifiableMovingImageGradientCalculator)
    GetMovingImageGradientCalculator = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetMovingImageGradientCalculator)
    SetUseFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetUseFixedImageGradientFilter)
    GetUseFixedImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetUseFixedImageGradientFilter)
    UseFixedImageGradientFilterOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_UseFixedImageGradientFilterOn)
    UseFixedImageGradientFilterOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_UseFixedImageGradientFilterOff)
    SetUseMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetUseMovingImageGradientFilter)
    GetUseMovingImageGradientFilter = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetUseMovingImageGradientFilter)
    UseMovingImageGradientFilterOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_UseMovingImageGradientFilterOn)
    UseMovingImageGradientFilterOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_UseMovingImageGradientFilterOff)
    GetNumberOfWorkUnitsUsed = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetNumberOfWorkUnitsUsed)
    SetMaximumNumberOfWorkUnits = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetMaximumNumberOfWorkUnits)
    GetMaximumNumberOfWorkUnits = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetMaximumNumberOfWorkUnits)
    FinalizeThread = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_FinalizeThread)
    GetModifiableFixedImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetModifiableFixedImageGradientImage)
    GetFixedImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetFixedImageGradientImage)
    GetModifiableMovingImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetModifiableMovingImageGradientImage)
    GetMovingImageGradientImage = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetMovingImageGradientImage)
    GetNumberOfDomainPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetNumberOfDomainPoints)
    SetUseFloatingPointCorrection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetUseFloatingPointCorrection)
    GetUseFloatingPointCorrection = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetUseFloatingPointCorrection)
    UseFloatingPointCorrectionOn = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_UseFloatingPointCorrectionOn)
    UseFloatingPointCorrectionOff = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_UseFloatingPointCorrectionOff)
    SetFloatingPointCorrectionResolution = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_SetFloatingPointCorrectionResolution)
    GetFloatingPointCorrectionResolution = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetFloatingPointCorrectionResolution)
    GetNumberOfSkippedFixedSampledPoints = _swig_new_instance_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_GetNumberOfSkippedFixedSampledPoints)
    __swig_destroy__ = _itkImageToImageMetricv4Python.delete_itkImageToImageMetricv4F4F4
    cast = _swig_new_static_method(_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_cast)

# Register itkImageToImageMetricv4F4F4 in _itkImageToImageMetricv4Python:
_itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_swigregister(itkImageToImageMetricv4F4F4)
itkImageToImageMetricv4F4F4_cast = _itkImageToImageMetricv4Python.itkImageToImageMetricv4F4F4_cast



