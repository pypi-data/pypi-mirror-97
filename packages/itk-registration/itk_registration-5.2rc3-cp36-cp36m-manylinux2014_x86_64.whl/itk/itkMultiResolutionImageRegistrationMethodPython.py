# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _ITKRegistrationCommonPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMultiResolutionImageRegistrationMethodPython
else:
    import _itkMultiResolutionImageRegistrationMethodPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMultiResolutionImageRegistrationMethodPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMultiResolutionImageRegistrationMethodPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkTransformBasePython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkVariableLengthVectorPython
import itk.itkArrayPython
import itk.ITKCommonBasePython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkDiffusionTensor3DPython
import itk.itkImageToImageMetricPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkInterpolateImageFunctionPython
import itk.itkContinuousIndexPython
import itk.itkImageFunctionBasePython
import itk.itkFunctionBasePython
import itk.ITKCostFunctionsPython
import itk.vnl_least_squares_functionPython
import itk.itkCostFunctionPython
import itk.vnl_cost_functionPython
import itk.vnl_unary_functionPython
import itk.itkSpatialObjectBasePython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkSpatialObjectPropertyPython
import itk.itkMultiResolutionPyramidImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkImageToImageFilterCommonPython
import itk.ITKOptimizersBasePython

def itkMultiResolutionImageRegistrationMethodID2ID2_New():
    return itkMultiResolutionImageRegistrationMethodID2ID2.New()

class itkMultiResolutionImageRegistrationMethodID2ID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for multi-resolution image registration methods.

    This class provides a generic interface for multi-resolution
    registration using components of the registration framework. See
    documentation for ImageRegistrationMethod for a description of the
    registration framework components.

    The registration process is initiated by method Update(). The user
    must set the parameters of each component before calling this method.

    The number of resolution level to process can be set via
    SetNumberOfLevels(). At each resolution level, the user specified
    registration components are used to register downsampled version of
    the images by computing the transform parameters that will map one
    image onto the other image.

    A user can specify schedules for the fixed and moving image using
    SetSchedules() method. However, SetNumberOfLevels() and SetSchedules()
    should not be used together. An exception will be thrown if that
    happens.

    The downsampled images are provided by user specified
    MultiResolutionPyramidImageFilters. User must specify the schedule for
    each pyramid externally prior to calling Update().

    WARNING:  If there is discrepancy between the number of level
    requested and a pyramid schedule. The pyramid schedule will be
    overriden with a default one.  Before each resolution level an
    IterationEvent is invoked providing an opportunity for a user
    interface to change any of the components, change component
    parameters, or stop the registration.

    This class is templated over the fixed image type and the moving image
    type.

    See:   ImageRegistrationMethod 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_Clone)
    StopRegistration = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_StopRegistration)
    SetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetMovingImage)
    SetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetOptimizer)
    SetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetMetric)
    SetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetFixedImageRegion)
    GetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetFixedImageRegion)
    SetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetTransform)
    GetModifiableTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetInterpolator)
    SetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetFixedImagePyramid)
    GetModifiableFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetModifiableFixedImagePyramid)
    GetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetFixedImagePyramid)
    SetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetMovingImagePyramid)
    GetModifiableMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetModifiableMovingImagePyramid)
    GetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetMovingImagePyramid)
    SetSchedules = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetSchedules)
    GetFixedImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetFixedImagePyramidSchedule)
    GetMovingImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetMovingImagePyramidSchedule)
    SetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetNumberOfLevels)
    GetCurrentLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetCurrentLevel)
    SetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetInitialTransformParameters)
    GetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetInitialTransformParameters)
    SetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetInitialTransformParametersOfNextLevel)
    GetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetInitialTransformParametersOfNextLevel)
    GetLastTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetLastTransformParameters)
    GetOutput = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetOutput)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodID2ID2
    cast = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodID2ID2

        Create a new object of the class itkMultiResolutionImageRegistrationMethodID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodID2ID2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodID2ID2 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_swigregister(itkMultiResolutionImageRegistrationMethodID2ID2)
itkMultiResolutionImageRegistrationMethodID2ID2___New_orig__ = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2___New_orig__
itkMultiResolutionImageRegistrationMethodID2ID2_cast = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_cast


def itkMultiResolutionImageRegistrationMethodID3ID3_New():
    return itkMultiResolutionImageRegistrationMethodID3ID3.New()

class itkMultiResolutionImageRegistrationMethodID3ID3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for multi-resolution image registration methods.

    This class provides a generic interface for multi-resolution
    registration using components of the registration framework. See
    documentation for ImageRegistrationMethod for a description of the
    registration framework components.

    The registration process is initiated by method Update(). The user
    must set the parameters of each component before calling this method.

    The number of resolution level to process can be set via
    SetNumberOfLevels(). At each resolution level, the user specified
    registration components are used to register downsampled version of
    the images by computing the transform parameters that will map one
    image onto the other image.

    A user can specify schedules for the fixed and moving image using
    SetSchedules() method. However, SetNumberOfLevels() and SetSchedules()
    should not be used together. An exception will be thrown if that
    happens.

    The downsampled images are provided by user specified
    MultiResolutionPyramidImageFilters. User must specify the schedule for
    each pyramid externally prior to calling Update().

    WARNING:  If there is discrepancy between the number of level
    requested and a pyramid schedule. The pyramid schedule will be
    overriden with a default one.  Before each resolution level an
    IterationEvent is invoked providing an opportunity for a user
    interface to change any of the components, change component
    parameters, or stop the registration.

    This class is templated over the fixed image type and the moving image
    type.

    See:   ImageRegistrationMethod 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_Clone)
    StopRegistration = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_StopRegistration)
    SetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetMovingImage)
    SetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetOptimizer)
    SetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetMetric)
    SetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetFixedImageRegion)
    GetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetFixedImageRegion)
    SetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetTransform)
    GetModifiableTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetInterpolator)
    SetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetFixedImagePyramid)
    GetModifiableFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetModifiableFixedImagePyramid)
    GetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetFixedImagePyramid)
    SetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetMovingImagePyramid)
    GetModifiableMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetModifiableMovingImagePyramid)
    GetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetMovingImagePyramid)
    SetSchedules = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetSchedules)
    GetFixedImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetFixedImagePyramidSchedule)
    GetMovingImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetMovingImagePyramidSchedule)
    SetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetNumberOfLevels)
    GetCurrentLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetCurrentLevel)
    SetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetInitialTransformParameters)
    GetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetInitialTransformParameters)
    SetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetInitialTransformParametersOfNextLevel)
    GetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetInitialTransformParametersOfNextLevel)
    GetLastTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetLastTransformParameters)
    GetOutput = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetOutput)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodID3ID3
    cast = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodID3ID3

        Create a new object of the class itkMultiResolutionImageRegistrationMethodID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodID3ID3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodID3ID3 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_swigregister(itkMultiResolutionImageRegistrationMethodID3ID3)
itkMultiResolutionImageRegistrationMethodID3ID3___New_orig__ = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3___New_orig__
itkMultiResolutionImageRegistrationMethodID3ID3_cast = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_cast


def itkMultiResolutionImageRegistrationMethodID4ID4_New():
    return itkMultiResolutionImageRegistrationMethodID4ID4.New()

class itkMultiResolutionImageRegistrationMethodID4ID4(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for multi-resolution image registration methods.

    This class provides a generic interface for multi-resolution
    registration using components of the registration framework. See
    documentation for ImageRegistrationMethod for a description of the
    registration framework components.

    The registration process is initiated by method Update(). The user
    must set the parameters of each component before calling this method.

    The number of resolution level to process can be set via
    SetNumberOfLevels(). At each resolution level, the user specified
    registration components are used to register downsampled version of
    the images by computing the transform parameters that will map one
    image onto the other image.

    A user can specify schedules for the fixed and moving image using
    SetSchedules() method. However, SetNumberOfLevels() and SetSchedules()
    should not be used together. An exception will be thrown if that
    happens.

    The downsampled images are provided by user specified
    MultiResolutionPyramidImageFilters. User must specify the schedule for
    each pyramid externally prior to calling Update().

    WARNING:  If there is discrepancy between the number of level
    requested and a pyramid schedule. The pyramid schedule will be
    overriden with a default one.  Before each resolution level an
    IterationEvent is invoked providing an opportunity for a user
    interface to change any of the components, change component
    parameters, or stop the registration.

    This class is templated over the fixed image type and the moving image
    type.

    See:   ImageRegistrationMethod 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_Clone)
    StopRegistration = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_StopRegistration)
    SetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetMovingImage)
    SetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetOptimizer)
    SetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetMetric)
    SetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetFixedImageRegion)
    GetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetFixedImageRegion)
    SetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetTransform)
    GetModifiableTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetInterpolator)
    SetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetFixedImagePyramid)
    GetModifiableFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetModifiableFixedImagePyramid)
    GetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetFixedImagePyramid)
    SetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetMovingImagePyramid)
    GetModifiableMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetModifiableMovingImagePyramid)
    GetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetMovingImagePyramid)
    SetSchedules = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetSchedules)
    GetFixedImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetFixedImagePyramidSchedule)
    GetMovingImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetMovingImagePyramidSchedule)
    SetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetNumberOfLevels)
    GetCurrentLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetCurrentLevel)
    SetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetInitialTransformParameters)
    GetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetInitialTransformParameters)
    SetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetInitialTransformParametersOfNextLevel)
    GetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetInitialTransformParametersOfNextLevel)
    GetLastTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetLastTransformParameters)
    GetOutput = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetOutput)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodID4ID4
    cast = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodID4ID4

        Create a new object of the class itkMultiResolutionImageRegistrationMethodID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodID4ID4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodID4ID4 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_swigregister(itkMultiResolutionImageRegistrationMethodID4ID4)
itkMultiResolutionImageRegistrationMethodID4ID4___New_orig__ = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4___New_orig__
itkMultiResolutionImageRegistrationMethodID4ID4_cast = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_cast


def itkMultiResolutionImageRegistrationMethodIF2IF2_New():
    return itkMultiResolutionImageRegistrationMethodIF2IF2.New()

class itkMultiResolutionImageRegistrationMethodIF2IF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for multi-resolution image registration methods.

    This class provides a generic interface for multi-resolution
    registration using components of the registration framework. See
    documentation for ImageRegistrationMethod for a description of the
    registration framework components.

    The registration process is initiated by method Update(). The user
    must set the parameters of each component before calling this method.

    The number of resolution level to process can be set via
    SetNumberOfLevels(). At each resolution level, the user specified
    registration components are used to register downsampled version of
    the images by computing the transform parameters that will map one
    image onto the other image.

    A user can specify schedules for the fixed and moving image using
    SetSchedules() method. However, SetNumberOfLevels() and SetSchedules()
    should not be used together. An exception will be thrown if that
    happens.

    The downsampled images are provided by user specified
    MultiResolutionPyramidImageFilters. User must specify the schedule for
    each pyramid externally prior to calling Update().

    WARNING:  If there is discrepancy between the number of level
    requested and a pyramid schedule. The pyramid schedule will be
    overriden with a default one.  Before each resolution level an
    IterationEvent is invoked providing an opportunity for a user
    interface to change any of the components, change component
    parameters, or stop the registration.

    This class is templated over the fixed image type and the moving image
    type.

    See:   ImageRegistrationMethod 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_Clone)
    StopRegistration = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_StopRegistration)
    SetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetMovingImage)
    SetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetOptimizer)
    SetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetMetric)
    SetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetFixedImageRegion)
    GetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetFixedImageRegion)
    SetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetTransform)
    GetModifiableTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetInterpolator)
    SetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetFixedImagePyramid)
    GetModifiableFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetModifiableFixedImagePyramid)
    GetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetFixedImagePyramid)
    SetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetMovingImagePyramid)
    GetModifiableMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetModifiableMovingImagePyramid)
    GetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetMovingImagePyramid)
    SetSchedules = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetSchedules)
    GetFixedImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetFixedImagePyramidSchedule)
    GetMovingImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetMovingImagePyramidSchedule)
    SetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetNumberOfLevels)
    GetCurrentLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetCurrentLevel)
    SetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetInitialTransformParameters)
    GetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetInitialTransformParameters)
    SetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetInitialTransformParametersOfNextLevel)
    GetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetInitialTransformParametersOfNextLevel)
    GetLastTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetLastTransformParameters)
    GetOutput = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetOutput)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIF2IF2
    cast = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIF2IF2

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIF2IF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIF2IF2 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_swigregister(itkMultiResolutionImageRegistrationMethodIF2IF2)
itkMultiResolutionImageRegistrationMethodIF2IF2___New_orig__ = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2___New_orig__
itkMultiResolutionImageRegistrationMethodIF2IF2_cast = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_cast


def itkMultiResolutionImageRegistrationMethodIF3IF3_New():
    return itkMultiResolutionImageRegistrationMethodIF3IF3.New()

class itkMultiResolutionImageRegistrationMethodIF3IF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for multi-resolution image registration methods.

    This class provides a generic interface for multi-resolution
    registration using components of the registration framework. See
    documentation for ImageRegistrationMethod for a description of the
    registration framework components.

    The registration process is initiated by method Update(). The user
    must set the parameters of each component before calling this method.

    The number of resolution level to process can be set via
    SetNumberOfLevels(). At each resolution level, the user specified
    registration components are used to register downsampled version of
    the images by computing the transform parameters that will map one
    image onto the other image.

    A user can specify schedules for the fixed and moving image using
    SetSchedules() method. However, SetNumberOfLevels() and SetSchedules()
    should not be used together. An exception will be thrown if that
    happens.

    The downsampled images are provided by user specified
    MultiResolutionPyramidImageFilters. User must specify the schedule for
    each pyramid externally prior to calling Update().

    WARNING:  If there is discrepancy between the number of level
    requested and a pyramid schedule. The pyramid schedule will be
    overriden with a default one.  Before each resolution level an
    IterationEvent is invoked providing an opportunity for a user
    interface to change any of the components, change component
    parameters, or stop the registration.

    This class is templated over the fixed image type and the moving image
    type.

    See:   ImageRegistrationMethod 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_Clone)
    StopRegistration = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_StopRegistration)
    SetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetMovingImage)
    SetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetOptimizer)
    SetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetMetric)
    SetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetFixedImageRegion)
    GetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetFixedImageRegion)
    SetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetTransform)
    GetModifiableTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetInterpolator)
    SetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetFixedImagePyramid)
    GetModifiableFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetModifiableFixedImagePyramid)
    GetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetFixedImagePyramid)
    SetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetMovingImagePyramid)
    GetModifiableMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetModifiableMovingImagePyramid)
    GetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetMovingImagePyramid)
    SetSchedules = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetSchedules)
    GetFixedImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetFixedImagePyramidSchedule)
    GetMovingImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetMovingImagePyramidSchedule)
    SetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetNumberOfLevels)
    GetCurrentLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetCurrentLevel)
    SetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetInitialTransformParameters)
    GetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetInitialTransformParameters)
    SetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetInitialTransformParametersOfNextLevel)
    GetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetInitialTransformParametersOfNextLevel)
    GetLastTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetLastTransformParameters)
    GetOutput = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetOutput)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIF3IF3
    cast = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIF3IF3

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIF3IF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIF3IF3 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_swigregister(itkMultiResolutionImageRegistrationMethodIF3IF3)
itkMultiResolutionImageRegistrationMethodIF3IF3___New_orig__ = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3___New_orig__
itkMultiResolutionImageRegistrationMethodIF3IF3_cast = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_cast


def itkMultiResolutionImageRegistrationMethodIF4IF4_New():
    return itkMultiResolutionImageRegistrationMethodIF4IF4.New()

class itkMultiResolutionImageRegistrationMethodIF4IF4(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for multi-resolution image registration methods.

    This class provides a generic interface for multi-resolution
    registration using components of the registration framework. See
    documentation for ImageRegistrationMethod for a description of the
    registration framework components.

    The registration process is initiated by method Update(). The user
    must set the parameters of each component before calling this method.

    The number of resolution level to process can be set via
    SetNumberOfLevels(). At each resolution level, the user specified
    registration components are used to register downsampled version of
    the images by computing the transform parameters that will map one
    image onto the other image.

    A user can specify schedules for the fixed and moving image using
    SetSchedules() method. However, SetNumberOfLevels() and SetSchedules()
    should not be used together. An exception will be thrown if that
    happens.

    The downsampled images are provided by user specified
    MultiResolutionPyramidImageFilters. User must specify the schedule for
    each pyramid externally prior to calling Update().

    WARNING:  If there is discrepancy between the number of level
    requested and a pyramid schedule. The pyramid schedule will be
    overriden with a default one.  Before each resolution level an
    IterationEvent is invoked providing an opportunity for a user
    interface to change any of the components, change component
    parameters, or stop the registration.

    This class is templated over the fixed image type and the moving image
    type.

    See:   ImageRegistrationMethod 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_Clone)
    StopRegistration = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_StopRegistration)
    SetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetMovingImage)
    SetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetOptimizer)
    SetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetMetric)
    SetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetFixedImageRegion)
    GetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetFixedImageRegion)
    SetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetTransform)
    GetModifiableTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetInterpolator)
    SetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetFixedImagePyramid)
    GetModifiableFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetModifiableFixedImagePyramid)
    GetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetFixedImagePyramid)
    SetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetMovingImagePyramid)
    GetModifiableMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetModifiableMovingImagePyramid)
    GetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetMovingImagePyramid)
    SetSchedules = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetSchedules)
    GetFixedImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetFixedImagePyramidSchedule)
    GetMovingImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetMovingImagePyramidSchedule)
    SetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetNumberOfLevels)
    GetCurrentLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetCurrentLevel)
    SetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetInitialTransformParameters)
    GetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetInitialTransformParameters)
    SetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetInitialTransformParametersOfNextLevel)
    GetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetInitialTransformParametersOfNextLevel)
    GetLastTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetLastTransformParameters)
    GetOutput = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetOutput)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIF4IF4
    cast = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIF4IF4

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIF4IF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIF4IF4 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_swigregister(itkMultiResolutionImageRegistrationMethodIF4IF4)
itkMultiResolutionImageRegistrationMethodIF4IF4___New_orig__ = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4___New_orig__
itkMultiResolutionImageRegistrationMethodIF4IF4_cast = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_cast


def itkMultiResolutionImageRegistrationMethodISS2ISS2_New():
    return itkMultiResolutionImageRegistrationMethodISS2ISS2.New()

class itkMultiResolutionImageRegistrationMethodISS2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for multi-resolution image registration methods.

    This class provides a generic interface for multi-resolution
    registration using components of the registration framework. See
    documentation for ImageRegistrationMethod for a description of the
    registration framework components.

    The registration process is initiated by method Update(). The user
    must set the parameters of each component before calling this method.

    The number of resolution level to process can be set via
    SetNumberOfLevels(). At each resolution level, the user specified
    registration components are used to register downsampled version of
    the images by computing the transform parameters that will map one
    image onto the other image.

    A user can specify schedules for the fixed and moving image using
    SetSchedules() method. However, SetNumberOfLevels() and SetSchedules()
    should not be used together. An exception will be thrown if that
    happens.

    The downsampled images are provided by user specified
    MultiResolutionPyramidImageFilters. User must specify the schedule for
    each pyramid externally prior to calling Update().

    WARNING:  If there is discrepancy between the number of level
    requested and a pyramid schedule. The pyramid schedule will be
    overriden with a default one.  Before each resolution level an
    IterationEvent is invoked providing an opportunity for a user
    interface to change any of the components, change component
    parameters, or stop the registration.

    This class is templated over the fixed image type and the moving image
    type.

    See:   ImageRegistrationMethod 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_Clone)
    StopRegistration = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_StopRegistration)
    SetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetMovingImage)
    SetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetOptimizer)
    SetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetMetric)
    SetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetFixedImageRegion)
    GetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetFixedImageRegion)
    SetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetTransform)
    GetModifiableTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetInterpolator)
    SetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetFixedImagePyramid)
    GetModifiableFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetModifiableFixedImagePyramid)
    GetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetFixedImagePyramid)
    SetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetMovingImagePyramid)
    GetModifiableMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetModifiableMovingImagePyramid)
    GetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetMovingImagePyramid)
    SetSchedules = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetSchedules)
    GetFixedImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetFixedImagePyramidSchedule)
    GetMovingImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetMovingImagePyramidSchedule)
    SetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetNumberOfLevels)
    GetCurrentLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetCurrentLevel)
    SetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetInitialTransformParameters)
    GetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetInitialTransformParameters)
    SetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetInitialTransformParametersOfNextLevel)
    GetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetInitialTransformParametersOfNextLevel)
    GetLastTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetLastTransformParameters)
    GetOutput = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetOutput)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodISS2ISS2
    cast = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodISS2ISS2

        Create a new object of the class itkMultiResolutionImageRegistrationMethodISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodISS2ISS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodISS2ISS2 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_swigregister(itkMultiResolutionImageRegistrationMethodISS2ISS2)
itkMultiResolutionImageRegistrationMethodISS2ISS2___New_orig__ = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2___New_orig__
itkMultiResolutionImageRegistrationMethodISS2ISS2_cast = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_cast


def itkMultiResolutionImageRegistrationMethodISS3ISS3_New():
    return itkMultiResolutionImageRegistrationMethodISS3ISS3.New()

class itkMultiResolutionImageRegistrationMethodISS3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for multi-resolution image registration methods.

    This class provides a generic interface for multi-resolution
    registration using components of the registration framework. See
    documentation for ImageRegistrationMethod for a description of the
    registration framework components.

    The registration process is initiated by method Update(). The user
    must set the parameters of each component before calling this method.

    The number of resolution level to process can be set via
    SetNumberOfLevels(). At each resolution level, the user specified
    registration components are used to register downsampled version of
    the images by computing the transform parameters that will map one
    image onto the other image.

    A user can specify schedules for the fixed and moving image using
    SetSchedules() method. However, SetNumberOfLevels() and SetSchedules()
    should not be used together. An exception will be thrown if that
    happens.

    The downsampled images are provided by user specified
    MultiResolutionPyramidImageFilters. User must specify the schedule for
    each pyramid externally prior to calling Update().

    WARNING:  If there is discrepancy between the number of level
    requested and a pyramid schedule. The pyramid schedule will be
    overriden with a default one.  Before each resolution level an
    IterationEvent is invoked providing an opportunity for a user
    interface to change any of the components, change component
    parameters, or stop the registration.

    This class is templated over the fixed image type and the moving image
    type.

    See:   ImageRegistrationMethod 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_Clone)
    StopRegistration = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_StopRegistration)
    SetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetMovingImage)
    SetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetOptimizer)
    SetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetMetric)
    SetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetFixedImageRegion)
    GetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetFixedImageRegion)
    SetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetTransform)
    GetModifiableTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetInterpolator)
    SetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetFixedImagePyramid)
    GetModifiableFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetModifiableFixedImagePyramid)
    GetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetFixedImagePyramid)
    SetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetMovingImagePyramid)
    GetModifiableMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetModifiableMovingImagePyramid)
    GetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetMovingImagePyramid)
    SetSchedules = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetSchedules)
    GetFixedImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetFixedImagePyramidSchedule)
    GetMovingImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetMovingImagePyramidSchedule)
    SetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetNumberOfLevels)
    GetCurrentLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetCurrentLevel)
    SetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetInitialTransformParameters)
    GetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetInitialTransformParameters)
    SetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetInitialTransformParametersOfNextLevel)
    GetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetInitialTransformParametersOfNextLevel)
    GetLastTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetLastTransformParameters)
    GetOutput = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetOutput)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodISS3ISS3
    cast = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodISS3ISS3

        Create a new object of the class itkMultiResolutionImageRegistrationMethodISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodISS3ISS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodISS3ISS3 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_swigregister(itkMultiResolutionImageRegistrationMethodISS3ISS3)
itkMultiResolutionImageRegistrationMethodISS3ISS3___New_orig__ = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3___New_orig__
itkMultiResolutionImageRegistrationMethodISS3ISS3_cast = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_cast


def itkMultiResolutionImageRegistrationMethodISS4ISS4_New():
    return itkMultiResolutionImageRegistrationMethodISS4ISS4.New()

class itkMultiResolutionImageRegistrationMethodISS4ISS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for multi-resolution image registration methods.

    This class provides a generic interface for multi-resolution
    registration using components of the registration framework. See
    documentation for ImageRegistrationMethod for a description of the
    registration framework components.

    The registration process is initiated by method Update(). The user
    must set the parameters of each component before calling this method.

    The number of resolution level to process can be set via
    SetNumberOfLevels(). At each resolution level, the user specified
    registration components are used to register downsampled version of
    the images by computing the transform parameters that will map one
    image onto the other image.

    A user can specify schedules for the fixed and moving image using
    SetSchedules() method. However, SetNumberOfLevels() and SetSchedules()
    should not be used together. An exception will be thrown if that
    happens.

    The downsampled images are provided by user specified
    MultiResolutionPyramidImageFilters. User must specify the schedule for
    each pyramid externally prior to calling Update().

    WARNING:  If there is discrepancy between the number of level
    requested and a pyramid schedule. The pyramid schedule will be
    overriden with a default one.  Before each resolution level an
    IterationEvent is invoked providing an opportunity for a user
    interface to change any of the components, change component
    parameters, or stop the registration.

    This class is templated over the fixed image type and the moving image
    type.

    See:   ImageRegistrationMethod 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_Clone)
    StopRegistration = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_StopRegistration)
    SetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetMovingImage)
    SetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetOptimizer)
    SetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetMetric)
    SetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetFixedImageRegion)
    GetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetFixedImageRegion)
    SetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetTransform)
    GetModifiableTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetInterpolator)
    SetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetFixedImagePyramid)
    GetModifiableFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetModifiableFixedImagePyramid)
    GetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetFixedImagePyramid)
    SetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetMovingImagePyramid)
    GetModifiableMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetModifiableMovingImagePyramid)
    GetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetMovingImagePyramid)
    SetSchedules = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetSchedules)
    GetFixedImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetFixedImagePyramidSchedule)
    GetMovingImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetMovingImagePyramidSchedule)
    SetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetNumberOfLevels)
    GetCurrentLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetCurrentLevel)
    SetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetInitialTransformParameters)
    GetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetInitialTransformParameters)
    SetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetInitialTransformParametersOfNextLevel)
    GetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetInitialTransformParametersOfNextLevel)
    GetLastTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetLastTransformParameters)
    GetOutput = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetOutput)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodISS4ISS4
    cast = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodISS4ISS4

        Create a new object of the class itkMultiResolutionImageRegistrationMethodISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodISS4ISS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodISS4ISS4 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_swigregister(itkMultiResolutionImageRegistrationMethodISS4ISS4)
itkMultiResolutionImageRegistrationMethodISS4ISS4___New_orig__ = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4___New_orig__
itkMultiResolutionImageRegistrationMethodISS4ISS4_cast = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_cast


def itkMultiResolutionImageRegistrationMethodIUC2IUC2_New():
    return itkMultiResolutionImageRegistrationMethodIUC2IUC2.New()

class itkMultiResolutionImageRegistrationMethodIUC2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for multi-resolution image registration methods.

    This class provides a generic interface for multi-resolution
    registration using components of the registration framework. See
    documentation for ImageRegistrationMethod for a description of the
    registration framework components.

    The registration process is initiated by method Update(). The user
    must set the parameters of each component before calling this method.

    The number of resolution level to process can be set via
    SetNumberOfLevels(). At each resolution level, the user specified
    registration components are used to register downsampled version of
    the images by computing the transform parameters that will map one
    image onto the other image.

    A user can specify schedules for the fixed and moving image using
    SetSchedules() method. However, SetNumberOfLevels() and SetSchedules()
    should not be used together. An exception will be thrown if that
    happens.

    The downsampled images are provided by user specified
    MultiResolutionPyramidImageFilters. User must specify the schedule for
    each pyramid externally prior to calling Update().

    WARNING:  If there is discrepancy between the number of level
    requested and a pyramid schedule. The pyramid schedule will be
    overriden with a default one.  Before each resolution level an
    IterationEvent is invoked providing an opportunity for a user
    interface to change any of the components, change component
    parameters, or stop the registration.

    This class is templated over the fixed image type and the moving image
    type.

    See:   ImageRegistrationMethod 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_Clone)
    StopRegistration = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_StopRegistration)
    SetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetMovingImage)
    SetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetOptimizer)
    SetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetMetric)
    SetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetFixedImageRegion)
    GetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetFixedImageRegion)
    SetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetTransform)
    GetModifiableTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetInterpolator)
    SetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetFixedImagePyramid)
    GetModifiableFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetModifiableFixedImagePyramid)
    GetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetFixedImagePyramid)
    SetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetMovingImagePyramid)
    GetModifiableMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetModifiableMovingImagePyramid)
    GetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetMovingImagePyramid)
    SetSchedules = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetSchedules)
    GetFixedImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetFixedImagePyramidSchedule)
    GetMovingImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetMovingImagePyramidSchedule)
    SetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetNumberOfLevels)
    GetCurrentLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetCurrentLevel)
    SetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetInitialTransformParameters)
    GetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetInitialTransformParameters)
    SetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetInitialTransformParametersOfNextLevel)
    GetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetInitialTransformParametersOfNextLevel)
    GetLastTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetLastTransformParameters)
    GetOutput = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetOutput)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIUC2IUC2
    cast = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIUC2IUC2

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIUC2IUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIUC2IUC2 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_swigregister(itkMultiResolutionImageRegistrationMethodIUC2IUC2)
itkMultiResolutionImageRegistrationMethodIUC2IUC2___New_orig__ = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2___New_orig__
itkMultiResolutionImageRegistrationMethodIUC2IUC2_cast = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_cast


def itkMultiResolutionImageRegistrationMethodIUC3IUC3_New():
    return itkMultiResolutionImageRegistrationMethodIUC3IUC3.New()

class itkMultiResolutionImageRegistrationMethodIUC3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for multi-resolution image registration methods.

    This class provides a generic interface for multi-resolution
    registration using components of the registration framework. See
    documentation for ImageRegistrationMethod for a description of the
    registration framework components.

    The registration process is initiated by method Update(). The user
    must set the parameters of each component before calling this method.

    The number of resolution level to process can be set via
    SetNumberOfLevels(). At each resolution level, the user specified
    registration components are used to register downsampled version of
    the images by computing the transform parameters that will map one
    image onto the other image.

    A user can specify schedules for the fixed and moving image using
    SetSchedules() method. However, SetNumberOfLevels() and SetSchedules()
    should not be used together. An exception will be thrown if that
    happens.

    The downsampled images are provided by user specified
    MultiResolutionPyramidImageFilters. User must specify the schedule for
    each pyramid externally prior to calling Update().

    WARNING:  If there is discrepancy between the number of level
    requested and a pyramid schedule. The pyramid schedule will be
    overriden with a default one.  Before each resolution level an
    IterationEvent is invoked providing an opportunity for a user
    interface to change any of the components, change component
    parameters, or stop the registration.

    This class is templated over the fixed image type and the moving image
    type.

    See:   ImageRegistrationMethod 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_Clone)
    StopRegistration = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_StopRegistration)
    SetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetMovingImage)
    SetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetOptimizer)
    SetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetMetric)
    SetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetFixedImageRegion)
    GetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetFixedImageRegion)
    SetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetTransform)
    GetModifiableTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetInterpolator)
    SetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetFixedImagePyramid)
    GetModifiableFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetModifiableFixedImagePyramid)
    GetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetFixedImagePyramid)
    SetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetMovingImagePyramid)
    GetModifiableMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetModifiableMovingImagePyramid)
    GetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetMovingImagePyramid)
    SetSchedules = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetSchedules)
    GetFixedImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetFixedImagePyramidSchedule)
    GetMovingImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetMovingImagePyramidSchedule)
    SetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetNumberOfLevels)
    GetCurrentLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetCurrentLevel)
    SetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetInitialTransformParameters)
    GetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetInitialTransformParameters)
    SetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetInitialTransformParametersOfNextLevel)
    GetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetInitialTransformParametersOfNextLevel)
    GetLastTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetLastTransformParameters)
    GetOutput = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetOutput)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIUC3IUC3
    cast = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIUC3IUC3

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIUC3IUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIUC3IUC3 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_swigregister(itkMultiResolutionImageRegistrationMethodIUC3IUC3)
itkMultiResolutionImageRegistrationMethodIUC3IUC3___New_orig__ = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3___New_orig__
itkMultiResolutionImageRegistrationMethodIUC3IUC3_cast = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_cast


def itkMultiResolutionImageRegistrationMethodIUC4IUC4_New():
    return itkMultiResolutionImageRegistrationMethodIUC4IUC4.New()

class itkMultiResolutionImageRegistrationMethodIUC4IUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for multi-resolution image registration methods.

    This class provides a generic interface for multi-resolution
    registration using components of the registration framework. See
    documentation for ImageRegistrationMethod for a description of the
    registration framework components.

    The registration process is initiated by method Update(). The user
    must set the parameters of each component before calling this method.

    The number of resolution level to process can be set via
    SetNumberOfLevels(). At each resolution level, the user specified
    registration components are used to register downsampled version of
    the images by computing the transform parameters that will map one
    image onto the other image.

    A user can specify schedules for the fixed and moving image using
    SetSchedules() method. However, SetNumberOfLevels() and SetSchedules()
    should not be used together. An exception will be thrown if that
    happens.

    The downsampled images are provided by user specified
    MultiResolutionPyramidImageFilters. User must specify the schedule for
    each pyramid externally prior to calling Update().

    WARNING:  If there is discrepancy between the number of level
    requested and a pyramid schedule. The pyramid schedule will be
    overriden with a default one.  Before each resolution level an
    IterationEvent is invoked providing an opportunity for a user
    interface to change any of the components, change component
    parameters, or stop the registration.

    This class is templated over the fixed image type and the moving image
    type.

    See:   ImageRegistrationMethod 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_Clone)
    StopRegistration = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_StopRegistration)
    SetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetMovingImage)
    SetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetOptimizer)
    SetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetMetric)
    SetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetFixedImageRegion)
    GetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetFixedImageRegion)
    SetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetTransform)
    GetModifiableTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetInterpolator)
    SetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetFixedImagePyramid)
    GetModifiableFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetModifiableFixedImagePyramid)
    GetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetFixedImagePyramid)
    SetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetMovingImagePyramid)
    GetModifiableMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetModifiableMovingImagePyramid)
    GetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetMovingImagePyramid)
    SetSchedules = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetSchedules)
    GetFixedImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetFixedImagePyramidSchedule)
    GetMovingImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetMovingImagePyramidSchedule)
    SetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetNumberOfLevels)
    GetCurrentLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetCurrentLevel)
    SetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetInitialTransformParameters)
    GetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetInitialTransformParameters)
    SetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetInitialTransformParametersOfNextLevel)
    GetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetInitialTransformParametersOfNextLevel)
    GetLastTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetLastTransformParameters)
    GetOutput = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetOutput)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIUC4IUC4
    cast = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIUC4IUC4

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIUC4IUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIUC4IUC4 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_swigregister(itkMultiResolutionImageRegistrationMethodIUC4IUC4)
itkMultiResolutionImageRegistrationMethodIUC4IUC4___New_orig__ = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4___New_orig__
itkMultiResolutionImageRegistrationMethodIUC4IUC4_cast = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_cast


def itkMultiResolutionImageRegistrationMethodIUS2IUS2_New():
    return itkMultiResolutionImageRegistrationMethodIUS2IUS2.New()

class itkMultiResolutionImageRegistrationMethodIUS2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for multi-resolution image registration methods.

    This class provides a generic interface for multi-resolution
    registration using components of the registration framework. See
    documentation for ImageRegistrationMethod for a description of the
    registration framework components.

    The registration process is initiated by method Update(). The user
    must set the parameters of each component before calling this method.

    The number of resolution level to process can be set via
    SetNumberOfLevels(). At each resolution level, the user specified
    registration components are used to register downsampled version of
    the images by computing the transform parameters that will map one
    image onto the other image.

    A user can specify schedules for the fixed and moving image using
    SetSchedules() method. However, SetNumberOfLevels() and SetSchedules()
    should not be used together. An exception will be thrown if that
    happens.

    The downsampled images are provided by user specified
    MultiResolutionPyramidImageFilters. User must specify the schedule for
    each pyramid externally prior to calling Update().

    WARNING:  If there is discrepancy between the number of level
    requested and a pyramid schedule. The pyramid schedule will be
    overriden with a default one.  Before each resolution level an
    IterationEvent is invoked providing an opportunity for a user
    interface to change any of the components, change component
    parameters, or stop the registration.

    This class is templated over the fixed image type and the moving image
    type.

    See:   ImageRegistrationMethod 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_Clone)
    StopRegistration = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_StopRegistration)
    SetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetMovingImage)
    SetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetOptimizer)
    SetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetMetric)
    SetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetFixedImageRegion)
    GetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetFixedImageRegion)
    SetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetTransform)
    GetModifiableTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetInterpolator)
    SetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetFixedImagePyramid)
    GetModifiableFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetModifiableFixedImagePyramid)
    GetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetFixedImagePyramid)
    SetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetMovingImagePyramid)
    GetModifiableMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetModifiableMovingImagePyramid)
    GetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetMovingImagePyramid)
    SetSchedules = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetSchedules)
    GetFixedImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetFixedImagePyramidSchedule)
    GetMovingImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetMovingImagePyramidSchedule)
    SetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetNumberOfLevels)
    GetCurrentLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetCurrentLevel)
    SetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetInitialTransformParameters)
    GetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetInitialTransformParameters)
    SetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetInitialTransformParametersOfNextLevel)
    GetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetInitialTransformParametersOfNextLevel)
    GetLastTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetLastTransformParameters)
    GetOutput = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetOutput)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIUS2IUS2
    cast = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIUS2IUS2

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIUS2IUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIUS2IUS2 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_swigregister(itkMultiResolutionImageRegistrationMethodIUS2IUS2)
itkMultiResolutionImageRegistrationMethodIUS2IUS2___New_orig__ = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2___New_orig__
itkMultiResolutionImageRegistrationMethodIUS2IUS2_cast = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_cast


def itkMultiResolutionImageRegistrationMethodIUS3IUS3_New():
    return itkMultiResolutionImageRegistrationMethodIUS3IUS3.New()

class itkMultiResolutionImageRegistrationMethodIUS3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for multi-resolution image registration methods.

    This class provides a generic interface for multi-resolution
    registration using components of the registration framework. See
    documentation for ImageRegistrationMethod for a description of the
    registration framework components.

    The registration process is initiated by method Update(). The user
    must set the parameters of each component before calling this method.

    The number of resolution level to process can be set via
    SetNumberOfLevels(). At each resolution level, the user specified
    registration components are used to register downsampled version of
    the images by computing the transform parameters that will map one
    image onto the other image.

    A user can specify schedules for the fixed and moving image using
    SetSchedules() method. However, SetNumberOfLevels() and SetSchedules()
    should not be used together. An exception will be thrown if that
    happens.

    The downsampled images are provided by user specified
    MultiResolutionPyramidImageFilters. User must specify the schedule for
    each pyramid externally prior to calling Update().

    WARNING:  If there is discrepancy between the number of level
    requested and a pyramid schedule. The pyramid schedule will be
    overriden with a default one.  Before each resolution level an
    IterationEvent is invoked providing an opportunity for a user
    interface to change any of the components, change component
    parameters, or stop the registration.

    This class is templated over the fixed image type and the moving image
    type.

    See:   ImageRegistrationMethod 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_Clone)
    StopRegistration = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_StopRegistration)
    SetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetMovingImage)
    SetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetOptimizer)
    SetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetMetric)
    SetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetFixedImageRegion)
    GetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetFixedImageRegion)
    SetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetTransform)
    GetModifiableTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetInterpolator)
    SetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetFixedImagePyramid)
    GetModifiableFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetModifiableFixedImagePyramid)
    GetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetFixedImagePyramid)
    SetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetMovingImagePyramid)
    GetModifiableMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetModifiableMovingImagePyramid)
    GetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetMovingImagePyramid)
    SetSchedules = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetSchedules)
    GetFixedImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetFixedImagePyramidSchedule)
    GetMovingImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetMovingImagePyramidSchedule)
    SetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetNumberOfLevels)
    GetCurrentLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetCurrentLevel)
    SetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetInitialTransformParameters)
    GetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetInitialTransformParameters)
    SetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetInitialTransformParametersOfNextLevel)
    GetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetInitialTransformParametersOfNextLevel)
    GetLastTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetLastTransformParameters)
    GetOutput = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetOutput)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIUS3IUS3
    cast = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIUS3IUS3

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIUS3IUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIUS3IUS3 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_swigregister(itkMultiResolutionImageRegistrationMethodIUS3IUS3)
itkMultiResolutionImageRegistrationMethodIUS3IUS3___New_orig__ = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3___New_orig__
itkMultiResolutionImageRegistrationMethodIUS3IUS3_cast = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_cast


def itkMultiResolutionImageRegistrationMethodIUS4IUS4_New():
    return itkMultiResolutionImageRegistrationMethodIUS4IUS4.New()

class itkMultiResolutionImageRegistrationMethodIUS4IUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for multi-resolution image registration methods.

    This class provides a generic interface for multi-resolution
    registration using components of the registration framework. See
    documentation for ImageRegistrationMethod for a description of the
    registration framework components.

    The registration process is initiated by method Update(). The user
    must set the parameters of each component before calling this method.

    The number of resolution level to process can be set via
    SetNumberOfLevels(). At each resolution level, the user specified
    registration components are used to register downsampled version of
    the images by computing the transform parameters that will map one
    image onto the other image.

    A user can specify schedules for the fixed and moving image using
    SetSchedules() method. However, SetNumberOfLevels() and SetSchedules()
    should not be used together. An exception will be thrown if that
    happens.

    The downsampled images are provided by user specified
    MultiResolutionPyramidImageFilters. User must specify the schedule for
    each pyramid externally prior to calling Update().

    WARNING:  If there is discrepancy between the number of level
    requested and a pyramid schedule. The pyramid schedule will be
    overriden with a default one.  Before each resolution level an
    IterationEvent is invoked providing an opportunity for a user
    interface to change any of the components, change component
    parameters, or stop the registration.

    This class is templated over the fixed image type and the moving image
    type.

    See:   ImageRegistrationMethod 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_Clone)
    StopRegistration = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_StopRegistration)
    SetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetMovingImage)
    SetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetOptimizer)
    GetModifiableOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetModifiableOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetOptimizer)
    SetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetMetric)
    GetModifiableMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetModifiableMetric)
    GetMetric = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetMetric)
    SetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetFixedImageRegion)
    GetFixedImageRegion = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetFixedImageRegion)
    SetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetTransform)
    GetModifiableTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetModifiableTransform)
    GetTransform = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetInterpolator)
    SetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetFixedImagePyramid)
    GetModifiableFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetModifiableFixedImagePyramid)
    GetFixedImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetFixedImagePyramid)
    SetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetMovingImagePyramid)
    GetModifiableMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetModifiableMovingImagePyramid)
    GetMovingImagePyramid = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetMovingImagePyramid)
    SetSchedules = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetSchedules)
    GetFixedImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetFixedImagePyramidSchedule)
    GetMovingImagePyramidSchedule = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetMovingImagePyramidSchedule)
    SetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetNumberOfLevels)
    GetNumberOfLevels = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetNumberOfLevels)
    GetCurrentLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetCurrentLevel)
    SetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetInitialTransformParameters)
    GetInitialTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetInitialTransformParameters)
    SetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetInitialTransformParametersOfNextLevel)
    GetInitialTransformParametersOfNextLevel = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetInitialTransformParametersOfNextLevel)
    GetLastTransformParameters = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetLastTransformParameters)
    GetOutput = _swig_new_instance_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetOutput)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIUS4IUS4
    cast = _swig_new_static_method(_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIUS4IUS4

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIUS4IUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIUS4IUS4 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_swigregister(itkMultiResolutionImageRegistrationMethodIUS4IUS4)
itkMultiResolutionImageRegistrationMethodIUS4IUS4___New_orig__ = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4___New_orig__
itkMultiResolutionImageRegistrationMethodIUS4IUS4_cast = _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_cast


from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def multi_resolution_image_registration_method(*args, **kwargs):
    """Procedural interface for MultiResolutionImageRegistrationMethod"""
    import itk

    instance = itk.MultiResolutionImageRegistrationMethod.New(*args, **kwargs)
    return instance.__internal_call__()


def multi_resolution_image_registration_method_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    filter_class = itk.ITKRegistrationCommon.MultiResolutionImageRegistrationMethod
    is_template = isinstance(filter_class, itkTemplate.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    multi_resolution_image_registration_method.__doc__ = filter_object.__doc__
    multi_resolution_image_registration_method.__doc__ += "\n args are input(s) to the filter.\n\n"
    multi_resolution_image_registration_method.__doc__ += "\n Available keyword arguments:\n"
    if is_template:
        multi_resolution_image_registration_method.__doc__ += itkHelpers.filter_args(filter_object)[0]
        multi_resolution_image_registration_method.__doc__ += "\n"
        multi_resolution_image_registration_method.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        multi_resolution_image_registration_method.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )




