# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _ITKMetricsv4Python



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkEuclideanDistancePointSetToPointSetMetricPython
else:
    import _itkEuclideanDistancePointSetToPointSetMetricPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkEuclideanDistancePointSetToPointSetMetricPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkEuclideanDistancePointSetToPointSetMetricPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkObjectToObjectMetricPython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkTransformBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkArray2DPython
import itk.ITKCommonBasePython
import itk.itkArrayPython
import itk.itkDiffusionTensor3DPython
import itk.itkVariableLengthVectorPython
import itk.itkOptimizerParametersPython
import itk.itkObjectToObjectMetricBasePython
import itk.itkSingleValuedCostFunctionv4Python
import itk.itkCostFunctionPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkRGBPixelPython
import itk.itkDisplacementFieldTransformPython
import itk.itkOptimizerParameterScalesEstimatorPython
import itk.itkPointSetPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
class itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass(itk.itkObjectToObjectMetricPython.itkObjectToObjectMetric22):
    r"""Proxy of C++ itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_GetFixedPointSet)
    GetModifiableFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_GetModifiableFixedTransformedPointSet)
    GetFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_GetFixedTransformedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_GetMovingPointSet)
    GetModifiableMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_GetModifiableMovingTransformedPointSet)
    GetMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_GetMovingTransformedPointSet)
    GetNumberOfComponents = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_GetNumberOfComponents)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_GetLocalNeighborhoodDerivative)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_GetLocalNeighborhoodValueAndDerivative)
    GetVirtualTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_GetVirtualTransformedPointSet)
    SetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_SetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    GetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_GetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOn)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOff)
    SetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_SetCalculateValueAndDerivativeInTangentSpace)
    GetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_GetCalculateValueAndDerivativeInTangentSpace)
    CalculateValueAndDerivativeInTangentSpaceOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_CalculateValueAndDerivativeInTangentSpaceOn)
    CalculateValueAndDerivativeInTangentSpaceOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_CalculateValueAndDerivativeInTangentSpaceOff)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_cast)

# Register itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass)
itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass_cast

class itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass(itk.itkObjectToObjectMetricPython.itkObjectToObjectMetric33):
    r"""Proxy of C++ itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_GetFixedPointSet)
    GetModifiableFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_GetModifiableFixedTransformedPointSet)
    GetFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_GetFixedTransformedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_GetMovingPointSet)
    GetModifiableMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_GetModifiableMovingTransformedPointSet)
    GetMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_GetMovingTransformedPointSet)
    GetNumberOfComponents = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_GetNumberOfComponents)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_GetLocalNeighborhoodDerivative)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_GetLocalNeighborhoodValueAndDerivative)
    GetVirtualTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_GetVirtualTransformedPointSet)
    SetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_SetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    GetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_GetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOn)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOff)
    SetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_SetCalculateValueAndDerivativeInTangentSpace)
    GetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_GetCalculateValueAndDerivativeInTangentSpace)
    CalculateValueAndDerivativeInTangentSpaceOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_CalculateValueAndDerivativeInTangentSpaceOn)
    CalculateValueAndDerivativeInTangentSpaceOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_CalculateValueAndDerivativeInTangentSpaceOff)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_cast)

# Register itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass)
itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass_cast

class itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass(itk.itkObjectToObjectMetricPython.itkObjectToObjectMetric44):
    r"""Proxy of C++ itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_GetFixedPointSet)
    GetModifiableFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_GetModifiableFixedTransformedPointSet)
    GetFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_GetFixedTransformedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_GetMovingPointSet)
    GetModifiableMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_GetModifiableMovingTransformedPointSet)
    GetMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_GetMovingTransformedPointSet)
    GetNumberOfComponents = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_GetNumberOfComponents)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_GetLocalNeighborhoodDerivative)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_GetLocalNeighborhoodValueAndDerivative)
    GetVirtualTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_GetVirtualTransformedPointSet)
    SetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_SetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    GetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_GetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOn)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOff)
    SetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_SetCalculateValueAndDerivativeInTangentSpace)
    GetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_GetCalculateValueAndDerivativeInTangentSpace)
    CalculateValueAndDerivativeInTangentSpaceOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_CalculateValueAndDerivativeInTangentSpaceOn)
    CalculateValueAndDerivativeInTangentSpaceOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_CalculateValueAndDerivativeInTangentSpaceOff)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_cast)

# Register itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass)
itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass_cast

class itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass(itk.itkObjectToObjectMetricPython.itkObjectToObjectMetric22):
    r"""Proxy of C++ itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_GetFixedPointSet)
    GetModifiableFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_GetModifiableFixedTransformedPointSet)
    GetFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_GetFixedTransformedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_GetMovingPointSet)
    GetModifiableMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_GetModifiableMovingTransformedPointSet)
    GetMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_GetMovingTransformedPointSet)
    GetNumberOfComponents = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_GetNumberOfComponents)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_GetLocalNeighborhoodDerivative)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_GetLocalNeighborhoodValueAndDerivative)
    GetVirtualTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_GetVirtualTransformedPointSet)
    SetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_SetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    GetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_GetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOn)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOff)
    SetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_SetCalculateValueAndDerivativeInTangentSpace)
    GetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_GetCalculateValueAndDerivativeInTangentSpace)
    CalculateValueAndDerivativeInTangentSpaceOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_CalculateValueAndDerivativeInTangentSpaceOn)
    CalculateValueAndDerivativeInTangentSpaceOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_CalculateValueAndDerivativeInTangentSpaceOff)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_cast)

# Register itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass)
itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass_cast

class itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass(itk.itkObjectToObjectMetricPython.itkObjectToObjectMetric33):
    r"""Proxy of C++ itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_GetFixedPointSet)
    GetModifiableFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_GetModifiableFixedTransformedPointSet)
    GetFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_GetFixedTransformedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_GetMovingPointSet)
    GetModifiableMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_GetModifiableMovingTransformedPointSet)
    GetMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_GetMovingTransformedPointSet)
    GetNumberOfComponents = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_GetNumberOfComponents)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_GetLocalNeighborhoodDerivative)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_GetLocalNeighborhoodValueAndDerivative)
    GetVirtualTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_GetVirtualTransformedPointSet)
    SetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_SetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    GetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_GetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOn)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOff)
    SetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_SetCalculateValueAndDerivativeInTangentSpace)
    GetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_GetCalculateValueAndDerivativeInTangentSpace)
    CalculateValueAndDerivativeInTangentSpaceOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_CalculateValueAndDerivativeInTangentSpaceOn)
    CalculateValueAndDerivativeInTangentSpaceOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_CalculateValueAndDerivativeInTangentSpaceOff)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_cast)

# Register itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass)
itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass_cast

class itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass(itk.itkObjectToObjectMetricPython.itkObjectToObjectMetric44):
    r"""Proxy of C++ itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_GetFixedPointSet)
    GetModifiableFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_GetModifiableFixedTransformedPointSet)
    GetFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_GetFixedTransformedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_GetMovingPointSet)
    GetModifiableMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_GetModifiableMovingTransformedPointSet)
    GetMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_GetMovingTransformedPointSet)
    GetNumberOfComponents = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_GetNumberOfComponents)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_GetLocalNeighborhoodDerivative)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_GetLocalNeighborhoodValueAndDerivative)
    GetVirtualTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_GetVirtualTransformedPointSet)
    SetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_SetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    GetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_GetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOn)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOff)
    SetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_SetCalculateValueAndDerivativeInTangentSpace)
    GetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_GetCalculateValueAndDerivativeInTangentSpace)
    CalculateValueAndDerivativeInTangentSpaceOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_CalculateValueAndDerivativeInTangentSpaceOn)
    CalculateValueAndDerivativeInTangentSpaceOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_CalculateValueAndDerivativeInTangentSpaceOff)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_cast)

# Register itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass)
itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass_cast

class itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass(itk.itkObjectToObjectMetricPython.itkObjectToObjectMetric22):
    r"""Proxy of C++ itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_GetFixedPointSet)
    GetModifiableFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_GetModifiableFixedTransformedPointSet)
    GetFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_GetFixedTransformedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_GetMovingPointSet)
    GetModifiableMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_GetModifiableMovingTransformedPointSet)
    GetMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_GetMovingTransformedPointSet)
    GetNumberOfComponents = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_GetNumberOfComponents)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_GetLocalNeighborhoodDerivative)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_GetLocalNeighborhoodValueAndDerivative)
    GetVirtualTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_GetVirtualTransformedPointSet)
    SetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_SetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    GetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_GetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOn)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOff)
    SetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_SetCalculateValueAndDerivativeInTangentSpace)
    GetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_GetCalculateValueAndDerivativeInTangentSpace)
    CalculateValueAndDerivativeInTangentSpaceOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_CalculateValueAndDerivativeInTangentSpaceOn)
    CalculateValueAndDerivativeInTangentSpaceOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_CalculateValueAndDerivativeInTangentSpaceOff)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_cast)

# Register itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass)
itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass_cast

class itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass(itk.itkObjectToObjectMetricPython.itkObjectToObjectMetric33):
    r"""Proxy of C++ itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_GetFixedPointSet)
    GetModifiableFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_GetModifiableFixedTransformedPointSet)
    GetFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_GetFixedTransformedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_GetMovingPointSet)
    GetModifiableMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_GetModifiableMovingTransformedPointSet)
    GetMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_GetMovingTransformedPointSet)
    GetNumberOfComponents = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_GetNumberOfComponents)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_GetLocalNeighborhoodDerivative)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_GetLocalNeighborhoodValueAndDerivative)
    GetVirtualTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_GetVirtualTransformedPointSet)
    SetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_SetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    GetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_GetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOn)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOff)
    SetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_SetCalculateValueAndDerivativeInTangentSpace)
    GetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_GetCalculateValueAndDerivativeInTangentSpace)
    CalculateValueAndDerivativeInTangentSpaceOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_CalculateValueAndDerivativeInTangentSpaceOn)
    CalculateValueAndDerivativeInTangentSpaceOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_CalculateValueAndDerivativeInTangentSpaceOff)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_cast)

# Register itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass)
itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass_cast

class itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass(itk.itkObjectToObjectMetricPython.itkObjectToObjectMetric44):
    r"""Proxy of C++ itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_GetFixedPointSet)
    GetModifiableFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_GetModifiableFixedTransformedPointSet)
    GetFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_GetFixedTransformedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_GetMovingPointSet)
    GetModifiableMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_GetModifiableMovingTransformedPointSet)
    GetMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_GetMovingTransformedPointSet)
    GetNumberOfComponents = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_GetNumberOfComponents)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_GetLocalNeighborhoodDerivative)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_GetLocalNeighborhoodValueAndDerivative)
    GetVirtualTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_GetVirtualTransformedPointSet)
    SetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_SetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    GetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_GetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOn)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOff)
    SetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_SetCalculateValueAndDerivativeInTangentSpace)
    GetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_GetCalculateValueAndDerivativeInTangentSpace)
    CalculateValueAndDerivativeInTangentSpaceOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_CalculateValueAndDerivativeInTangentSpaceOn)
    CalculateValueAndDerivativeInTangentSpaceOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_CalculateValueAndDerivativeInTangentSpaceOff)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_cast)

# Register itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass)
itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass_cast

class itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass(itk.itkObjectToObjectMetricPython.itkObjectToObjectMetric22):
    r"""Proxy of C++ itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_GetFixedPointSet)
    GetModifiableFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_GetModifiableFixedTransformedPointSet)
    GetFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_GetFixedTransformedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_GetMovingPointSet)
    GetModifiableMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_GetModifiableMovingTransformedPointSet)
    GetMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_GetMovingTransformedPointSet)
    GetNumberOfComponents = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_GetNumberOfComponents)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_GetLocalNeighborhoodDerivative)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_GetLocalNeighborhoodValueAndDerivative)
    GetVirtualTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_GetVirtualTransformedPointSet)
    SetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_SetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    GetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_GetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOn)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOff)
    SetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_SetCalculateValueAndDerivativeInTangentSpace)
    GetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_GetCalculateValueAndDerivativeInTangentSpace)
    CalculateValueAndDerivativeInTangentSpaceOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_CalculateValueAndDerivativeInTangentSpaceOn)
    CalculateValueAndDerivativeInTangentSpaceOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_CalculateValueAndDerivativeInTangentSpaceOff)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_cast)

# Register itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass)
itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass_cast

class itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass(itk.itkObjectToObjectMetricPython.itkObjectToObjectMetric33):
    r"""Proxy of C++ itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_GetFixedPointSet)
    GetModifiableFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_GetModifiableFixedTransformedPointSet)
    GetFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_GetFixedTransformedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_GetMovingPointSet)
    GetModifiableMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_GetModifiableMovingTransformedPointSet)
    GetMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_GetMovingTransformedPointSet)
    GetNumberOfComponents = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_GetNumberOfComponents)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_GetLocalNeighborhoodDerivative)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_GetLocalNeighborhoodValueAndDerivative)
    GetVirtualTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_GetVirtualTransformedPointSet)
    SetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_SetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    GetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_GetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOn)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOff)
    SetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_SetCalculateValueAndDerivativeInTangentSpace)
    GetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_GetCalculateValueAndDerivativeInTangentSpace)
    CalculateValueAndDerivativeInTangentSpaceOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_CalculateValueAndDerivativeInTangentSpaceOn)
    CalculateValueAndDerivativeInTangentSpaceOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_CalculateValueAndDerivativeInTangentSpaceOff)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_cast)

# Register itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass)
itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass_cast

class itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass(itk.itkObjectToObjectMetricPython.itkObjectToObjectMetric44):
    r"""Proxy of C++ itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_GetFixedPointSet)
    GetModifiableFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_GetModifiableFixedTransformedPointSet)
    GetFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_GetFixedTransformedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_GetMovingPointSet)
    GetModifiableMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_GetModifiableMovingTransformedPointSet)
    GetMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_GetMovingTransformedPointSet)
    GetNumberOfComponents = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_GetNumberOfComponents)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_GetLocalNeighborhoodDerivative)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_GetLocalNeighborhoodValueAndDerivative)
    GetVirtualTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_GetVirtualTransformedPointSet)
    SetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_SetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    GetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_GetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOn)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOff)
    SetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_SetCalculateValueAndDerivativeInTangentSpace)
    GetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_GetCalculateValueAndDerivativeInTangentSpace)
    CalculateValueAndDerivativeInTangentSpaceOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_CalculateValueAndDerivativeInTangentSpaceOn)
    CalculateValueAndDerivativeInTangentSpaceOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_CalculateValueAndDerivativeInTangentSpaceOff)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_cast)

# Register itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass)
itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass_cast

class itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass(itk.itkObjectToObjectMetricPython.itkObjectToObjectMetric22):
    r"""Proxy of C++ itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_GetFixedPointSet)
    GetModifiableFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_GetModifiableFixedTransformedPointSet)
    GetFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_GetFixedTransformedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_GetMovingPointSet)
    GetModifiableMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_GetModifiableMovingTransformedPointSet)
    GetMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_GetMovingTransformedPointSet)
    GetNumberOfComponents = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_GetNumberOfComponents)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_GetLocalNeighborhoodDerivative)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_GetLocalNeighborhoodValueAndDerivative)
    GetVirtualTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_GetVirtualTransformedPointSet)
    SetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_SetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    GetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_GetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOn)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOff)
    SetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_SetCalculateValueAndDerivativeInTangentSpace)
    GetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_GetCalculateValueAndDerivativeInTangentSpace)
    CalculateValueAndDerivativeInTangentSpaceOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_CalculateValueAndDerivativeInTangentSpaceOn)
    CalculateValueAndDerivativeInTangentSpaceOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_CalculateValueAndDerivativeInTangentSpaceOff)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_cast)

# Register itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass)
itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass_cast

class itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass(itk.itkObjectToObjectMetricPython.itkObjectToObjectMetric33):
    r"""Proxy of C++ itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_GetFixedPointSet)
    GetModifiableFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_GetModifiableFixedTransformedPointSet)
    GetFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_GetFixedTransformedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_GetMovingPointSet)
    GetModifiableMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_GetModifiableMovingTransformedPointSet)
    GetMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_GetMovingTransformedPointSet)
    GetNumberOfComponents = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_GetNumberOfComponents)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_GetLocalNeighborhoodDerivative)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_GetLocalNeighborhoodValueAndDerivative)
    GetVirtualTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_GetVirtualTransformedPointSet)
    SetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_SetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    GetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_GetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOn)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOff)
    SetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_SetCalculateValueAndDerivativeInTangentSpace)
    GetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_GetCalculateValueAndDerivativeInTangentSpace)
    CalculateValueAndDerivativeInTangentSpaceOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_CalculateValueAndDerivativeInTangentSpaceOn)
    CalculateValueAndDerivativeInTangentSpaceOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_CalculateValueAndDerivativeInTangentSpaceOff)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_cast)

# Register itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass)
itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass_cast

class itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass(itk.itkObjectToObjectMetricPython.itkObjectToObjectMetric44):
    r"""Proxy of C++ itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_SetFixedPointSet)
    GetFixedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_GetFixedPointSet)
    GetModifiableFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_GetModifiableFixedTransformedPointSet)
    GetFixedTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_GetFixedTransformedPointSet)
    SetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_SetMovingPointSet)
    GetMovingPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_GetMovingPointSet)
    GetModifiableMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_GetModifiableMovingTransformedPointSet)
    GetMovingTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_GetMovingTransformedPointSet)
    GetNumberOfComponents = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_GetNumberOfComponents)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_GetLocalNeighborhoodDerivative)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_GetLocalNeighborhoodValueAndDerivative)
    GetVirtualTransformedPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_GetVirtualTransformedPointSet)
    SetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_SetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    GetStoreDerivativeAsSparseFieldForLocalSupportTransforms = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_GetStoreDerivativeAsSparseFieldForLocalSupportTransforms)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOn)
    StoreDerivativeAsSparseFieldForLocalSupportTransformsOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_StoreDerivativeAsSparseFieldForLocalSupportTransformsOff)
    SetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_SetCalculateValueAndDerivativeInTangentSpace)
    GetCalculateValueAndDerivativeInTangentSpace = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_GetCalculateValueAndDerivativeInTangentSpace)
    CalculateValueAndDerivativeInTangentSpaceOn = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_CalculateValueAndDerivativeInTangentSpaceOn)
    CalculateValueAndDerivativeInTangentSpaceOff = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_CalculateValueAndDerivativeInTangentSpaceOff)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_cast)

# Register itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass)
itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass_cast


def itkEuclideanDistancePointSetToPointSetMetricv4PSD2_New():
    return itkEuclideanDistancePointSetToPointSetMetricv4PSD2.New()

class itkEuclideanDistancePointSetToPointSetMetricv4PSD2(itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass):
    r"""


    Computes the Euclidan distance metric between two point sets.

    Given two point sets the Euclidean distance metric (i.e. ICP) is
    defined to be the aggregate of all shortest distances between all
    possible pairings of points between the two sets.

    We only have to handle the individual point case as the parent class
    handles the aggregation.

    Reference: PJ Besl and ND McKay, "A Method for Registration of 3-D
    Shapes", IEEE PAMI, Vol 14, No. 2, February 1992 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Clone)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_GetLocalNeighborhoodValueAndDerivative)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSD2
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_cast)

    def New(*args, **kargs):
        """New() -> itkEuclideanDistancePointSetToPointSetMetricv4PSD2

        Create a new object of the class itkEuclideanDistancePointSetToPointSetMetricv4PSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEuclideanDistancePointSetToPointSetMetricv4PSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEuclideanDistancePointSetToPointSetMetricv4PSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEuclideanDistancePointSetToPointSetMetricv4PSD2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEuclideanDistancePointSetToPointSetMetricv4PSD2 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSD2)
itkEuclideanDistancePointSetToPointSetMetricv4PSD2___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2___New_orig__
itkEuclideanDistancePointSetToPointSetMetricv4PSD2_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_cast


def itkEuclideanDistancePointSetToPointSetMetricv4PSD3_New():
    return itkEuclideanDistancePointSetToPointSetMetricv4PSD3.New()

class itkEuclideanDistancePointSetToPointSetMetricv4PSD3(itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass):
    r"""


    Computes the Euclidan distance metric between two point sets.

    Given two point sets the Euclidean distance metric (i.e. ICP) is
    defined to be the aggregate of all shortest distances between all
    possible pairings of points between the two sets.

    We only have to handle the individual point case as the parent class
    handles the aggregation.

    Reference: PJ Besl and ND McKay, "A Method for Registration of 3-D
    Shapes", IEEE PAMI, Vol 14, No. 2, February 1992 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Clone)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_GetLocalNeighborhoodValueAndDerivative)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSD3
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_cast)

    def New(*args, **kargs):
        """New() -> itkEuclideanDistancePointSetToPointSetMetricv4PSD3

        Create a new object of the class itkEuclideanDistancePointSetToPointSetMetricv4PSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEuclideanDistancePointSetToPointSetMetricv4PSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEuclideanDistancePointSetToPointSetMetricv4PSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEuclideanDistancePointSetToPointSetMetricv4PSD3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEuclideanDistancePointSetToPointSetMetricv4PSD3 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSD3)
itkEuclideanDistancePointSetToPointSetMetricv4PSD3___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3___New_orig__
itkEuclideanDistancePointSetToPointSetMetricv4PSD3_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_cast


def itkEuclideanDistancePointSetToPointSetMetricv4PSD4_New():
    return itkEuclideanDistancePointSetToPointSetMetricv4PSD4.New()

class itkEuclideanDistancePointSetToPointSetMetricv4PSD4(itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass):
    r"""


    Computes the Euclidan distance metric between two point sets.

    Given two point sets the Euclidean distance metric (i.e. ICP) is
    defined to be the aggregate of all shortest distances between all
    possible pairings of points between the two sets.

    We only have to handle the individual point case as the parent class
    handles the aggregation.

    Reference: PJ Besl and ND McKay, "A Method for Registration of 3-D
    Shapes", IEEE PAMI, Vol 14, No. 2, February 1992 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Clone)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_GetLocalNeighborhoodValueAndDerivative)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSD4
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_cast)

    def New(*args, **kargs):
        """New() -> itkEuclideanDistancePointSetToPointSetMetricv4PSD4

        Create a new object of the class itkEuclideanDistancePointSetToPointSetMetricv4PSD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEuclideanDistancePointSetToPointSetMetricv4PSD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEuclideanDistancePointSetToPointSetMetricv4PSD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEuclideanDistancePointSetToPointSetMetricv4PSD4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEuclideanDistancePointSetToPointSetMetricv4PSD4 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSD4)
itkEuclideanDistancePointSetToPointSetMetricv4PSD4___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4___New_orig__
itkEuclideanDistancePointSetToPointSetMetricv4PSD4_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_cast


def itkEuclideanDistancePointSetToPointSetMetricv4PSF2_New():
    return itkEuclideanDistancePointSetToPointSetMetricv4PSF2.New()

class itkEuclideanDistancePointSetToPointSetMetricv4PSF2(itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass):
    r"""


    Computes the Euclidan distance metric between two point sets.

    Given two point sets the Euclidean distance metric (i.e. ICP) is
    defined to be the aggregate of all shortest distances between all
    possible pairings of points between the two sets.

    We only have to handle the individual point case as the parent class
    handles the aggregation.

    Reference: PJ Besl and ND McKay, "A Method for Registration of 3-D
    Shapes", IEEE PAMI, Vol 14, No. 2, February 1992 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Clone)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_GetLocalNeighborhoodValueAndDerivative)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSF2
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_cast)

    def New(*args, **kargs):
        """New() -> itkEuclideanDistancePointSetToPointSetMetricv4PSF2

        Create a new object of the class itkEuclideanDistancePointSetToPointSetMetricv4PSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEuclideanDistancePointSetToPointSetMetricv4PSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEuclideanDistancePointSetToPointSetMetricv4PSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEuclideanDistancePointSetToPointSetMetricv4PSF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEuclideanDistancePointSetToPointSetMetricv4PSF2 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSF2)
itkEuclideanDistancePointSetToPointSetMetricv4PSF2___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2___New_orig__
itkEuclideanDistancePointSetToPointSetMetricv4PSF2_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_cast


def itkEuclideanDistancePointSetToPointSetMetricv4PSF3_New():
    return itkEuclideanDistancePointSetToPointSetMetricv4PSF3.New()

class itkEuclideanDistancePointSetToPointSetMetricv4PSF3(itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass):
    r"""


    Computes the Euclidan distance metric between two point sets.

    Given two point sets the Euclidean distance metric (i.e. ICP) is
    defined to be the aggregate of all shortest distances between all
    possible pairings of points between the two sets.

    We only have to handle the individual point case as the parent class
    handles the aggregation.

    Reference: PJ Besl and ND McKay, "A Method for Registration of 3-D
    Shapes", IEEE PAMI, Vol 14, No. 2, February 1992 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Clone)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_GetLocalNeighborhoodValueAndDerivative)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSF3
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_cast)

    def New(*args, **kargs):
        """New() -> itkEuclideanDistancePointSetToPointSetMetricv4PSF3

        Create a new object of the class itkEuclideanDistancePointSetToPointSetMetricv4PSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEuclideanDistancePointSetToPointSetMetricv4PSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEuclideanDistancePointSetToPointSetMetricv4PSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEuclideanDistancePointSetToPointSetMetricv4PSF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEuclideanDistancePointSetToPointSetMetricv4PSF3 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSF3)
itkEuclideanDistancePointSetToPointSetMetricv4PSF3___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3___New_orig__
itkEuclideanDistancePointSetToPointSetMetricv4PSF3_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_cast


def itkEuclideanDistancePointSetToPointSetMetricv4PSF4_New():
    return itkEuclideanDistancePointSetToPointSetMetricv4PSF4.New()

class itkEuclideanDistancePointSetToPointSetMetricv4PSF4(itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass):
    r"""


    Computes the Euclidan distance metric between two point sets.

    Given two point sets the Euclidean distance metric (i.e. ICP) is
    defined to be the aggregate of all shortest distances between all
    possible pairings of points between the two sets.

    We only have to handle the individual point case as the parent class
    handles the aggregation.

    Reference: PJ Besl and ND McKay, "A Method for Registration of 3-D
    Shapes", IEEE PAMI, Vol 14, No. 2, February 1992 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Clone)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_GetLocalNeighborhoodValueAndDerivative)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSF4
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_cast)

    def New(*args, **kargs):
        """New() -> itkEuclideanDistancePointSetToPointSetMetricv4PSF4

        Create a new object of the class itkEuclideanDistancePointSetToPointSetMetricv4PSF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEuclideanDistancePointSetToPointSetMetricv4PSF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEuclideanDistancePointSetToPointSetMetricv4PSF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEuclideanDistancePointSetToPointSetMetricv4PSF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEuclideanDistancePointSetToPointSetMetricv4PSF4 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSF4)
itkEuclideanDistancePointSetToPointSetMetricv4PSF4___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4___New_orig__
itkEuclideanDistancePointSetToPointSetMetricv4PSF4_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_cast


def itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_New():
    return itkEuclideanDistancePointSetToPointSetMetricv4PSSS2.New()

class itkEuclideanDistancePointSetToPointSetMetricv4PSSS2(itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass):
    r"""


    Computes the Euclidan distance metric between two point sets.

    Given two point sets the Euclidean distance metric (i.e. ICP) is
    defined to be the aggregate of all shortest distances between all
    possible pairings of points between the two sets.

    We only have to handle the individual point case as the parent class
    handles the aggregation.

    Reference: PJ Besl and ND McKay, "A Method for Registration of 3-D
    Shapes", IEEE PAMI, Vol 14, No. 2, February 1992 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Clone)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_GetLocalNeighborhoodValueAndDerivative)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSSS2
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_cast)

    def New(*args, **kargs):
        """New() -> itkEuclideanDistancePointSetToPointSetMetricv4PSSS2

        Create a new object of the class itkEuclideanDistancePointSetToPointSetMetricv4PSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEuclideanDistancePointSetToPointSetMetricv4PSSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEuclideanDistancePointSetToPointSetMetricv4PSSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEuclideanDistancePointSetToPointSetMetricv4PSSS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEuclideanDistancePointSetToPointSetMetricv4PSSS2 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSSS2)
itkEuclideanDistancePointSetToPointSetMetricv4PSSS2___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2___New_orig__
itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_cast


def itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_New():
    return itkEuclideanDistancePointSetToPointSetMetricv4PSSS3.New()

class itkEuclideanDistancePointSetToPointSetMetricv4PSSS3(itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass):
    r"""


    Computes the Euclidan distance metric between two point sets.

    Given two point sets the Euclidean distance metric (i.e. ICP) is
    defined to be the aggregate of all shortest distances between all
    possible pairings of points between the two sets.

    We only have to handle the individual point case as the parent class
    handles the aggregation.

    Reference: PJ Besl and ND McKay, "A Method for Registration of 3-D
    Shapes", IEEE PAMI, Vol 14, No. 2, February 1992 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Clone)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_GetLocalNeighborhoodValueAndDerivative)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSSS3
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_cast)

    def New(*args, **kargs):
        """New() -> itkEuclideanDistancePointSetToPointSetMetricv4PSSS3

        Create a new object of the class itkEuclideanDistancePointSetToPointSetMetricv4PSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEuclideanDistancePointSetToPointSetMetricv4PSSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEuclideanDistancePointSetToPointSetMetricv4PSSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEuclideanDistancePointSetToPointSetMetricv4PSSS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEuclideanDistancePointSetToPointSetMetricv4PSSS3 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSSS3)
itkEuclideanDistancePointSetToPointSetMetricv4PSSS3___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3___New_orig__
itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_cast


def itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_New():
    return itkEuclideanDistancePointSetToPointSetMetricv4PSSS4.New()

class itkEuclideanDistancePointSetToPointSetMetricv4PSSS4(itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass):
    r"""


    Computes the Euclidan distance metric between two point sets.

    Given two point sets the Euclidean distance metric (i.e. ICP) is
    defined to be the aggregate of all shortest distances between all
    possible pairings of points between the two sets.

    We only have to handle the individual point case as the parent class
    handles the aggregation.

    Reference: PJ Besl and ND McKay, "A Method for Registration of 3-D
    Shapes", IEEE PAMI, Vol 14, No. 2, February 1992 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Clone)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_GetLocalNeighborhoodValueAndDerivative)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSSS4
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_cast)

    def New(*args, **kargs):
        """New() -> itkEuclideanDistancePointSetToPointSetMetricv4PSSS4

        Create a new object of the class itkEuclideanDistancePointSetToPointSetMetricv4PSSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEuclideanDistancePointSetToPointSetMetricv4PSSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEuclideanDistancePointSetToPointSetMetricv4PSSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEuclideanDistancePointSetToPointSetMetricv4PSSS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEuclideanDistancePointSetToPointSetMetricv4PSSS4 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSSS4)
itkEuclideanDistancePointSetToPointSetMetricv4PSSS4___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4___New_orig__
itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_cast


def itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_New():
    return itkEuclideanDistancePointSetToPointSetMetricv4PSUC2.New()

class itkEuclideanDistancePointSetToPointSetMetricv4PSUC2(itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass):
    r"""


    Computes the Euclidan distance metric between two point sets.

    Given two point sets the Euclidean distance metric (i.e. ICP) is
    defined to be the aggregate of all shortest distances between all
    possible pairings of points between the two sets.

    We only have to handle the individual point case as the parent class
    handles the aggregation.

    Reference: PJ Besl and ND McKay, "A Method for Registration of 3-D
    Shapes", IEEE PAMI, Vol 14, No. 2, February 1992 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Clone)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_GetLocalNeighborhoodValueAndDerivative)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSUC2
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_cast)

    def New(*args, **kargs):
        """New() -> itkEuclideanDistancePointSetToPointSetMetricv4PSUC2

        Create a new object of the class itkEuclideanDistancePointSetToPointSetMetricv4PSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEuclideanDistancePointSetToPointSetMetricv4PSUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEuclideanDistancePointSetToPointSetMetricv4PSUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEuclideanDistancePointSetToPointSetMetricv4PSUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEuclideanDistancePointSetToPointSetMetricv4PSUC2 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSUC2)
itkEuclideanDistancePointSetToPointSetMetricv4PSUC2___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2___New_orig__
itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_cast


def itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_New():
    return itkEuclideanDistancePointSetToPointSetMetricv4PSUC3.New()

class itkEuclideanDistancePointSetToPointSetMetricv4PSUC3(itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass):
    r"""


    Computes the Euclidan distance metric between two point sets.

    Given two point sets the Euclidean distance metric (i.e. ICP) is
    defined to be the aggregate of all shortest distances between all
    possible pairings of points between the two sets.

    We only have to handle the individual point case as the parent class
    handles the aggregation.

    Reference: PJ Besl and ND McKay, "A Method for Registration of 3-D
    Shapes", IEEE PAMI, Vol 14, No. 2, February 1992 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Clone)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_GetLocalNeighborhoodValueAndDerivative)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSUC3
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_cast)

    def New(*args, **kargs):
        """New() -> itkEuclideanDistancePointSetToPointSetMetricv4PSUC3

        Create a new object of the class itkEuclideanDistancePointSetToPointSetMetricv4PSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEuclideanDistancePointSetToPointSetMetricv4PSUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEuclideanDistancePointSetToPointSetMetricv4PSUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEuclideanDistancePointSetToPointSetMetricv4PSUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEuclideanDistancePointSetToPointSetMetricv4PSUC3 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSUC3)
itkEuclideanDistancePointSetToPointSetMetricv4PSUC3___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3___New_orig__
itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_cast


def itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_New():
    return itkEuclideanDistancePointSetToPointSetMetricv4PSUC4.New()

class itkEuclideanDistancePointSetToPointSetMetricv4PSUC4(itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass):
    r"""


    Computes the Euclidan distance metric between two point sets.

    Given two point sets the Euclidean distance metric (i.e. ICP) is
    defined to be the aggregate of all shortest distances between all
    possible pairings of points between the two sets.

    We only have to handle the individual point case as the parent class
    handles the aggregation.

    Reference: PJ Besl and ND McKay, "A Method for Registration of 3-D
    Shapes", IEEE PAMI, Vol 14, No. 2, February 1992 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Clone)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_GetLocalNeighborhoodValueAndDerivative)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSUC4
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_cast)

    def New(*args, **kargs):
        """New() -> itkEuclideanDistancePointSetToPointSetMetricv4PSUC4

        Create a new object of the class itkEuclideanDistancePointSetToPointSetMetricv4PSUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEuclideanDistancePointSetToPointSetMetricv4PSUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEuclideanDistancePointSetToPointSetMetricv4PSUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEuclideanDistancePointSetToPointSetMetricv4PSUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEuclideanDistancePointSetToPointSetMetricv4PSUC4 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSUC4)
itkEuclideanDistancePointSetToPointSetMetricv4PSUC4___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4___New_orig__
itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_cast


def itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_New():
    return itkEuclideanDistancePointSetToPointSetMetricv4PSUS2.New()

class itkEuclideanDistancePointSetToPointSetMetricv4PSUS2(itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass):
    r"""


    Computes the Euclidan distance metric between two point sets.

    Given two point sets the Euclidean distance metric (i.e. ICP) is
    defined to be the aggregate of all shortest distances between all
    possible pairings of points between the two sets.

    We only have to handle the individual point case as the parent class
    handles the aggregation.

    Reference: PJ Besl and ND McKay, "A Method for Registration of 3-D
    Shapes", IEEE PAMI, Vol 14, No. 2, February 1992 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Clone)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_GetLocalNeighborhoodValueAndDerivative)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSUS2
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_cast)

    def New(*args, **kargs):
        """New() -> itkEuclideanDistancePointSetToPointSetMetricv4PSUS2

        Create a new object of the class itkEuclideanDistancePointSetToPointSetMetricv4PSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEuclideanDistancePointSetToPointSetMetricv4PSUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEuclideanDistancePointSetToPointSetMetricv4PSUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEuclideanDistancePointSetToPointSetMetricv4PSUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEuclideanDistancePointSetToPointSetMetricv4PSUS2 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSUS2)
itkEuclideanDistancePointSetToPointSetMetricv4PSUS2___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2___New_orig__
itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_cast


def itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_New():
    return itkEuclideanDistancePointSetToPointSetMetricv4PSUS3.New()

class itkEuclideanDistancePointSetToPointSetMetricv4PSUS3(itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass):
    r"""


    Computes the Euclidan distance metric between two point sets.

    Given two point sets the Euclidean distance metric (i.e. ICP) is
    defined to be the aggregate of all shortest distances between all
    possible pairings of points between the two sets.

    We only have to handle the individual point case as the parent class
    handles the aggregation.

    Reference: PJ Besl and ND McKay, "A Method for Registration of 3-D
    Shapes", IEEE PAMI, Vol 14, No. 2, February 1992 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Clone)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_GetLocalNeighborhoodValueAndDerivative)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSUS3
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_cast)

    def New(*args, **kargs):
        """New() -> itkEuclideanDistancePointSetToPointSetMetricv4PSUS3

        Create a new object of the class itkEuclideanDistancePointSetToPointSetMetricv4PSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEuclideanDistancePointSetToPointSetMetricv4PSUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEuclideanDistancePointSetToPointSetMetricv4PSUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEuclideanDistancePointSetToPointSetMetricv4PSUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEuclideanDistancePointSetToPointSetMetricv4PSUS3 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSUS3)
itkEuclideanDistancePointSetToPointSetMetricv4PSUS3___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3___New_orig__
itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_cast


def itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_New():
    return itkEuclideanDistancePointSetToPointSetMetricv4PSUS4.New()

class itkEuclideanDistancePointSetToPointSetMetricv4PSUS4(itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass):
    r"""


    Computes the Euclidan distance metric between two point sets.

    Given two point sets the Euclidean distance metric (i.e. ICP) is
    defined to be the aggregate of all shortest distances between all
    possible pairings of points between the two sets.

    We only have to handle the individual point case as the parent class
    handles the aggregation.

    Reference: PJ Besl and ND McKay, "A Method for Registration of 3-D
    Shapes", IEEE PAMI, Vol 14, No. 2, February 1992 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Clone)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_GetLocalNeighborhoodValueAndDerivative)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkEuclideanDistancePointSetToPointSetMetricv4PSUS4
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_cast)

    def New(*args, **kargs):
        """New() -> itkEuclideanDistancePointSetToPointSetMetricv4PSUS4

        Create a new object of the class itkEuclideanDistancePointSetToPointSetMetricv4PSUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEuclideanDistancePointSetToPointSetMetricv4PSUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEuclideanDistancePointSetToPointSetMetricv4PSUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEuclideanDistancePointSetToPointSetMetricv4PSUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEuclideanDistancePointSetToPointSetMetricv4PSUS4 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_swigregister(itkEuclideanDistancePointSetToPointSetMetricv4PSUS4)
itkEuclideanDistancePointSetToPointSetMetricv4PSUS4___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4___New_orig__
itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass_cast


def itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2.New()

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_Clone)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD2_cast


def itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3.New()

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_Clone)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD3_cast


def itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4.New()

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_Clone)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSD4_cast


def itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2.New()

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_Clone)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF2_cast


def itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3.New()

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_Clone)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF3_cast


def itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4.New()

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_Clone)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSF4_cast


def itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2.New()

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_Clone)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS2_cast


def itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3.New()

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_Clone)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS3_cast


def itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4.New()

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_Clone)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSSS4_cast


def itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2.New()

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_Clone)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC2_cast


def itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3.New()

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_Clone)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC3_cast


def itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4.New()

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_Clone)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUC4_cast


def itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2.New()

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_Clone)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS2_cast


def itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3.New()

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_Clone)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS3_cast


def itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4.New()

class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_Clone)
    __swig_destroy__ = _itkEuclideanDistancePointSetToPointSetMetricPython.delete_itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4
    cast = _swig_new_static_method(_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4 in _itkEuclideanDistancePointSetToPointSetMetricPython:
_itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4)
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4___New_orig__ = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_cast = _itkEuclideanDistancePointSetToPointSetMetricPython.itkRegistrationParameterScalesFromPhysicalShiftEDPSTPSMPSUS4_cast



