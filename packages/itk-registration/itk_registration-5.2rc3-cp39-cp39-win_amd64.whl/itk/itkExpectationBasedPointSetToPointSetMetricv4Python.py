# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _ITKMetricsv4Python



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkExpectationBasedPointSetToPointSetMetricv4Python
else:
    import _itkExpectationBasedPointSetToPointSetMetricv4Python

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkExpectationBasedPointSetToPointSetMetricv4Python.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkExpectationBasedPointSetToPointSetMetricv4Python.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkEuclideanDistancePointSetToPointSetMetricPython
import itk.itkObjectToObjectMetricBasePython
import itk.itkOptimizerParametersPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkArrayPython
import itk.ITKCommonBasePython
import itk.itkSingleValuedCostFunctionv4Python
import itk.itkCostFunctionPython
import itk.itkObjectToObjectMetricPython
import itk.itkImagePython
import itk.itkPointPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkDisplacementFieldTransformPython
import itk.itkVariableLengthVectorPython
import itk.itkArray2DPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkOptimizerParameterScalesEstimatorPython
import itk.itkPointSetPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython

def itkExpectationBasedPointSetToPointSetMetricv4PSD2_New():
    return itkExpectationBasedPointSetToPointSetMetricv4PSD2.New()

class itkExpectationBasedPointSetToPointSetMetricv4PSD2(itk.itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD2_Superclass):
    r"""


    Computes an expectation-based metric between two point sets.

    This information-theoretic point set measure models each point set as
    a sum of Gaussians. To speed up computation, evaluation of the local
    value/derivative is done in a user-specified neighborhood using the
    k-d tree constructed in the superclass.

    Reference: Pluta J, Avants BB, Glynn S, Awate S, Gee JC, Detre JA,
    "Appearance and incomplete label matching for diffeomorphic template
    "based hippocampus segmentation", Hippocampus, 2009 Jun;
    19(6):565-71. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD2___New_orig__)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD2_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD2_GetLocalNeighborhoodValueAndDerivative)
    SetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD2_SetPointSetSigma)
    GetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD2_GetPointSetSigma)
    SetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD2_SetEvaluationKNeighborhood)
    GetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD2_GetEvaluationKNeighborhood)
    InternalClone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD2_InternalClone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkExpectationBasedPointSetToPointSetMetricv4PSD2
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD2_cast)

    def New(*args, **kargs):
        """New() -> itkExpectationBasedPointSetToPointSetMetricv4PSD2

        Create a new object of the class itkExpectationBasedPointSetToPointSetMetricv4PSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpectationBasedPointSetToPointSetMetricv4PSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpectationBasedPointSetToPointSetMetricv4PSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpectationBasedPointSetToPointSetMetricv4PSD2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpectationBasedPointSetToPointSetMetricv4PSD2 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD2_swigregister(itkExpectationBasedPointSetToPointSetMetricv4PSD2)
itkExpectationBasedPointSetToPointSetMetricv4PSD2___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD2___New_orig__
itkExpectationBasedPointSetToPointSetMetricv4PSD2_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD2_cast


def itkExpectationBasedPointSetToPointSetMetricv4PSD3_New():
    return itkExpectationBasedPointSetToPointSetMetricv4PSD3.New()

class itkExpectationBasedPointSetToPointSetMetricv4PSD3(itk.itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD3_Superclass):
    r"""


    Computes an expectation-based metric between two point sets.

    This information-theoretic point set measure models each point set as
    a sum of Gaussians. To speed up computation, evaluation of the local
    value/derivative is done in a user-specified neighborhood using the
    k-d tree constructed in the superclass.

    Reference: Pluta J, Avants BB, Glynn S, Awate S, Gee JC, Detre JA,
    "Appearance and incomplete label matching for diffeomorphic template
    "based hippocampus segmentation", Hippocampus, 2009 Jun;
    19(6):565-71. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD3___New_orig__)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD3_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD3_GetLocalNeighborhoodValueAndDerivative)
    SetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD3_SetPointSetSigma)
    GetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD3_GetPointSetSigma)
    SetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD3_SetEvaluationKNeighborhood)
    GetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD3_GetEvaluationKNeighborhood)
    InternalClone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD3_InternalClone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkExpectationBasedPointSetToPointSetMetricv4PSD3
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD3_cast)

    def New(*args, **kargs):
        """New() -> itkExpectationBasedPointSetToPointSetMetricv4PSD3

        Create a new object of the class itkExpectationBasedPointSetToPointSetMetricv4PSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpectationBasedPointSetToPointSetMetricv4PSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpectationBasedPointSetToPointSetMetricv4PSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpectationBasedPointSetToPointSetMetricv4PSD3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpectationBasedPointSetToPointSetMetricv4PSD3 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD3_swigregister(itkExpectationBasedPointSetToPointSetMetricv4PSD3)
itkExpectationBasedPointSetToPointSetMetricv4PSD3___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD3___New_orig__
itkExpectationBasedPointSetToPointSetMetricv4PSD3_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD3_cast


def itkExpectationBasedPointSetToPointSetMetricv4PSD4_New():
    return itkExpectationBasedPointSetToPointSetMetricv4PSD4.New()

class itkExpectationBasedPointSetToPointSetMetricv4PSD4(itk.itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSD4_Superclass):
    r"""


    Computes an expectation-based metric between two point sets.

    This information-theoretic point set measure models each point set as
    a sum of Gaussians. To speed up computation, evaluation of the local
    value/derivative is done in a user-specified neighborhood using the
    k-d tree constructed in the superclass.

    Reference: Pluta J, Avants BB, Glynn S, Awate S, Gee JC, Detre JA,
    "Appearance and incomplete label matching for diffeomorphic template
    "based hippocampus segmentation", Hippocampus, 2009 Jun;
    19(6):565-71. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD4___New_orig__)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD4_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD4_GetLocalNeighborhoodValueAndDerivative)
    SetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD4_SetPointSetSigma)
    GetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD4_GetPointSetSigma)
    SetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD4_SetEvaluationKNeighborhood)
    GetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD4_GetEvaluationKNeighborhood)
    InternalClone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD4_InternalClone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkExpectationBasedPointSetToPointSetMetricv4PSD4
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD4_cast)

    def New(*args, **kargs):
        """New() -> itkExpectationBasedPointSetToPointSetMetricv4PSD4

        Create a new object of the class itkExpectationBasedPointSetToPointSetMetricv4PSD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpectationBasedPointSetToPointSetMetricv4PSD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpectationBasedPointSetToPointSetMetricv4PSD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpectationBasedPointSetToPointSetMetricv4PSD4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpectationBasedPointSetToPointSetMetricv4PSD4 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD4_swigregister(itkExpectationBasedPointSetToPointSetMetricv4PSD4)
itkExpectationBasedPointSetToPointSetMetricv4PSD4___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD4___New_orig__
itkExpectationBasedPointSetToPointSetMetricv4PSD4_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSD4_cast


def itkExpectationBasedPointSetToPointSetMetricv4PSF2_New():
    return itkExpectationBasedPointSetToPointSetMetricv4PSF2.New()

class itkExpectationBasedPointSetToPointSetMetricv4PSF2(itk.itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF2_Superclass):
    r"""


    Computes an expectation-based metric between two point sets.

    This information-theoretic point set measure models each point set as
    a sum of Gaussians. To speed up computation, evaluation of the local
    value/derivative is done in a user-specified neighborhood using the
    k-d tree constructed in the superclass.

    Reference: Pluta J, Avants BB, Glynn S, Awate S, Gee JC, Detre JA,
    "Appearance and incomplete label matching for diffeomorphic template
    "based hippocampus segmentation", Hippocampus, 2009 Jun;
    19(6):565-71. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF2___New_orig__)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF2_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF2_GetLocalNeighborhoodValueAndDerivative)
    SetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF2_SetPointSetSigma)
    GetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF2_GetPointSetSigma)
    SetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF2_SetEvaluationKNeighborhood)
    GetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF2_GetEvaluationKNeighborhood)
    InternalClone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF2_InternalClone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkExpectationBasedPointSetToPointSetMetricv4PSF2
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF2_cast)

    def New(*args, **kargs):
        """New() -> itkExpectationBasedPointSetToPointSetMetricv4PSF2

        Create a new object of the class itkExpectationBasedPointSetToPointSetMetricv4PSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpectationBasedPointSetToPointSetMetricv4PSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpectationBasedPointSetToPointSetMetricv4PSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpectationBasedPointSetToPointSetMetricv4PSF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpectationBasedPointSetToPointSetMetricv4PSF2 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF2_swigregister(itkExpectationBasedPointSetToPointSetMetricv4PSF2)
itkExpectationBasedPointSetToPointSetMetricv4PSF2___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF2___New_orig__
itkExpectationBasedPointSetToPointSetMetricv4PSF2_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF2_cast


def itkExpectationBasedPointSetToPointSetMetricv4PSF3_New():
    return itkExpectationBasedPointSetToPointSetMetricv4PSF3.New()

class itkExpectationBasedPointSetToPointSetMetricv4PSF3(itk.itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF3_Superclass):
    r"""


    Computes an expectation-based metric between two point sets.

    This information-theoretic point set measure models each point set as
    a sum of Gaussians. To speed up computation, evaluation of the local
    value/derivative is done in a user-specified neighborhood using the
    k-d tree constructed in the superclass.

    Reference: Pluta J, Avants BB, Glynn S, Awate S, Gee JC, Detre JA,
    "Appearance and incomplete label matching for diffeomorphic template
    "based hippocampus segmentation", Hippocampus, 2009 Jun;
    19(6):565-71. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF3___New_orig__)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF3_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF3_GetLocalNeighborhoodValueAndDerivative)
    SetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF3_SetPointSetSigma)
    GetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF3_GetPointSetSigma)
    SetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF3_SetEvaluationKNeighborhood)
    GetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF3_GetEvaluationKNeighborhood)
    InternalClone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF3_InternalClone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkExpectationBasedPointSetToPointSetMetricv4PSF3
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF3_cast)

    def New(*args, **kargs):
        """New() -> itkExpectationBasedPointSetToPointSetMetricv4PSF3

        Create a new object of the class itkExpectationBasedPointSetToPointSetMetricv4PSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpectationBasedPointSetToPointSetMetricv4PSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpectationBasedPointSetToPointSetMetricv4PSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpectationBasedPointSetToPointSetMetricv4PSF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpectationBasedPointSetToPointSetMetricv4PSF3 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF3_swigregister(itkExpectationBasedPointSetToPointSetMetricv4PSF3)
itkExpectationBasedPointSetToPointSetMetricv4PSF3___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF3___New_orig__
itkExpectationBasedPointSetToPointSetMetricv4PSF3_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF3_cast


def itkExpectationBasedPointSetToPointSetMetricv4PSF4_New():
    return itkExpectationBasedPointSetToPointSetMetricv4PSF4.New()

class itkExpectationBasedPointSetToPointSetMetricv4PSF4(itk.itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSF4_Superclass):
    r"""


    Computes an expectation-based metric between two point sets.

    This information-theoretic point set measure models each point set as
    a sum of Gaussians. To speed up computation, evaluation of the local
    value/derivative is done in a user-specified neighborhood using the
    k-d tree constructed in the superclass.

    Reference: Pluta J, Avants BB, Glynn S, Awate S, Gee JC, Detre JA,
    "Appearance and incomplete label matching for diffeomorphic template
    "based hippocampus segmentation", Hippocampus, 2009 Jun;
    19(6):565-71. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF4___New_orig__)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF4_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF4_GetLocalNeighborhoodValueAndDerivative)
    SetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF4_SetPointSetSigma)
    GetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF4_GetPointSetSigma)
    SetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF4_SetEvaluationKNeighborhood)
    GetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF4_GetEvaluationKNeighborhood)
    InternalClone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF4_InternalClone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkExpectationBasedPointSetToPointSetMetricv4PSF4
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF4_cast)

    def New(*args, **kargs):
        """New() -> itkExpectationBasedPointSetToPointSetMetricv4PSF4

        Create a new object of the class itkExpectationBasedPointSetToPointSetMetricv4PSF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpectationBasedPointSetToPointSetMetricv4PSF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpectationBasedPointSetToPointSetMetricv4PSF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpectationBasedPointSetToPointSetMetricv4PSF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpectationBasedPointSetToPointSetMetricv4PSF4 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF4_swigregister(itkExpectationBasedPointSetToPointSetMetricv4PSF4)
itkExpectationBasedPointSetToPointSetMetricv4PSF4___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF4___New_orig__
itkExpectationBasedPointSetToPointSetMetricv4PSF4_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSF4_cast


def itkExpectationBasedPointSetToPointSetMetricv4PSSS2_New():
    return itkExpectationBasedPointSetToPointSetMetricv4PSSS2.New()

class itkExpectationBasedPointSetToPointSetMetricv4PSSS2(itk.itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass):
    r"""


    Computes an expectation-based metric between two point sets.

    This information-theoretic point set measure models each point set as
    a sum of Gaussians. To speed up computation, evaluation of the local
    value/derivative is done in a user-specified neighborhood using the
    k-d tree constructed in the superclass.

    Reference: Pluta J, Avants BB, Glynn S, Awate S, Gee JC, Detre JA,
    "Appearance and incomplete label matching for diffeomorphic template
    "based hippocampus segmentation", Hippocampus, 2009 Jun;
    19(6):565-71. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS2___New_orig__)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS2_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS2_GetLocalNeighborhoodValueAndDerivative)
    SetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS2_SetPointSetSigma)
    GetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS2_GetPointSetSigma)
    SetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS2_SetEvaluationKNeighborhood)
    GetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS2_GetEvaluationKNeighborhood)
    InternalClone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS2_InternalClone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkExpectationBasedPointSetToPointSetMetricv4PSSS2
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS2_cast)

    def New(*args, **kargs):
        """New() -> itkExpectationBasedPointSetToPointSetMetricv4PSSS2

        Create a new object of the class itkExpectationBasedPointSetToPointSetMetricv4PSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpectationBasedPointSetToPointSetMetricv4PSSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpectationBasedPointSetToPointSetMetricv4PSSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpectationBasedPointSetToPointSetMetricv4PSSS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpectationBasedPointSetToPointSetMetricv4PSSS2 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS2_swigregister(itkExpectationBasedPointSetToPointSetMetricv4PSSS2)
itkExpectationBasedPointSetToPointSetMetricv4PSSS2___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS2___New_orig__
itkExpectationBasedPointSetToPointSetMetricv4PSSS2_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS2_cast


def itkExpectationBasedPointSetToPointSetMetricv4PSSS3_New():
    return itkExpectationBasedPointSetToPointSetMetricv4PSSS3.New()

class itkExpectationBasedPointSetToPointSetMetricv4PSSS3(itk.itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass):
    r"""


    Computes an expectation-based metric between two point sets.

    This information-theoretic point set measure models each point set as
    a sum of Gaussians. To speed up computation, evaluation of the local
    value/derivative is done in a user-specified neighborhood using the
    k-d tree constructed in the superclass.

    Reference: Pluta J, Avants BB, Glynn S, Awate S, Gee JC, Detre JA,
    "Appearance and incomplete label matching for diffeomorphic template
    "based hippocampus segmentation", Hippocampus, 2009 Jun;
    19(6):565-71. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS3___New_orig__)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS3_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS3_GetLocalNeighborhoodValueAndDerivative)
    SetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS3_SetPointSetSigma)
    GetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS3_GetPointSetSigma)
    SetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS3_SetEvaluationKNeighborhood)
    GetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS3_GetEvaluationKNeighborhood)
    InternalClone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS3_InternalClone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkExpectationBasedPointSetToPointSetMetricv4PSSS3
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS3_cast)

    def New(*args, **kargs):
        """New() -> itkExpectationBasedPointSetToPointSetMetricv4PSSS3

        Create a new object of the class itkExpectationBasedPointSetToPointSetMetricv4PSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpectationBasedPointSetToPointSetMetricv4PSSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpectationBasedPointSetToPointSetMetricv4PSSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpectationBasedPointSetToPointSetMetricv4PSSS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpectationBasedPointSetToPointSetMetricv4PSSS3 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS3_swigregister(itkExpectationBasedPointSetToPointSetMetricv4PSSS3)
itkExpectationBasedPointSetToPointSetMetricv4PSSS3___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS3___New_orig__
itkExpectationBasedPointSetToPointSetMetricv4PSSS3_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS3_cast


def itkExpectationBasedPointSetToPointSetMetricv4PSSS4_New():
    return itkExpectationBasedPointSetToPointSetMetricv4PSSS4.New()

class itkExpectationBasedPointSetToPointSetMetricv4PSSS4(itk.itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS4_Superclass):
    r"""


    Computes an expectation-based metric between two point sets.

    This information-theoretic point set measure models each point set as
    a sum of Gaussians. To speed up computation, evaluation of the local
    value/derivative is done in a user-specified neighborhood using the
    k-d tree constructed in the superclass.

    Reference: Pluta J, Avants BB, Glynn S, Awate S, Gee JC, Detre JA,
    "Appearance and incomplete label matching for diffeomorphic template
    "based hippocampus segmentation", Hippocampus, 2009 Jun;
    19(6):565-71. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS4___New_orig__)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS4_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS4_GetLocalNeighborhoodValueAndDerivative)
    SetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS4_SetPointSetSigma)
    GetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS4_GetPointSetSigma)
    SetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS4_SetEvaluationKNeighborhood)
    GetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS4_GetEvaluationKNeighborhood)
    InternalClone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS4_InternalClone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkExpectationBasedPointSetToPointSetMetricv4PSSS4
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS4_cast)

    def New(*args, **kargs):
        """New() -> itkExpectationBasedPointSetToPointSetMetricv4PSSS4

        Create a new object of the class itkExpectationBasedPointSetToPointSetMetricv4PSSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpectationBasedPointSetToPointSetMetricv4PSSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpectationBasedPointSetToPointSetMetricv4PSSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpectationBasedPointSetToPointSetMetricv4PSSS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpectationBasedPointSetToPointSetMetricv4PSSS4 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS4_swigregister(itkExpectationBasedPointSetToPointSetMetricv4PSSS4)
itkExpectationBasedPointSetToPointSetMetricv4PSSS4___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS4___New_orig__
itkExpectationBasedPointSetToPointSetMetricv4PSSS4_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSSS4_cast


def itkExpectationBasedPointSetToPointSetMetricv4PSUC2_New():
    return itkExpectationBasedPointSetToPointSetMetricv4PSUC2.New()

class itkExpectationBasedPointSetToPointSetMetricv4PSUC2(itk.itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass):
    r"""


    Computes an expectation-based metric between two point sets.

    This information-theoretic point set measure models each point set as
    a sum of Gaussians. To speed up computation, evaluation of the local
    value/derivative is done in a user-specified neighborhood using the
    k-d tree constructed in the superclass.

    Reference: Pluta J, Avants BB, Glynn S, Awate S, Gee JC, Detre JA,
    "Appearance and incomplete label matching for diffeomorphic template
    "based hippocampus segmentation", Hippocampus, 2009 Jun;
    19(6):565-71. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC2___New_orig__)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC2_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC2_GetLocalNeighborhoodValueAndDerivative)
    SetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC2_SetPointSetSigma)
    GetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC2_GetPointSetSigma)
    SetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC2_SetEvaluationKNeighborhood)
    GetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC2_GetEvaluationKNeighborhood)
    InternalClone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC2_InternalClone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkExpectationBasedPointSetToPointSetMetricv4PSUC2
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC2_cast)

    def New(*args, **kargs):
        """New() -> itkExpectationBasedPointSetToPointSetMetricv4PSUC2

        Create a new object of the class itkExpectationBasedPointSetToPointSetMetricv4PSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpectationBasedPointSetToPointSetMetricv4PSUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpectationBasedPointSetToPointSetMetricv4PSUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpectationBasedPointSetToPointSetMetricv4PSUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpectationBasedPointSetToPointSetMetricv4PSUC2 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC2_swigregister(itkExpectationBasedPointSetToPointSetMetricv4PSUC2)
itkExpectationBasedPointSetToPointSetMetricv4PSUC2___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC2___New_orig__
itkExpectationBasedPointSetToPointSetMetricv4PSUC2_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC2_cast


def itkExpectationBasedPointSetToPointSetMetricv4PSUC3_New():
    return itkExpectationBasedPointSetToPointSetMetricv4PSUC3.New()

class itkExpectationBasedPointSetToPointSetMetricv4PSUC3(itk.itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass):
    r"""


    Computes an expectation-based metric between two point sets.

    This information-theoretic point set measure models each point set as
    a sum of Gaussians. To speed up computation, evaluation of the local
    value/derivative is done in a user-specified neighborhood using the
    k-d tree constructed in the superclass.

    Reference: Pluta J, Avants BB, Glynn S, Awate S, Gee JC, Detre JA,
    "Appearance and incomplete label matching for diffeomorphic template
    "based hippocampus segmentation", Hippocampus, 2009 Jun;
    19(6):565-71. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC3___New_orig__)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC3_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC3_GetLocalNeighborhoodValueAndDerivative)
    SetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC3_SetPointSetSigma)
    GetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC3_GetPointSetSigma)
    SetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC3_SetEvaluationKNeighborhood)
    GetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC3_GetEvaluationKNeighborhood)
    InternalClone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC3_InternalClone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkExpectationBasedPointSetToPointSetMetricv4PSUC3
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC3_cast)

    def New(*args, **kargs):
        """New() -> itkExpectationBasedPointSetToPointSetMetricv4PSUC3

        Create a new object of the class itkExpectationBasedPointSetToPointSetMetricv4PSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpectationBasedPointSetToPointSetMetricv4PSUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpectationBasedPointSetToPointSetMetricv4PSUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpectationBasedPointSetToPointSetMetricv4PSUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpectationBasedPointSetToPointSetMetricv4PSUC3 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC3_swigregister(itkExpectationBasedPointSetToPointSetMetricv4PSUC3)
itkExpectationBasedPointSetToPointSetMetricv4PSUC3___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC3___New_orig__
itkExpectationBasedPointSetToPointSetMetricv4PSUC3_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC3_cast


def itkExpectationBasedPointSetToPointSetMetricv4PSUC4_New():
    return itkExpectationBasedPointSetToPointSetMetricv4PSUC4.New()

class itkExpectationBasedPointSetToPointSetMetricv4PSUC4(itk.itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC4_Superclass):
    r"""


    Computes an expectation-based metric between two point sets.

    This information-theoretic point set measure models each point set as
    a sum of Gaussians. To speed up computation, evaluation of the local
    value/derivative is done in a user-specified neighborhood using the
    k-d tree constructed in the superclass.

    Reference: Pluta J, Avants BB, Glynn S, Awate S, Gee JC, Detre JA,
    "Appearance and incomplete label matching for diffeomorphic template
    "based hippocampus segmentation", Hippocampus, 2009 Jun;
    19(6):565-71. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC4___New_orig__)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC4_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC4_GetLocalNeighborhoodValueAndDerivative)
    SetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC4_SetPointSetSigma)
    GetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC4_GetPointSetSigma)
    SetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC4_SetEvaluationKNeighborhood)
    GetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC4_GetEvaluationKNeighborhood)
    InternalClone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC4_InternalClone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkExpectationBasedPointSetToPointSetMetricv4PSUC4
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC4_cast)

    def New(*args, **kargs):
        """New() -> itkExpectationBasedPointSetToPointSetMetricv4PSUC4

        Create a new object of the class itkExpectationBasedPointSetToPointSetMetricv4PSUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpectationBasedPointSetToPointSetMetricv4PSUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpectationBasedPointSetToPointSetMetricv4PSUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpectationBasedPointSetToPointSetMetricv4PSUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpectationBasedPointSetToPointSetMetricv4PSUC4 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC4_swigregister(itkExpectationBasedPointSetToPointSetMetricv4PSUC4)
itkExpectationBasedPointSetToPointSetMetricv4PSUC4___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC4___New_orig__
itkExpectationBasedPointSetToPointSetMetricv4PSUC4_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUC4_cast


def itkExpectationBasedPointSetToPointSetMetricv4PSUS2_New():
    return itkExpectationBasedPointSetToPointSetMetricv4PSUS2.New()

class itkExpectationBasedPointSetToPointSetMetricv4PSUS2(itk.itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass):
    r"""


    Computes an expectation-based metric between two point sets.

    This information-theoretic point set measure models each point set as
    a sum of Gaussians. To speed up computation, evaluation of the local
    value/derivative is done in a user-specified neighborhood using the
    k-d tree constructed in the superclass.

    Reference: Pluta J, Avants BB, Glynn S, Awate S, Gee JC, Detre JA,
    "Appearance and incomplete label matching for diffeomorphic template
    "based hippocampus segmentation", Hippocampus, 2009 Jun;
    19(6):565-71. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS2___New_orig__)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS2_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS2_GetLocalNeighborhoodValueAndDerivative)
    SetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS2_SetPointSetSigma)
    GetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS2_GetPointSetSigma)
    SetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS2_SetEvaluationKNeighborhood)
    GetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS2_GetEvaluationKNeighborhood)
    InternalClone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS2_InternalClone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkExpectationBasedPointSetToPointSetMetricv4PSUS2
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS2_cast)

    def New(*args, **kargs):
        """New() -> itkExpectationBasedPointSetToPointSetMetricv4PSUS2

        Create a new object of the class itkExpectationBasedPointSetToPointSetMetricv4PSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpectationBasedPointSetToPointSetMetricv4PSUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpectationBasedPointSetToPointSetMetricv4PSUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpectationBasedPointSetToPointSetMetricv4PSUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpectationBasedPointSetToPointSetMetricv4PSUS2 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS2_swigregister(itkExpectationBasedPointSetToPointSetMetricv4PSUS2)
itkExpectationBasedPointSetToPointSetMetricv4PSUS2___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS2___New_orig__
itkExpectationBasedPointSetToPointSetMetricv4PSUS2_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS2_cast


def itkExpectationBasedPointSetToPointSetMetricv4PSUS3_New():
    return itkExpectationBasedPointSetToPointSetMetricv4PSUS3.New()

class itkExpectationBasedPointSetToPointSetMetricv4PSUS3(itk.itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass):
    r"""


    Computes an expectation-based metric between two point sets.

    This information-theoretic point set measure models each point set as
    a sum of Gaussians. To speed up computation, evaluation of the local
    value/derivative is done in a user-specified neighborhood using the
    k-d tree constructed in the superclass.

    Reference: Pluta J, Avants BB, Glynn S, Awate S, Gee JC, Detre JA,
    "Appearance and incomplete label matching for diffeomorphic template
    "based hippocampus segmentation", Hippocampus, 2009 Jun;
    19(6):565-71. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS3___New_orig__)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS3_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS3_GetLocalNeighborhoodValueAndDerivative)
    SetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS3_SetPointSetSigma)
    GetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS3_GetPointSetSigma)
    SetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS3_SetEvaluationKNeighborhood)
    GetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS3_GetEvaluationKNeighborhood)
    InternalClone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS3_InternalClone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkExpectationBasedPointSetToPointSetMetricv4PSUS3
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS3_cast)

    def New(*args, **kargs):
        """New() -> itkExpectationBasedPointSetToPointSetMetricv4PSUS3

        Create a new object of the class itkExpectationBasedPointSetToPointSetMetricv4PSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpectationBasedPointSetToPointSetMetricv4PSUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpectationBasedPointSetToPointSetMetricv4PSUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpectationBasedPointSetToPointSetMetricv4PSUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpectationBasedPointSetToPointSetMetricv4PSUS3 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS3_swigregister(itkExpectationBasedPointSetToPointSetMetricv4PSUS3)
itkExpectationBasedPointSetToPointSetMetricv4PSUS3___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS3___New_orig__
itkExpectationBasedPointSetToPointSetMetricv4PSUS3_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS3_cast


def itkExpectationBasedPointSetToPointSetMetricv4PSUS4_New():
    return itkExpectationBasedPointSetToPointSetMetricv4PSUS4.New()

class itkExpectationBasedPointSetToPointSetMetricv4PSUS4(itk.itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS4_Superclass):
    r"""


    Computes an expectation-based metric between two point sets.

    This information-theoretic point set measure models each point set as
    a sum of Gaussians. To speed up computation, evaluation of the local
    value/derivative is done in a user-specified neighborhood using the
    k-d tree constructed in the superclass.

    Reference: Pluta J, Avants BB, Glynn S, Awate S, Gee JC, Detre JA,
    "Appearance and incomplete label matching for diffeomorphic template
    "based hippocampus segmentation", Hippocampus, 2009 Jun;
    19(6):565-71. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS4___New_orig__)
    GetLocalNeighborhoodValue = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS4_GetLocalNeighborhoodValue)
    GetLocalNeighborhoodValueAndDerivative = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS4_GetLocalNeighborhoodValueAndDerivative)
    SetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS4_SetPointSetSigma)
    GetPointSetSigma = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS4_GetPointSetSigma)
    SetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS4_SetEvaluationKNeighborhood)
    GetEvaluationKNeighborhood = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS4_GetEvaluationKNeighborhood)
    InternalClone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS4_InternalClone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkExpectationBasedPointSetToPointSetMetricv4PSUS4
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS4_cast)

    def New(*args, **kargs):
        """New() -> itkExpectationBasedPointSetToPointSetMetricv4PSUS4

        Create a new object of the class itkExpectationBasedPointSetToPointSetMetricv4PSUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpectationBasedPointSetToPointSetMetricv4PSUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpectationBasedPointSetToPointSetMetricv4PSUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpectationBasedPointSetToPointSetMetricv4PSUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpectationBasedPointSetToPointSetMetricv4PSUS4 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS4_swigregister(itkExpectationBasedPointSetToPointSetMetricv4PSUS4)
itkExpectationBasedPointSetToPointSetMetricv4PSUS4___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS4___New_orig__
itkExpectationBasedPointSetToPointSetMetricv4PSUS4_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkExpectationBasedPointSetToPointSetMetricv4PSUS4_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_cast)

# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass_cast


def itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2.New()

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2___New_orig__)
    Clone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_Clone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD2_cast


def itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3.New()

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3___New_orig__)
    Clone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_Clone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD3_cast


def itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4.New()

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4___New_orig__)
    Clone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_Clone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSD4_cast


def itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2.New()

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2___New_orig__)
    Clone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_Clone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF2_cast


def itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3.New()

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3___New_orig__)
    Clone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_Clone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF3_cast


def itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4.New()

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4___New_orig__)
    Clone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_Clone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSF4_cast


def itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2.New()

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2___New_orig__)
    Clone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_Clone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS2_cast


def itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3.New()

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3___New_orig__)
    Clone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_Clone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS3_cast


def itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4.New()

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4___New_orig__)
    Clone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_Clone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSSS4_cast


def itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2.New()

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_Clone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC2_cast


def itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3.New()

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_Clone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC3_cast


def itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4.New()

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_Clone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUC4_cast


def itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2.New()

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_Clone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS2_cast


def itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3.New()

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_Clone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS3_cast


def itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_New():
    return itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4.New()

class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Superclass):
    r"""


    Registration helper class for estimating scales of transform
    parameters a step sizes, from the maximum voxel shift in physical
    space caused by a parameter change. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_Clone)
    __swig_destroy__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4
    cast = _swig_new_static_method(_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4 in _itkExpectationBasedPointSetToPointSetMetricv4Python:
_itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_swigregister(itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4)
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4___New_orig__ = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_cast = _itkExpectationBasedPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftEBPSTPSMPSUS4_cast



