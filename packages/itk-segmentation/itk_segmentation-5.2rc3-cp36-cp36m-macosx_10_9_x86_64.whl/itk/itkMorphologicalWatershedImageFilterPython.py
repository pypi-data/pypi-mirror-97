# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _ITKWatershedsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMorphologicalWatershedImageFilterPython
else:
    import _itkMorphologicalWatershedImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMorphologicalWatershedImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMorphologicalWatershedImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_matrix_fixedPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython

def itkMorphologicalWatershedImageFilterID2ISS2_New():
    return itkMorphologicalWatershedImageFilterID2ISS2.New()

class itkMorphologicalWatershedImageFilterID2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterID2ISS2
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterID2ISS2

        Create a new object of the class itkMorphologicalWatershedImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterID2ISS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterID2ISS2 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_swigregister(itkMorphologicalWatershedImageFilterID2ISS2)
itkMorphologicalWatershedImageFilterID2ISS2___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2___New_orig__
itkMorphologicalWatershedImageFilterID2ISS2_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_cast


def itkMorphologicalWatershedImageFilterID2IUC2_New():
    return itkMorphologicalWatershedImageFilterID2IUC2.New()

class itkMorphologicalWatershedImageFilterID2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterID2IUC2
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterID2IUC2

        Create a new object of the class itkMorphologicalWatershedImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterID2IUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterID2IUC2 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_swigregister(itkMorphologicalWatershedImageFilterID2IUC2)
itkMorphologicalWatershedImageFilterID2IUC2___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2___New_orig__
itkMorphologicalWatershedImageFilterID2IUC2_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_cast


def itkMorphologicalWatershedImageFilterID2IUS2_New():
    return itkMorphologicalWatershedImageFilterID2IUS2.New()

class itkMorphologicalWatershedImageFilterID2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterID2IUS2
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterID2IUS2

        Create a new object of the class itkMorphologicalWatershedImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterID2IUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterID2IUS2 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_swigregister(itkMorphologicalWatershedImageFilterID2IUS2)
itkMorphologicalWatershedImageFilterID2IUS2___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2___New_orig__
itkMorphologicalWatershedImageFilterID2IUS2_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_cast


def itkMorphologicalWatershedImageFilterID3ISS3_New():
    return itkMorphologicalWatershedImageFilterID3ISS3.New()

class itkMorphologicalWatershedImageFilterID3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterID3ISS3
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterID3ISS3

        Create a new object of the class itkMorphologicalWatershedImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterID3ISS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterID3ISS3 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_swigregister(itkMorphologicalWatershedImageFilterID3ISS3)
itkMorphologicalWatershedImageFilterID3ISS3___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3___New_orig__
itkMorphologicalWatershedImageFilterID3ISS3_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_cast


def itkMorphologicalWatershedImageFilterID3IUC3_New():
    return itkMorphologicalWatershedImageFilterID3IUC3.New()

class itkMorphologicalWatershedImageFilterID3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterID3IUC3
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterID3IUC3

        Create a new object of the class itkMorphologicalWatershedImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterID3IUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterID3IUC3 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_swigregister(itkMorphologicalWatershedImageFilterID3IUC3)
itkMorphologicalWatershedImageFilterID3IUC3___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3___New_orig__
itkMorphologicalWatershedImageFilterID3IUC3_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_cast


def itkMorphologicalWatershedImageFilterID3IUS3_New():
    return itkMorphologicalWatershedImageFilterID3IUS3.New()

class itkMorphologicalWatershedImageFilterID3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterID3IUS3
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterID3IUS3

        Create a new object of the class itkMorphologicalWatershedImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterID3IUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterID3IUS3 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_swigregister(itkMorphologicalWatershedImageFilterID3IUS3)
itkMorphologicalWatershedImageFilterID3IUS3___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3___New_orig__
itkMorphologicalWatershedImageFilterID3IUS3_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_cast


def itkMorphologicalWatershedImageFilterID4ISS4_New():
    return itkMorphologicalWatershedImageFilterID4ISS4.New()

class itkMorphologicalWatershedImageFilterID4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ISS4):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4ISS4_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4ISS4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4ISS4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4ISS4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4ISS4_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4ISS4_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4ISS4_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4ISS4_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4ISS4_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4ISS4_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4ISS4_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterID4ISS4
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterID4ISS4

        Create a new object of the class itkMorphologicalWatershedImageFilterID4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterID4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterID4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterID4ISS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterID4ISS4 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4ISS4_swigregister(itkMorphologicalWatershedImageFilterID4ISS4)
itkMorphologicalWatershedImageFilterID4ISS4___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4ISS4___New_orig__
itkMorphologicalWatershedImageFilterID4ISS4_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4ISS4_cast


def itkMorphologicalWatershedImageFilterID4IUC4_New():
    return itkMorphologicalWatershedImageFilterID4IUC4.New()

class itkMorphologicalWatershedImageFilterID4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4IUC4):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUC4_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUC4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUC4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUC4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUC4_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUC4_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUC4_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUC4_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUC4_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUC4_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUC4_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterID4IUC4
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterID4IUC4

        Create a new object of the class itkMorphologicalWatershedImageFilterID4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterID4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterID4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterID4IUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterID4IUC4 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUC4_swigregister(itkMorphologicalWatershedImageFilterID4IUC4)
itkMorphologicalWatershedImageFilterID4IUC4___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUC4___New_orig__
itkMorphologicalWatershedImageFilterID4IUC4_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUC4_cast


def itkMorphologicalWatershedImageFilterID4IUS4_New():
    return itkMorphologicalWatershedImageFilterID4IUS4.New()

class itkMorphologicalWatershedImageFilterID4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4IUS4):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUS4_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUS4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUS4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUS4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUS4_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUS4_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUS4_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUS4_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUS4_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUS4_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUS4_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterID4IUS4
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterID4IUS4

        Create a new object of the class itkMorphologicalWatershedImageFilterID4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterID4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterID4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterID4IUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterID4IUS4 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUS4_swigregister(itkMorphologicalWatershedImageFilterID4IUS4)
itkMorphologicalWatershedImageFilterID4IUS4___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUS4___New_orig__
itkMorphologicalWatershedImageFilterID4IUS4_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID4IUS4_cast


def itkMorphologicalWatershedImageFilterIF2ISS2_New():
    return itkMorphologicalWatershedImageFilterIF2ISS2.New()

class itkMorphologicalWatershedImageFilterIF2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIF2ISS2

        Create a new object of the class itkMorphologicalWatershedImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIF2ISS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIF2ISS2 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_swigregister(itkMorphologicalWatershedImageFilterIF2ISS2)
itkMorphologicalWatershedImageFilterIF2ISS2___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2___New_orig__
itkMorphologicalWatershedImageFilterIF2ISS2_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_cast


def itkMorphologicalWatershedImageFilterIF2IUC2_New():
    return itkMorphologicalWatershedImageFilterIF2IUC2.New()

class itkMorphologicalWatershedImageFilterIF2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIF2IUC2

        Create a new object of the class itkMorphologicalWatershedImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIF2IUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIF2IUC2 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_swigregister(itkMorphologicalWatershedImageFilterIF2IUC2)
itkMorphologicalWatershedImageFilterIF2IUC2___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2___New_orig__
itkMorphologicalWatershedImageFilterIF2IUC2_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_cast


def itkMorphologicalWatershedImageFilterIF2IUS2_New():
    return itkMorphologicalWatershedImageFilterIF2IUS2.New()

class itkMorphologicalWatershedImageFilterIF2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIF2IUS2

        Create a new object of the class itkMorphologicalWatershedImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIF2IUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIF2IUS2 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_swigregister(itkMorphologicalWatershedImageFilterIF2IUS2)
itkMorphologicalWatershedImageFilterIF2IUS2___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2___New_orig__
itkMorphologicalWatershedImageFilterIF2IUS2_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_cast


def itkMorphologicalWatershedImageFilterIF3ISS3_New():
    return itkMorphologicalWatershedImageFilterIF3ISS3.New()

class itkMorphologicalWatershedImageFilterIF3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIF3ISS3

        Create a new object of the class itkMorphologicalWatershedImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIF3ISS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIF3ISS3 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_swigregister(itkMorphologicalWatershedImageFilterIF3ISS3)
itkMorphologicalWatershedImageFilterIF3ISS3___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3___New_orig__
itkMorphologicalWatershedImageFilterIF3ISS3_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_cast


def itkMorphologicalWatershedImageFilterIF3IUC3_New():
    return itkMorphologicalWatershedImageFilterIF3IUC3.New()

class itkMorphologicalWatershedImageFilterIF3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIF3IUC3

        Create a new object of the class itkMorphologicalWatershedImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIF3IUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIF3IUC3 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_swigregister(itkMorphologicalWatershedImageFilterIF3IUC3)
itkMorphologicalWatershedImageFilterIF3IUC3___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3___New_orig__
itkMorphologicalWatershedImageFilterIF3IUC3_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_cast


def itkMorphologicalWatershedImageFilterIF3IUS3_New():
    return itkMorphologicalWatershedImageFilterIF3IUS3.New()

class itkMorphologicalWatershedImageFilterIF3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIF3IUS3

        Create a new object of the class itkMorphologicalWatershedImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIF3IUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIF3IUS3 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_swigregister(itkMorphologicalWatershedImageFilterIF3IUS3)
itkMorphologicalWatershedImageFilterIF3IUS3___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3___New_orig__
itkMorphologicalWatershedImageFilterIF3IUS3_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_cast


def itkMorphologicalWatershedImageFilterIF4ISS4_New():
    return itkMorphologicalWatershedImageFilterIF4ISS4.New()

class itkMorphologicalWatershedImageFilterIF4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4ISS4):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4ISS4_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4ISS4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4ISS4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4ISS4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4ISS4_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4ISS4_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4ISS4_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4ISS4_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4ISS4_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4ISS4_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4ISS4_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIF4ISS4
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIF4ISS4

        Create a new object of the class itkMorphologicalWatershedImageFilterIF4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIF4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIF4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIF4ISS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIF4ISS4 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4ISS4_swigregister(itkMorphologicalWatershedImageFilterIF4ISS4)
itkMorphologicalWatershedImageFilterIF4ISS4___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4ISS4___New_orig__
itkMorphologicalWatershedImageFilterIF4ISS4_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4ISS4_cast


def itkMorphologicalWatershedImageFilterIF4IUC4_New():
    return itkMorphologicalWatershedImageFilterIF4IUC4.New()

class itkMorphologicalWatershedImageFilterIF4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IUC4):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUC4_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUC4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUC4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUC4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUC4_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUC4_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUC4_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUC4_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUC4_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUC4_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUC4_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIF4IUC4
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIF4IUC4

        Create a new object of the class itkMorphologicalWatershedImageFilterIF4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIF4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIF4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIF4IUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIF4IUC4 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUC4_swigregister(itkMorphologicalWatershedImageFilterIF4IUC4)
itkMorphologicalWatershedImageFilterIF4IUC4___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUC4___New_orig__
itkMorphologicalWatershedImageFilterIF4IUC4_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUC4_cast


def itkMorphologicalWatershedImageFilterIF4IUS4_New():
    return itkMorphologicalWatershedImageFilterIF4IUS4.New()

class itkMorphologicalWatershedImageFilterIF4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IUS4):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUS4_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUS4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUS4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUS4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUS4_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUS4_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUS4_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUS4_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUS4_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUS4_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUS4_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIF4IUS4
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIF4IUS4

        Create a new object of the class itkMorphologicalWatershedImageFilterIF4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIF4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIF4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIF4IUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIF4IUS4 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUS4_swigregister(itkMorphologicalWatershedImageFilterIF4IUS4)
itkMorphologicalWatershedImageFilterIF4IUS4___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUS4___New_orig__
itkMorphologicalWatershedImageFilterIF4IUS4_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF4IUS4_cast


def itkMorphologicalWatershedImageFilterISS2ISS2_New():
    return itkMorphologicalWatershedImageFilterISS2ISS2.New()

class itkMorphologicalWatershedImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterISS2ISS2

        Create a new object of the class itkMorphologicalWatershedImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterISS2ISS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterISS2ISS2 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_swigregister(itkMorphologicalWatershedImageFilterISS2ISS2)
itkMorphologicalWatershedImageFilterISS2ISS2___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2___New_orig__
itkMorphologicalWatershedImageFilterISS2ISS2_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_cast


def itkMorphologicalWatershedImageFilterISS2IUC2_New():
    return itkMorphologicalWatershedImageFilterISS2IUC2.New()

class itkMorphologicalWatershedImageFilterISS2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterISS2IUC2

        Create a new object of the class itkMorphologicalWatershedImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterISS2IUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterISS2IUC2 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_swigregister(itkMorphologicalWatershedImageFilterISS2IUC2)
itkMorphologicalWatershedImageFilterISS2IUC2___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2___New_orig__
itkMorphologicalWatershedImageFilterISS2IUC2_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_cast


def itkMorphologicalWatershedImageFilterISS2IUS2_New():
    return itkMorphologicalWatershedImageFilterISS2IUS2.New()

class itkMorphologicalWatershedImageFilterISS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterISS2IUS2

        Create a new object of the class itkMorphologicalWatershedImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterISS2IUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterISS2IUS2 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_swigregister(itkMorphologicalWatershedImageFilterISS2IUS2)
itkMorphologicalWatershedImageFilterISS2IUS2___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2___New_orig__
itkMorphologicalWatershedImageFilterISS2IUS2_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_cast


def itkMorphologicalWatershedImageFilterISS3ISS3_New():
    return itkMorphologicalWatershedImageFilterISS3ISS3.New()

class itkMorphologicalWatershedImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterISS3ISS3

        Create a new object of the class itkMorphologicalWatershedImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterISS3ISS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterISS3ISS3 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_swigregister(itkMorphologicalWatershedImageFilterISS3ISS3)
itkMorphologicalWatershedImageFilterISS3ISS3___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3___New_orig__
itkMorphologicalWatershedImageFilterISS3ISS3_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_cast


def itkMorphologicalWatershedImageFilterISS3IUC3_New():
    return itkMorphologicalWatershedImageFilterISS3IUC3.New()

class itkMorphologicalWatershedImageFilterISS3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterISS3IUC3

        Create a new object of the class itkMorphologicalWatershedImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterISS3IUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterISS3IUC3 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_swigregister(itkMorphologicalWatershedImageFilterISS3IUC3)
itkMorphologicalWatershedImageFilterISS3IUC3___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3___New_orig__
itkMorphologicalWatershedImageFilterISS3IUC3_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_cast


def itkMorphologicalWatershedImageFilterISS3IUS3_New():
    return itkMorphologicalWatershedImageFilterISS3IUS3.New()

class itkMorphologicalWatershedImageFilterISS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterISS3IUS3

        Create a new object of the class itkMorphologicalWatershedImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterISS3IUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterISS3IUS3 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_swigregister(itkMorphologicalWatershedImageFilterISS3IUS3)
itkMorphologicalWatershedImageFilterISS3IUS3___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3___New_orig__
itkMorphologicalWatershedImageFilterISS3IUS3_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_cast


def itkMorphologicalWatershedImageFilterISS4ISS4_New():
    return itkMorphologicalWatershedImageFilterISS4ISS4.New()

class itkMorphologicalWatershedImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4ISS4_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4ISS4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4ISS4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4ISS4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4ISS4_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4ISS4_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4ISS4_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4ISS4_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4ISS4_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4ISS4_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4ISS4_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterISS4ISS4
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterISS4ISS4

        Create a new object of the class itkMorphologicalWatershedImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterISS4ISS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterISS4ISS4 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4ISS4_swigregister(itkMorphologicalWatershedImageFilterISS4ISS4)
itkMorphologicalWatershedImageFilterISS4ISS4___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4ISS4___New_orig__
itkMorphologicalWatershedImageFilterISS4ISS4_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4ISS4_cast


def itkMorphologicalWatershedImageFilterISS4IUC4_New():
    return itkMorphologicalWatershedImageFilterISS4IUC4.New()

class itkMorphologicalWatershedImageFilterISS4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4IUC4):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUC4_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUC4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUC4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUC4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUC4_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUC4_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUC4_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUC4_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUC4_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUC4_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUC4_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterISS4IUC4
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterISS4IUC4

        Create a new object of the class itkMorphologicalWatershedImageFilterISS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterISS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterISS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterISS4IUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterISS4IUC4 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUC4_swigregister(itkMorphologicalWatershedImageFilterISS4IUC4)
itkMorphologicalWatershedImageFilterISS4IUC4___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUC4___New_orig__
itkMorphologicalWatershedImageFilterISS4IUC4_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUC4_cast


def itkMorphologicalWatershedImageFilterISS4IUS4_New():
    return itkMorphologicalWatershedImageFilterISS4IUS4.New()

class itkMorphologicalWatershedImageFilterISS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4IUS4):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUS4_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUS4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUS4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUS4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUS4_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUS4_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUS4_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUS4_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUS4_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUS4_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUS4_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterISS4IUS4
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterISS4IUS4

        Create a new object of the class itkMorphologicalWatershedImageFilterISS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterISS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterISS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterISS4IUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterISS4IUS4 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUS4_swigregister(itkMorphologicalWatershedImageFilterISS4IUS4)
itkMorphologicalWatershedImageFilterISS4IUS4___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUS4___New_orig__
itkMorphologicalWatershedImageFilterISS4IUS4_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS4IUS4_cast


def itkMorphologicalWatershedImageFilterIUC2ISS2_New():
    return itkMorphologicalWatershedImageFilterIUC2ISS2.New()

class itkMorphologicalWatershedImageFilterIUC2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUC2ISS2

        Create a new object of the class itkMorphologicalWatershedImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUC2ISS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUC2ISS2 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_swigregister(itkMorphologicalWatershedImageFilterIUC2ISS2)
itkMorphologicalWatershedImageFilterIUC2ISS2___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2___New_orig__
itkMorphologicalWatershedImageFilterIUC2ISS2_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_cast


def itkMorphologicalWatershedImageFilterIUC2IUC2_New():
    return itkMorphologicalWatershedImageFilterIUC2IUC2.New()

class itkMorphologicalWatershedImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUC2IUC2

        Create a new object of the class itkMorphologicalWatershedImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUC2IUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUC2IUC2 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_swigregister(itkMorphologicalWatershedImageFilterIUC2IUC2)
itkMorphologicalWatershedImageFilterIUC2IUC2___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2___New_orig__
itkMorphologicalWatershedImageFilterIUC2IUC2_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_cast


def itkMorphologicalWatershedImageFilterIUC2IUS2_New():
    return itkMorphologicalWatershedImageFilterIUC2IUS2.New()

class itkMorphologicalWatershedImageFilterIUC2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUC2IUS2

        Create a new object of the class itkMorphologicalWatershedImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUC2IUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUC2IUS2 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_swigregister(itkMorphologicalWatershedImageFilterIUC2IUS2)
itkMorphologicalWatershedImageFilterIUC2IUS2___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2___New_orig__
itkMorphologicalWatershedImageFilterIUC2IUS2_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_cast


def itkMorphologicalWatershedImageFilterIUC3ISS3_New():
    return itkMorphologicalWatershedImageFilterIUC3ISS3.New()

class itkMorphologicalWatershedImageFilterIUC3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUC3ISS3

        Create a new object of the class itkMorphologicalWatershedImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUC3ISS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUC3ISS3 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_swigregister(itkMorphologicalWatershedImageFilterIUC3ISS3)
itkMorphologicalWatershedImageFilterIUC3ISS3___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3___New_orig__
itkMorphologicalWatershedImageFilterIUC3ISS3_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_cast


def itkMorphologicalWatershedImageFilterIUC3IUC3_New():
    return itkMorphologicalWatershedImageFilterIUC3IUC3.New()

class itkMorphologicalWatershedImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUC3IUC3

        Create a new object of the class itkMorphologicalWatershedImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUC3IUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUC3IUC3 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_swigregister(itkMorphologicalWatershedImageFilterIUC3IUC3)
itkMorphologicalWatershedImageFilterIUC3IUC3___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3___New_orig__
itkMorphologicalWatershedImageFilterIUC3IUC3_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_cast


def itkMorphologicalWatershedImageFilterIUC3IUS3_New():
    return itkMorphologicalWatershedImageFilterIUC3IUS3.New()

class itkMorphologicalWatershedImageFilterIUC3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUC3IUS3

        Create a new object of the class itkMorphologicalWatershedImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUC3IUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUC3IUS3 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_swigregister(itkMorphologicalWatershedImageFilterIUC3IUS3)
itkMorphologicalWatershedImageFilterIUC3IUS3___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3___New_orig__
itkMorphologicalWatershedImageFilterIUC3IUS3_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_cast


def itkMorphologicalWatershedImageFilterIUC4ISS4_New():
    return itkMorphologicalWatershedImageFilterIUC4ISS4.New()

class itkMorphologicalWatershedImageFilterIUC4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISS4):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4ISS4_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4ISS4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4ISS4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4ISS4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4ISS4_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4ISS4_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4ISS4_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4ISS4_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4ISS4_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4ISS4_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4ISS4_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUC4ISS4
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUC4ISS4

        Create a new object of the class itkMorphologicalWatershedImageFilterIUC4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUC4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUC4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUC4ISS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUC4ISS4 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4ISS4_swigregister(itkMorphologicalWatershedImageFilterIUC4ISS4)
itkMorphologicalWatershedImageFilterIUC4ISS4___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4ISS4___New_orig__
itkMorphologicalWatershedImageFilterIUC4ISS4_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4ISS4_cast


def itkMorphologicalWatershedImageFilterIUC4IUC4_New():
    return itkMorphologicalWatershedImageFilterIUC4IUC4.New()

class itkMorphologicalWatershedImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUC4_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUC4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUC4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUC4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUC4_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUC4_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUC4_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUC4_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUC4_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUC4_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUC4_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUC4IUC4
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUC4IUC4

        Create a new object of the class itkMorphologicalWatershedImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUC4IUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUC4IUC4 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUC4_swigregister(itkMorphologicalWatershedImageFilterIUC4IUC4)
itkMorphologicalWatershedImageFilterIUC4IUC4___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUC4___New_orig__
itkMorphologicalWatershedImageFilterIUC4IUC4_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUC4_cast


def itkMorphologicalWatershedImageFilterIUC4IUS4_New():
    return itkMorphologicalWatershedImageFilterIUC4IUS4.New()

class itkMorphologicalWatershedImageFilterIUC4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUS4):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUS4_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUS4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUS4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUS4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUS4_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUS4_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUS4_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUS4_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUS4_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUS4_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUS4_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUC4IUS4
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUC4IUS4

        Create a new object of the class itkMorphologicalWatershedImageFilterIUC4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUC4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUC4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUC4IUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUC4IUS4 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUS4_swigregister(itkMorphologicalWatershedImageFilterIUC4IUS4)
itkMorphologicalWatershedImageFilterIUC4IUS4___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUS4___New_orig__
itkMorphologicalWatershedImageFilterIUC4IUS4_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC4IUS4_cast


def itkMorphologicalWatershedImageFilterIUS2ISS2_New():
    return itkMorphologicalWatershedImageFilterIUS2ISS2.New()

class itkMorphologicalWatershedImageFilterIUS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUS2ISS2

        Create a new object of the class itkMorphologicalWatershedImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUS2ISS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUS2ISS2 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_swigregister(itkMorphologicalWatershedImageFilterIUS2ISS2)
itkMorphologicalWatershedImageFilterIUS2ISS2___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2___New_orig__
itkMorphologicalWatershedImageFilterIUS2ISS2_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_cast


def itkMorphologicalWatershedImageFilterIUS2IUC2_New():
    return itkMorphologicalWatershedImageFilterIUS2IUC2.New()

class itkMorphologicalWatershedImageFilterIUS2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUS2IUC2

        Create a new object of the class itkMorphologicalWatershedImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUS2IUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUS2IUC2 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_swigregister(itkMorphologicalWatershedImageFilterIUS2IUC2)
itkMorphologicalWatershedImageFilterIUS2IUC2___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2___New_orig__
itkMorphologicalWatershedImageFilterIUS2IUC2_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_cast


def itkMorphologicalWatershedImageFilterIUS2IUS2_New():
    return itkMorphologicalWatershedImageFilterIUS2IUS2.New()

class itkMorphologicalWatershedImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUS2IUS2

        Create a new object of the class itkMorphologicalWatershedImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUS2IUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUS2IUS2 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_swigregister(itkMorphologicalWatershedImageFilterIUS2IUS2)
itkMorphologicalWatershedImageFilterIUS2IUS2___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2___New_orig__
itkMorphologicalWatershedImageFilterIUS2IUS2_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_cast


def itkMorphologicalWatershedImageFilterIUS3ISS3_New():
    return itkMorphologicalWatershedImageFilterIUS3ISS3.New()

class itkMorphologicalWatershedImageFilterIUS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUS3ISS3

        Create a new object of the class itkMorphologicalWatershedImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUS3ISS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUS3ISS3 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_swigregister(itkMorphologicalWatershedImageFilterIUS3ISS3)
itkMorphologicalWatershedImageFilterIUS3ISS3___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3___New_orig__
itkMorphologicalWatershedImageFilterIUS3ISS3_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_cast


def itkMorphologicalWatershedImageFilterIUS3IUC3_New():
    return itkMorphologicalWatershedImageFilterIUS3IUC3.New()

class itkMorphologicalWatershedImageFilterIUS3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUS3IUC3

        Create a new object of the class itkMorphologicalWatershedImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUS3IUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUS3IUC3 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_swigregister(itkMorphologicalWatershedImageFilterIUS3IUC3)
itkMorphologicalWatershedImageFilterIUS3IUC3___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3___New_orig__
itkMorphologicalWatershedImageFilterIUS3IUC3_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_cast


def itkMorphologicalWatershedImageFilterIUS3IUS3_New():
    return itkMorphologicalWatershedImageFilterIUS3IUS3.New()

class itkMorphologicalWatershedImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUS3IUS3

        Create a new object of the class itkMorphologicalWatershedImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUS3IUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUS3IUS3 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_swigregister(itkMorphologicalWatershedImageFilterIUS3IUS3)
itkMorphologicalWatershedImageFilterIUS3IUS3___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3___New_orig__
itkMorphologicalWatershedImageFilterIUS3IUS3_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_cast


def itkMorphologicalWatershedImageFilterIUS4ISS4_New():
    return itkMorphologicalWatershedImageFilterIUS4ISS4.New()

class itkMorphologicalWatershedImageFilterIUS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISS4):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4ISS4_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4ISS4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4ISS4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4ISS4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4ISS4_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4ISS4_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4ISS4_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4ISS4_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4ISS4_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4ISS4_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4ISS4_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUS4ISS4
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUS4ISS4

        Create a new object of the class itkMorphologicalWatershedImageFilterIUS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUS4ISS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUS4ISS4 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4ISS4_swigregister(itkMorphologicalWatershedImageFilterIUS4ISS4)
itkMorphologicalWatershedImageFilterIUS4ISS4___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4ISS4___New_orig__
itkMorphologicalWatershedImageFilterIUS4ISS4_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4ISS4_cast


def itkMorphologicalWatershedImageFilterIUS4IUC4_New():
    return itkMorphologicalWatershedImageFilterIUS4IUC4.New()

class itkMorphologicalWatershedImageFilterIUS4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUC4):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUC4_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUC4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUC4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUC4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUC4_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUC4_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUC4_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUC4_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUC4_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUC4_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUC4_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUS4IUC4
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUS4IUC4

        Create a new object of the class itkMorphologicalWatershedImageFilterIUS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUS4IUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUS4IUC4 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUC4_swigregister(itkMorphologicalWatershedImageFilterIUS4IUC4)
itkMorphologicalWatershedImageFilterIUS4IUC4___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUC4___New_orig__
itkMorphologicalWatershedImageFilterIUS4IUC4_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUC4_cast


def itkMorphologicalWatershedImageFilterIUS4IUS4_New():
    return itkMorphologicalWatershedImageFilterIUS4IUS4.New()

class itkMorphologicalWatershedImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter
    example{Segmentation/Watersheds/MorphologicalWatershedSegmentation
    ,Morphological Watershed Segmentation} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUS4_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUS4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUS4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUS4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUS4_FullyConnectedOff)
    SetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUS4_SetMarkWatershedLine)
    GetMarkWatershedLine = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUS4_GetMarkWatershedLine)
    MarkWatershedLineOn = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUS4_MarkWatershedLineOn)
    MarkWatershedLineOff = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUS4_MarkWatershedLineOff)
    SetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUS4_SetLevel)
    GetLevel = _swig_new_instance_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUS4_GetLevel)
    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUS4IUS4
    cast = _swig_new_static_method(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUS4IUS4

        Create a new object of the class itkMorphologicalWatershedImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalWatershedImageFilterIUS4IUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalWatershedImageFilterIUS4IUS4 in _itkMorphologicalWatershedImageFilterPython:
_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUS4_swigregister(itkMorphologicalWatershedImageFilterIUS4IUS4)
itkMorphologicalWatershedImageFilterIUS4IUS4___New_orig__ = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUS4___New_orig__
itkMorphologicalWatershedImageFilterIUS4IUS4_cast = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS4IUS4_cast


from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def morphological_watershed_image_filter(*args, **kwargs):
    """Procedural interface for MorphologicalWatershedImageFilter"""
    import itk

    instance = itk.MorphologicalWatershedImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()


def morphological_watershed_image_filter_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    filter_class = itk.ITKWatersheds.MorphologicalWatershedImageFilter
    is_template = isinstance(filter_class, itkTemplate.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    morphological_watershed_image_filter.__doc__ = filter_object.__doc__
    morphological_watershed_image_filter.__doc__ += "\n args are input(s) to the filter.\n\n"
    morphological_watershed_image_filter.__doc__ += "\n Available keyword arguments:\n"
    if is_template:
        morphological_watershed_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        morphological_watershed_image_filter.__doc__ += "\n"
        morphological_watershed_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        morphological_watershed_image_filter.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )




