# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _ITKRegionGrowingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkConnectedThresholdImageFilterPython
else:
    import _itkConnectedThresholdImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkConnectedThresholdImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkConnectedThresholdImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkArrayPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageRegionPython
import itk.itkImagePython
import itk.itkPointPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
class itkConnectedThresholdImageFilterEnums(object):
    r"""Proxy of C++ itkConnectedThresholdImageFilterEnums class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Connectivity_FaceConnectivity = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterEnums_Connectivity_FaceConnectivity
    
    Connectivity_FullConnectivity = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterEnums_Connectivity_FullConnectivity
    

    def __init__(self, *args):
        r"""
        __init__(self) -> itkConnectedThresholdImageFilterEnums
        __init__(self, arg0) -> itkConnectedThresholdImageFilterEnums

        Parameters
        ----------
        arg0: itkConnectedThresholdImageFilterEnums const &

        """
        _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterEnums_swiginit(self, _itkConnectedThresholdImageFilterPython.new_itkConnectedThresholdImageFilterEnums(*args))
    __swig_destroy__ = _itkConnectedThresholdImageFilterPython.delete_itkConnectedThresholdImageFilterEnums

# Register itkConnectedThresholdImageFilterEnums in _itkConnectedThresholdImageFilterPython:
_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterEnums_swigregister(itkConnectedThresholdImageFilterEnums)


def itkConnectedThresholdImageFilterID2ID2_New():
    return itkConnectedThresholdImageFilterID2ID2.New()

class itkConnectedThresholdImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Label pixels that are connected to a seed and lie within a range of
    values.

    ConnectedThresholdImageFilter labels pixels with ReplaceValue that are
    connected to an initial Seed AND lie within a Lower and Upper
    threshold range.

    {Segmentation/RegionGrowing/ConnectedComponentsInImage,Connected
    Components In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_Clone)
    PrintSelf = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_PrintSelf)
    SetSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_SetSeed)
    AddSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_AddSeed)
    ClearSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_ClearSeeds)
    GetSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_GetSeeds)
    SetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_GetReplaceValue)
    SetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_SetUpper)
    SetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_SetLower)
    SetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_SetUpperInput)
    SetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_SetLowerInput)
    GetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_GetUpper)
    GetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_GetLower)
    GetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_GetUpperInput)
    GetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_GetLowerInput)
    OutputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_OutputEqualityComparableCheck
    
    InputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_SameDimensionCheck
    
    IntConvertibleToInputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_IntConvertibleToInputCheck
    
    OutputOStreamWritableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_OutputOStreamWritableCheck
    
    SetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_SetConnectivity)
    GetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_GetConnectivity)
    __swig_destroy__ = _itkConnectedThresholdImageFilterPython.delete_itkConnectedThresholdImageFilterID2ID2
    cast = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedThresholdImageFilterID2ID2

        Create a new object of the class itkConnectedThresholdImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedThresholdImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedThresholdImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedThresholdImageFilterID2ID2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedThresholdImageFilterID2ID2 in _itkConnectedThresholdImageFilterPython:
_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_swigregister(itkConnectedThresholdImageFilterID2ID2)
itkConnectedThresholdImageFilterID2ID2___New_orig__ = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2___New_orig__
itkConnectedThresholdImageFilterID2ID2_cast = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID2ID2_cast


def itkConnectedThresholdImageFilterID3ID3_New():
    return itkConnectedThresholdImageFilterID3ID3.New()

class itkConnectedThresholdImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    Label pixels that are connected to a seed and lie within a range of
    values.

    ConnectedThresholdImageFilter labels pixels with ReplaceValue that are
    connected to an initial Seed AND lie within a Lower and Upper
    threshold range.

    {Segmentation/RegionGrowing/ConnectedComponentsInImage,Connected
    Components In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_Clone)
    PrintSelf = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_PrintSelf)
    SetSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_SetSeed)
    AddSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_AddSeed)
    ClearSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_ClearSeeds)
    GetSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_GetSeeds)
    SetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_GetReplaceValue)
    SetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_SetUpper)
    SetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_SetLower)
    SetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_SetUpperInput)
    SetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_SetLowerInput)
    GetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_GetUpper)
    GetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_GetLower)
    GetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_GetUpperInput)
    GetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_GetLowerInput)
    OutputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_OutputEqualityComparableCheck
    
    InputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_SameDimensionCheck
    
    IntConvertibleToInputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_IntConvertibleToInputCheck
    
    OutputOStreamWritableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_OutputOStreamWritableCheck
    
    SetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_SetConnectivity)
    GetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_GetConnectivity)
    __swig_destroy__ = _itkConnectedThresholdImageFilterPython.delete_itkConnectedThresholdImageFilterID3ID3
    cast = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedThresholdImageFilterID3ID3

        Create a new object of the class itkConnectedThresholdImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedThresholdImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedThresholdImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedThresholdImageFilterID3ID3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedThresholdImageFilterID3ID3 in _itkConnectedThresholdImageFilterPython:
_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_swigregister(itkConnectedThresholdImageFilterID3ID3)
itkConnectedThresholdImageFilterID3ID3___New_orig__ = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3___New_orig__
itkConnectedThresholdImageFilterID3ID3_cast = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID3ID3_cast


def itkConnectedThresholdImageFilterID4ID4_New():
    return itkConnectedThresholdImageFilterID4ID4.New()

class itkConnectedThresholdImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""


    Label pixels that are connected to a seed and lie within a range of
    values.

    ConnectedThresholdImageFilter labels pixels with ReplaceValue that are
    connected to an initial Seed AND lie within a Lower and Upper
    threshold range.

    {Segmentation/RegionGrowing/ConnectedComponentsInImage,Connected
    Components In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_Clone)
    PrintSelf = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_PrintSelf)
    SetSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_SetSeed)
    AddSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_AddSeed)
    ClearSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_ClearSeeds)
    GetSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_GetSeeds)
    SetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_GetReplaceValue)
    SetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_SetUpper)
    SetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_SetLower)
    SetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_SetUpperInput)
    SetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_SetLowerInput)
    GetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_GetUpper)
    GetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_GetLower)
    GetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_GetUpperInput)
    GetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_GetLowerInput)
    OutputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_OutputEqualityComparableCheck
    
    InputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_SameDimensionCheck
    
    IntConvertibleToInputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_IntConvertibleToInputCheck
    
    OutputOStreamWritableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_OutputOStreamWritableCheck
    
    SetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_SetConnectivity)
    GetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_GetConnectivity)
    __swig_destroy__ = _itkConnectedThresholdImageFilterPython.delete_itkConnectedThresholdImageFilterID4ID4
    cast = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedThresholdImageFilterID4ID4

        Create a new object of the class itkConnectedThresholdImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedThresholdImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedThresholdImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedThresholdImageFilterID4ID4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedThresholdImageFilterID4ID4 in _itkConnectedThresholdImageFilterPython:
_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_swigregister(itkConnectedThresholdImageFilterID4ID4)
itkConnectedThresholdImageFilterID4ID4___New_orig__ = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4___New_orig__
itkConnectedThresholdImageFilterID4ID4_cast = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterID4ID4_cast


def itkConnectedThresholdImageFilterIF2IF2_New():
    return itkConnectedThresholdImageFilterIF2IF2.New()

class itkConnectedThresholdImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Label pixels that are connected to a seed and lie within a range of
    values.

    ConnectedThresholdImageFilter labels pixels with ReplaceValue that are
    connected to an initial Seed AND lie within a Lower and Upper
    threshold range.

    {Segmentation/RegionGrowing/ConnectedComponentsInImage,Connected
    Components In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_Clone)
    PrintSelf = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_PrintSelf)
    SetSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_SetSeed)
    AddSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_AddSeed)
    ClearSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_ClearSeeds)
    GetSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_GetSeeds)
    SetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_GetReplaceValue)
    SetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_SetUpper)
    SetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_SetLower)
    SetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_SetUpperInput)
    SetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_SetLowerInput)
    GetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_GetUpper)
    GetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_GetLower)
    GetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_GetUpperInput)
    GetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_GetLowerInput)
    OutputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_OutputEqualityComparableCheck
    
    InputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_SameDimensionCheck
    
    IntConvertibleToInputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_IntConvertibleToInputCheck
    
    OutputOStreamWritableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_OutputOStreamWritableCheck
    
    SetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_SetConnectivity)
    GetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_GetConnectivity)
    __swig_destroy__ = _itkConnectedThresholdImageFilterPython.delete_itkConnectedThresholdImageFilterIF2IF2
    cast = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedThresholdImageFilterIF2IF2

        Create a new object of the class itkConnectedThresholdImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedThresholdImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedThresholdImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedThresholdImageFilterIF2IF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedThresholdImageFilterIF2IF2 in _itkConnectedThresholdImageFilterPython:
_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_swigregister(itkConnectedThresholdImageFilterIF2IF2)
itkConnectedThresholdImageFilterIF2IF2___New_orig__ = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2___New_orig__
itkConnectedThresholdImageFilterIF2IF2_cast = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF2IF2_cast


def itkConnectedThresholdImageFilterIF3IF3_New():
    return itkConnectedThresholdImageFilterIF3IF3.New()

class itkConnectedThresholdImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    Label pixels that are connected to a seed and lie within a range of
    values.

    ConnectedThresholdImageFilter labels pixels with ReplaceValue that are
    connected to an initial Seed AND lie within a Lower and Upper
    threshold range.

    {Segmentation/RegionGrowing/ConnectedComponentsInImage,Connected
    Components In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_Clone)
    PrintSelf = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_PrintSelf)
    SetSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_SetSeed)
    AddSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_AddSeed)
    ClearSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_ClearSeeds)
    GetSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_GetSeeds)
    SetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_GetReplaceValue)
    SetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_SetUpper)
    SetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_SetLower)
    SetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_SetUpperInput)
    SetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_SetLowerInput)
    GetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_GetUpper)
    GetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_GetLower)
    GetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_GetUpperInput)
    GetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_GetLowerInput)
    OutputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_OutputEqualityComparableCheck
    
    InputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_SameDimensionCheck
    
    IntConvertibleToInputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_IntConvertibleToInputCheck
    
    OutputOStreamWritableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_OutputOStreamWritableCheck
    
    SetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_SetConnectivity)
    GetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_GetConnectivity)
    __swig_destroy__ = _itkConnectedThresholdImageFilterPython.delete_itkConnectedThresholdImageFilterIF3IF3
    cast = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedThresholdImageFilterIF3IF3

        Create a new object of the class itkConnectedThresholdImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedThresholdImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedThresholdImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedThresholdImageFilterIF3IF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedThresholdImageFilterIF3IF3 in _itkConnectedThresholdImageFilterPython:
_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_swigregister(itkConnectedThresholdImageFilterIF3IF3)
itkConnectedThresholdImageFilterIF3IF3___New_orig__ = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3___New_orig__
itkConnectedThresholdImageFilterIF3IF3_cast = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF3IF3_cast


def itkConnectedThresholdImageFilterIF4IF4_New():
    return itkConnectedThresholdImageFilterIF4IF4.New()

class itkConnectedThresholdImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""


    Label pixels that are connected to a seed and lie within a range of
    values.

    ConnectedThresholdImageFilter labels pixels with ReplaceValue that are
    connected to an initial Seed AND lie within a Lower and Upper
    threshold range.

    {Segmentation/RegionGrowing/ConnectedComponentsInImage,Connected
    Components In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_Clone)
    PrintSelf = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_PrintSelf)
    SetSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_SetSeed)
    AddSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_AddSeed)
    ClearSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_ClearSeeds)
    GetSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_GetSeeds)
    SetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_GetReplaceValue)
    SetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_SetUpper)
    SetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_SetLower)
    SetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_SetUpperInput)
    SetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_SetLowerInput)
    GetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_GetUpper)
    GetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_GetLower)
    GetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_GetUpperInput)
    GetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_GetLowerInput)
    OutputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_OutputEqualityComparableCheck
    
    InputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_SameDimensionCheck
    
    IntConvertibleToInputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_IntConvertibleToInputCheck
    
    OutputOStreamWritableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_OutputOStreamWritableCheck
    
    SetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_SetConnectivity)
    GetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_GetConnectivity)
    __swig_destroy__ = _itkConnectedThresholdImageFilterPython.delete_itkConnectedThresholdImageFilterIF4IF4
    cast = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedThresholdImageFilterIF4IF4

        Create a new object of the class itkConnectedThresholdImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedThresholdImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedThresholdImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedThresholdImageFilterIF4IF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedThresholdImageFilterIF4IF4 in _itkConnectedThresholdImageFilterPython:
_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_swigregister(itkConnectedThresholdImageFilterIF4IF4)
itkConnectedThresholdImageFilterIF4IF4___New_orig__ = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4___New_orig__
itkConnectedThresholdImageFilterIF4IF4_cast = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIF4IF4_cast


def itkConnectedThresholdImageFilterISS2ISS2_New():
    return itkConnectedThresholdImageFilterISS2ISS2.New()

class itkConnectedThresholdImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Label pixels that are connected to a seed and lie within a range of
    values.

    ConnectedThresholdImageFilter labels pixels with ReplaceValue that are
    connected to an initial Seed AND lie within a Lower and Upper
    threshold range.

    {Segmentation/RegionGrowing/ConnectedComponentsInImage,Connected
    Components In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_Clone)
    PrintSelf = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_PrintSelf)
    SetSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_SetSeed)
    AddSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_AddSeed)
    ClearSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_ClearSeeds)
    GetSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_GetSeeds)
    SetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_GetReplaceValue)
    SetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_SetUpper)
    SetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_SetLower)
    SetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_SetUpperInput)
    SetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_SetLowerInput)
    GetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_GetUpper)
    GetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_GetLower)
    GetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_GetUpperInput)
    GetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_GetLowerInput)
    OutputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_OutputEqualityComparableCheck
    
    InputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_SameDimensionCheck
    
    IntConvertibleToInputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_IntConvertibleToInputCheck
    
    OutputOStreamWritableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_OutputOStreamWritableCheck
    
    SetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_SetConnectivity)
    GetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_GetConnectivity)
    __swig_destroy__ = _itkConnectedThresholdImageFilterPython.delete_itkConnectedThresholdImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedThresholdImageFilterISS2ISS2

        Create a new object of the class itkConnectedThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedThresholdImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedThresholdImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedThresholdImageFilterISS2ISS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedThresholdImageFilterISS2ISS2 in _itkConnectedThresholdImageFilterPython:
_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_swigregister(itkConnectedThresholdImageFilterISS2ISS2)
itkConnectedThresholdImageFilterISS2ISS2___New_orig__ = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2___New_orig__
itkConnectedThresholdImageFilterISS2ISS2_cast = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS2ISS2_cast


def itkConnectedThresholdImageFilterISS3ISS3_New():
    return itkConnectedThresholdImageFilterISS3ISS3.New()

class itkConnectedThresholdImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Label pixels that are connected to a seed and lie within a range of
    values.

    ConnectedThresholdImageFilter labels pixels with ReplaceValue that are
    connected to an initial Seed AND lie within a Lower and Upper
    threshold range.

    {Segmentation/RegionGrowing/ConnectedComponentsInImage,Connected
    Components In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_Clone)
    PrintSelf = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_PrintSelf)
    SetSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_SetSeed)
    AddSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_AddSeed)
    ClearSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_ClearSeeds)
    GetSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_GetSeeds)
    SetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_GetReplaceValue)
    SetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_SetUpper)
    SetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_SetLower)
    SetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_SetUpperInput)
    SetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_SetLowerInput)
    GetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_GetUpper)
    GetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_GetLower)
    GetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_GetUpperInput)
    GetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_GetLowerInput)
    OutputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_OutputEqualityComparableCheck
    
    InputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_SameDimensionCheck
    
    IntConvertibleToInputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_IntConvertibleToInputCheck
    
    OutputOStreamWritableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_OutputOStreamWritableCheck
    
    SetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_SetConnectivity)
    GetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_GetConnectivity)
    __swig_destroy__ = _itkConnectedThresholdImageFilterPython.delete_itkConnectedThresholdImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedThresholdImageFilterISS3ISS3

        Create a new object of the class itkConnectedThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedThresholdImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedThresholdImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedThresholdImageFilterISS3ISS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedThresholdImageFilterISS3ISS3 in _itkConnectedThresholdImageFilterPython:
_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_swigregister(itkConnectedThresholdImageFilterISS3ISS3)
itkConnectedThresholdImageFilterISS3ISS3___New_orig__ = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3___New_orig__
itkConnectedThresholdImageFilterISS3ISS3_cast = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS3ISS3_cast


def itkConnectedThresholdImageFilterISS4ISS4_New():
    return itkConnectedThresholdImageFilterISS4ISS4.New()

class itkConnectedThresholdImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""


    Label pixels that are connected to a seed and lie within a range of
    values.

    ConnectedThresholdImageFilter labels pixels with ReplaceValue that are
    connected to an initial Seed AND lie within a Lower and Upper
    threshold range.

    {Segmentation/RegionGrowing/ConnectedComponentsInImage,Connected
    Components In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_Clone)
    PrintSelf = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_PrintSelf)
    SetSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_SetSeed)
    AddSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_AddSeed)
    ClearSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_ClearSeeds)
    GetSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_GetSeeds)
    SetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_GetReplaceValue)
    SetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_SetUpper)
    SetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_SetLower)
    SetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_SetUpperInput)
    SetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_SetLowerInput)
    GetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_GetUpper)
    GetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_GetLower)
    GetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_GetUpperInput)
    GetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_GetLowerInput)
    OutputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_OutputEqualityComparableCheck
    
    InputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_SameDimensionCheck
    
    IntConvertibleToInputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_IntConvertibleToInputCheck
    
    OutputOStreamWritableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_OutputOStreamWritableCheck
    
    SetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_SetConnectivity)
    GetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_GetConnectivity)
    __swig_destroy__ = _itkConnectedThresholdImageFilterPython.delete_itkConnectedThresholdImageFilterISS4ISS4
    cast = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedThresholdImageFilterISS4ISS4

        Create a new object of the class itkConnectedThresholdImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedThresholdImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedThresholdImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedThresholdImageFilterISS4ISS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedThresholdImageFilterISS4ISS4 in _itkConnectedThresholdImageFilterPython:
_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_swigregister(itkConnectedThresholdImageFilterISS4ISS4)
itkConnectedThresholdImageFilterISS4ISS4___New_orig__ = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4___New_orig__
itkConnectedThresholdImageFilterISS4ISS4_cast = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterISS4ISS4_cast


def itkConnectedThresholdImageFilterIUC2IUC2_New():
    return itkConnectedThresholdImageFilterIUC2IUC2.New()

class itkConnectedThresholdImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Label pixels that are connected to a seed and lie within a range of
    values.

    ConnectedThresholdImageFilter labels pixels with ReplaceValue that are
    connected to an initial Seed AND lie within a Lower and Upper
    threshold range.

    {Segmentation/RegionGrowing/ConnectedComponentsInImage,Connected
    Components In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_Clone)
    PrintSelf = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_PrintSelf)
    SetSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_SetSeed)
    AddSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_AddSeed)
    ClearSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_ClearSeeds)
    GetSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_GetSeeds)
    SetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_GetReplaceValue)
    SetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_SetUpper)
    SetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_SetLower)
    SetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_SetUpperInput)
    SetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_SetLowerInput)
    GetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_GetUpper)
    GetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_GetLower)
    GetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_GetUpperInput)
    GetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_GetLowerInput)
    OutputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_OutputEqualityComparableCheck
    
    InputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_SameDimensionCheck
    
    IntConvertibleToInputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_IntConvertibleToInputCheck
    
    OutputOStreamWritableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_OutputOStreamWritableCheck
    
    SetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_SetConnectivity)
    GetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_GetConnectivity)
    __swig_destroy__ = _itkConnectedThresholdImageFilterPython.delete_itkConnectedThresholdImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedThresholdImageFilterIUC2IUC2

        Create a new object of the class itkConnectedThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedThresholdImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedThresholdImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedThresholdImageFilterIUC2IUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedThresholdImageFilterIUC2IUC2 in _itkConnectedThresholdImageFilterPython:
_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_swigregister(itkConnectedThresholdImageFilterIUC2IUC2)
itkConnectedThresholdImageFilterIUC2IUC2___New_orig__ = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2___New_orig__
itkConnectedThresholdImageFilterIUC2IUC2_cast = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC2IUC2_cast


def itkConnectedThresholdImageFilterIUC3IUC3_New():
    return itkConnectedThresholdImageFilterIUC3IUC3.New()

class itkConnectedThresholdImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Label pixels that are connected to a seed and lie within a range of
    values.

    ConnectedThresholdImageFilter labels pixels with ReplaceValue that are
    connected to an initial Seed AND lie within a Lower and Upper
    threshold range.

    {Segmentation/RegionGrowing/ConnectedComponentsInImage,Connected
    Components In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_Clone)
    PrintSelf = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_PrintSelf)
    SetSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_SetSeed)
    AddSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_AddSeed)
    ClearSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_ClearSeeds)
    GetSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_GetSeeds)
    SetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_GetReplaceValue)
    SetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_SetUpper)
    SetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_SetLower)
    SetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_SetUpperInput)
    SetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_SetLowerInput)
    GetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_GetUpper)
    GetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_GetLower)
    GetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_GetUpperInput)
    GetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_GetLowerInput)
    OutputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_OutputEqualityComparableCheck
    
    InputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_SameDimensionCheck
    
    IntConvertibleToInputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_IntConvertibleToInputCheck
    
    OutputOStreamWritableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_OutputOStreamWritableCheck
    
    SetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_SetConnectivity)
    GetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_GetConnectivity)
    __swig_destroy__ = _itkConnectedThresholdImageFilterPython.delete_itkConnectedThresholdImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedThresholdImageFilterIUC3IUC3

        Create a new object of the class itkConnectedThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedThresholdImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedThresholdImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedThresholdImageFilterIUC3IUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedThresholdImageFilterIUC3IUC3 in _itkConnectedThresholdImageFilterPython:
_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_swigregister(itkConnectedThresholdImageFilterIUC3IUC3)
itkConnectedThresholdImageFilterIUC3IUC3___New_orig__ = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3___New_orig__
itkConnectedThresholdImageFilterIUC3IUC3_cast = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC3IUC3_cast


def itkConnectedThresholdImageFilterIUC4IUC4_New():
    return itkConnectedThresholdImageFilterIUC4IUC4.New()

class itkConnectedThresholdImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""


    Label pixels that are connected to a seed and lie within a range of
    values.

    ConnectedThresholdImageFilter labels pixels with ReplaceValue that are
    connected to an initial Seed AND lie within a Lower and Upper
    threshold range.

    {Segmentation/RegionGrowing/ConnectedComponentsInImage,Connected
    Components In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_Clone)
    PrintSelf = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_PrintSelf)
    SetSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_SetSeed)
    AddSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_AddSeed)
    ClearSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_ClearSeeds)
    GetSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_GetSeeds)
    SetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_GetReplaceValue)
    SetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_SetUpper)
    SetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_SetLower)
    SetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_SetUpperInput)
    SetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_SetLowerInput)
    GetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_GetUpper)
    GetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_GetLower)
    GetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_GetUpperInput)
    GetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_GetLowerInput)
    OutputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_OutputEqualityComparableCheck
    
    InputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_SameDimensionCheck
    
    IntConvertibleToInputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_IntConvertibleToInputCheck
    
    OutputOStreamWritableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_OutputOStreamWritableCheck
    
    SetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_SetConnectivity)
    GetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_GetConnectivity)
    __swig_destroy__ = _itkConnectedThresholdImageFilterPython.delete_itkConnectedThresholdImageFilterIUC4IUC4
    cast = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedThresholdImageFilterIUC4IUC4

        Create a new object of the class itkConnectedThresholdImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedThresholdImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedThresholdImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedThresholdImageFilterIUC4IUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedThresholdImageFilterIUC4IUC4 in _itkConnectedThresholdImageFilterPython:
_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_swigregister(itkConnectedThresholdImageFilterIUC4IUC4)
itkConnectedThresholdImageFilterIUC4IUC4___New_orig__ = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4___New_orig__
itkConnectedThresholdImageFilterIUC4IUC4_cast = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUC4IUC4_cast


def itkConnectedThresholdImageFilterIUS2IUS2_New():
    return itkConnectedThresholdImageFilterIUS2IUS2.New()

class itkConnectedThresholdImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Label pixels that are connected to a seed and lie within a range of
    values.

    ConnectedThresholdImageFilter labels pixels with ReplaceValue that are
    connected to an initial Seed AND lie within a Lower and Upper
    threshold range.

    {Segmentation/RegionGrowing/ConnectedComponentsInImage,Connected
    Components In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_Clone)
    PrintSelf = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_PrintSelf)
    SetSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_SetSeed)
    AddSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_AddSeed)
    ClearSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_ClearSeeds)
    GetSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_GetSeeds)
    SetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_GetReplaceValue)
    SetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_SetUpper)
    SetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_SetLower)
    SetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_SetUpperInput)
    SetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_SetLowerInput)
    GetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_GetUpper)
    GetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_GetLower)
    GetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_GetUpperInput)
    GetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_GetLowerInput)
    OutputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_OutputEqualityComparableCheck
    
    InputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_SameDimensionCheck
    
    IntConvertibleToInputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_IntConvertibleToInputCheck
    
    OutputOStreamWritableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_OutputOStreamWritableCheck
    
    SetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_SetConnectivity)
    GetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_GetConnectivity)
    __swig_destroy__ = _itkConnectedThresholdImageFilterPython.delete_itkConnectedThresholdImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedThresholdImageFilterIUS2IUS2

        Create a new object of the class itkConnectedThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedThresholdImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedThresholdImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedThresholdImageFilterIUS2IUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedThresholdImageFilterIUS2IUS2 in _itkConnectedThresholdImageFilterPython:
_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_swigregister(itkConnectedThresholdImageFilterIUS2IUS2)
itkConnectedThresholdImageFilterIUS2IUS2___New_orig__ = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2___New_orig__
itkConnectedThresholdImageFilterIUS2IUS2_cast = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS2IUS2_cast


def itkConnectedThresholdImageFilterIUS3IUS3_New():
    return itkConnectedThresholdImageFilterIUS3IUS3.New()

class itkConnectedThresholdImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Label pixels that are connected to a seed and lie within a range of
    values.

    ConnectedThresholdImageFilter labels pixels with ReplaceValue that are
    connected to an initial Seed AND lie within a Lower and Upper
    threshold range.

    {Segmentation/RegionGrowing/ConnectedComponentsInImage,Connected
    Components In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_Clone)
    PrintSelf = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_PrintSelf)
    SetSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_SetSeed)
    AddSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_AddSeed)
    ClearSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_ClearSeeds)
    GetSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_GetSeeds)
    SetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_GetReplaceValue)
    SetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_SetUpper)
    SetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_SetLower)
    SetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_SetUpperInput)
    SetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_SetLowerInput)
    GetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_GetUpper)
    GetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_GetLower)
    GetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_GetUpperInput)
    GetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_GetLowerInput)
    OutputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_OutputEqualityComparableCheck
    
    InputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_SameDimensionCheck
    
    IntConvertibleToInputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_IntConvertibleToInputCheck
    
    OutputOStreamWritableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_OutputOStreamWritableCheck
    
    SetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_SetConnectivity)
    GetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_GetConnectivity)
    __swig_destroy__ = _itkConnectedThresholdImageFilterPython.delete_itkConnectedThresholdImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedThresholdImageFilterIUS3IUS3

        Create a new object of the class itkConnectedThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedThresholdImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedThresholdImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedThresholdImageFilterIUS3IUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedThresholdImageFilterIUS3IUS3 in _itkConnectedThresholdImageFilterPython:
_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_swigregister(itkConnectedThresholdImageFilterIUS3IUS3)
itkConnectedThresholdImageFilterIUS3IUS3___New_orig__ = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3___New_orig__
itkConnectedThresholdImageFilterIUS3IUS3_cast = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS3IUS3_cast


def itkConnectedThresholdImageFilterIUS4IUS4_New():
    return itkConnectedThresholdImageFilterIUS4IUS4.New()

class itkConnectedThresholdImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""


    Label pixels that are connected to a seed and lie within a range of
    values.

    ConnectedThresholdImageFilter labels pixels with ReplaceValue that are
    connected to an initial Seed AND lie within a Lower and Upper
    threshold range.

    {Segmentation/RegionGrowing/ConnectedComponentsInImage,Connected
    Components In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_Clone)
    PrintSelf = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_PrintSelf)
    SetSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_SetSeed)
    AddSeed = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_AddSeed)
    ClearSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_ClearSeeds)
    GetSeeds = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_GetSeeds)
    SetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_GetReplaceValue)
    SetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_SetUpper)
    SetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_SetLower)
    SetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_SetUpperInput)
    SetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_SetLowerInput)
    GetUpper = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_GetUpper)
    GetLower = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_GetLower)
    GetUpperInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_GetUpperInput)
    GetLowerInput = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_GetLowerInput)
    OutputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_OutputEqualityComparableCheck
    
    InputEqualityComparableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_SameDimensionCheck
    
    IntConvertibleToInputCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_IntConvertibleToInputCheck
    
    OutputOStreamWritableCheck = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_OutputOStreamWritableCheck
    
    SetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_SetConnectivity)
    GetConnectivity = _swig_new_instance_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_GetConnectivity)
    __swig_destroy__ = _itkConnectedThresholdImageFilterPython.delete_itkConnectedThresholdImageFilterIUS4IUS4
    cast = _swig_new_static_method(_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedThresholdImageFilterIUS4IUS4

        Create a new object of the class itkConnectedThresholdImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedThresholdImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedThresholdImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedThresholdImageFilterIUS4IUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedThresholdImageFilterIUS4IUS4 in _itkConnectedThresholdImageFilterPython:
_itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_swigregister(itkConnectedThresholdImageFilterIUS4IUS4)
itkConnectedThresholdImageFilterIUS4IUS4___New_orig__ = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4___New_orig__
itkConnectedThresholdImageFilterIUS4IUS4_cast = _itkConnectedThresholdImageFilterPython.itkConnectedThresholdImageFilterIUS4IUS4_cast


from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def connected_threshold_image_filter(*args, **kwargs):
    """Procedural interface for ConnectedThresholdImageFilter"""
    import itk

    instance = itk.ConnectedThresholdImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()


def connected_threshold_image_filter_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    filter_class = itk.ITKRegionGrowing.ConnectedThresholdImageFilter
    is_template = isinstance(filter_class, itkTemplate.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    connected_threshold_image_filter.__doc__ = filter_object.__doc__
    connected_threshold_image_filter.__doc__ += "\n args are input(s) to the filter.\n\n"
    connected_threshold_image_filter.__doc__ += "\n Available keyword arguments:\n"
    if is_template:
        connected_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        connected_threshold_image_filter.__doc__ += "\n"
        connected_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        connected_threshold_image_filter.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )




