# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _ITKLabelVotingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkVotingBinaryImageFilterPython
else:
    import _itkVotingBinaryImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkVotingBinaryImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkVotingBinaryImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.pyBasePython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkImageSourceCommonPython

def itkVotingBinaryImageFilterID2ID2_New():
    return itkVotingBinaryImageFilterID2ID2.New()

class itkVotingBinaryImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Applies a voting operation in a neighborhood of each pixel.

    Pixels which are not Foreground or Background will remain unchanged.

    See:  Image

    See:  Neighborhood

    See:  NeighborhoodOperator

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_Clone)
    SetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_SetRadius)
    GetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_GetRadius)
    SetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_SetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_SetForegroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_GetBackgroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_GetForegroundValue)
    GetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_GetBirthThreshold)
    SetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_SetBirthThreshold)
    GetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_GetSurvivalThreshold)
    SetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_SetSurvivalThreshold)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_GenerateInputRequestedRegion)
    InputEqualityComparableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_IntConvertibleToInputCheck
    
    InputConvertibleToOutputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkVotingBinaryImageFilterPython.delete_itkVotingBinaryImageFilterID2ID2
    cast = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryImageFilterID2ID2

        Create a new object of the class itkVotingBinaryImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryImageFilterID2ID2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryImageFilterID2ID2 in _itkVotingBinaryImageFilterPython:
_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_swigregister(itkVotingBinaryImageFilterID2ID2)
itkVotingBinaryImageFilterID2ID2___New_orig__ = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2___New_orig__
itkVotingBinaryImageFilterID2ID2_cast = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID2ID2_cast


def itkVotingBinaryImageFilterID3ID3_New():
    return itkVotingBinaryImageFilterID3ID3.New()

class itkVotingBinaryImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    Applies a voting operation in a neighborhood of each pixel.

    Pixels which are not Foreground or Background will remain unchanged.

    See:  Image

    See:  Neighborhood

    See:  NeighborhoodOperator

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_Clone)
    SetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_GetRadius)
    SetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_SetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_SetForegroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_GetBackgroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_GetForegroundValue)
    GetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_GetBirthThreshold)
    SetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_SetBirthThreshold)
    GetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_GetSurvivalThreshold)
    SetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_SetSurvivalThreshold)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_GenerateInputRequestedRegion)
    InputEqualityComparableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_IntConvertibleToInputCheck
    
    InputConvertibleToOutputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkVotingBinaryImageFilterPython.delete_itkVotingBinaryImageFilterID3ID3
    cast = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryImageFilterID3ID3

        Create a new object of the class itkVotingBinaryImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryImageFilterID3ID3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryImageFilterID3ID3 in _itkVotingBinaryImageFilterPython:
_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_swigregister(itkVotingBinaryImageFilterID3ID3)
itkVotingBinaryImageFilterID3ID3___New_orig__ = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3___New_orig__
itkVotingBinaryImageFilterID3ID3_cast = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID3ID3_cast


def itkVotingBinaryImageFilterID4ID4_New():
    return itkVotingBinaryImageFilterID4ID4.New()

class itkVotingBinaryImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""


    Applies a voting operation in a neighborhood of each pixel.

    Pixels which are not Foreground or Background will remain unchanged.

    See:  Image

    See:  Neighborhood

    See:  NeighborhoodOperator

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_Clone)
    SetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_SetRadius)
    GetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_GetRadius)
    SetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_SetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_SetForegroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_GetBackgroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_GetForegroundValue)
    GetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_GetBirthThreshold)
    SetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_SetBirthThreshold)
    GetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_GetSurvivalThreshold)
    SetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_SetSurvivalThreshold)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_GenerateInputRequestedRegion)
    InputEqualityComparableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_IntConvertibleToInputCheck
    
    InputConvertibleToOutputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkVotingBinaryImageFilterPython.delete_itkVotingBinaryImageFilterID4ID4
    cast = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryImageFilterID4ID4

        Create a new object of the class itkVotingBinaryImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryImageFilterID4ID4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryImageFilterID4ID4 in _itkVotingBinaryImageFilterPython:
_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_swigregister(itkVotingBinaryImageFilterID4ID4)
itkVotingBinaryImageFilterID4ID4___New_orig__ = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4___New_orig__
itkVotingBinaryImageFilterID4ID4_cast = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterID4ID4_cast


def itkVotingBinaryImageFilterIF2IF2_New():
    return itkVotingBinaryImageFilterIF2IF2.New()

class itkVotingBinaryImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Applies a voting operation in a neighborhood of each pixel.

    Pixels which are not Foreground or Background will remain unchanged.

    See:  Image

    See:  Neighborhood

    See:  NeighborhoodOperator

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_Clone)
    SetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_SetRadius)
    GetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_GetRadius)
    SetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_SetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_SetForegroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_GetBackgroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_GetForegroundValue)
    GetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_GetBirthThreshold)
    SetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_SetBirthThreshold)
    GetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_GetSurvivalThreshold)
    SetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_SetSurvivalThreshold)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_GenerateInputRequestedRegion)
    InputEqualityComparableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_IntConvertibleToInputCheck
    
    InputConvertibleToOutputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkVotingBinaryImageFilterPython.delete_itkVotingBinaryImageFilterIF2IF2
    cast = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryImageFilterIF2IF2

        Create a new object of the class itkVotingBinaryImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryImageFilterIF2IF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryImageFilterIF2IF2 in _itkVotingBinaryImageFilterPython:
_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_swigregister(itkVotingBinaryImageFilterIF2IF2)
itkVotingBinaryImageFilterIF2IF2___New_orig__ = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2___New_orig__
itkVotingBinaryImageFilterIF2IF2_cast = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF2IF2_cast


def itkVotingBinaryImageFilterIF3IF3_New():
    return itkVotingBinaryImageFilterIF3IF3.New()

class itkVotingBinaryImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    Applies a voting operation in a neighborhood of each pixel.

    Pixels which are not Foreground or Background will remain unchanged.

    See:  Image

    See:  Neighborhood

    See:  NeighborhoodOperator

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_Clone)
    SetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_GetRadius)
    SetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_SetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_SetForegroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_GetBackgroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_GetForegroundValue)
    GetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_GetBirthThreshold)
    SetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_SetBirthThreshold)
    GetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_GetSurvivalThreshold)
    SetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_SetSurvivalThreshold)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_GenerateInputRequestedRegion)
    InputEqualityComparableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_IntConvertibleToInputCheck
    
    InputConvertibleToOutputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkVotingBinaryImageFilterPython.delete_itkVotingBinaryImageFilterIF3IF3
    cast = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryImageFilterIF3IF3

        Create a new object of the class itkVotingBinaryImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryImageFilterIF3IF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryImageFilterIF3IF3 in _itkVotingBinaryImageFilterPython:
_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_swigregister(itkVotingBinaryImageFilterIF3IF3)
itkVotingBinaryImageFilterIF3IF3___New_orig__ = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3___New_orig__
itkVotingBinaryImageFilterIF3IF3_cast = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF3IF3_cast


def itkVotingBinaryImageFilterIF4IF4_New():
    return itkVotingBinaryImageFilterIF4IF4.New()

class itkVotingBinaryImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""


    Applies a voting operation in a neighborhood of each pixel.

    Pixels which are not Foreground or Background will remain unchanged.

    See:  Image

    See:  Neighborhood

    See:  NeighborhoodOperator

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_Clone)
    SetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_SetRadius)
    GetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_GetRadius)
    SetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_SetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_SetForegroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_GetBackgroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_GetForegroundValue)
    GetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_GetBirthThreshold)
    SetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_SetBirthThreshold)
    GetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_GetSurvivalThreshold)
    SetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_SetSurvivalThreshold)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_GenerateInputRequestedRegion)
    InputEqualityComparableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_IntConvertibleToInputCheck
    
    InputConvertibleToOutputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkVotingBinaryImageFilterPython.delete_itkVotingBinaryImageFilterIF4IF4
    cast = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryImageFilterIF4IF4

        Create a new object of the class itkVotingBinaryImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryImageFilterIF4IF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryImageFilterIF4IF4 in _itkVotingBinaryImageFilterPython:
_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_swigregister(itkVotingBinaryImageFilterIF4IF4)
itkVotingBinaryImageFilterIF4IF4___New_orig__ = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4___New_orig__
itkVotingBinaryImageFilterIF4IF4_cast = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIF4IF4_cast


def itkVotingBinaryImageFilterISS2ISS2_New():
    return itkVotingBinaryImageFilterISS2ISS2.New()

class itkVotingBinaryImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Applies a voting operation in a neighborhood of each pixel.

    Pixels which are not Foreground or Background will remain unchanged.

    See:  Image

    See:  Neighborhood

    See:  NeighborhoodOperator

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_Clone)
    SetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_SetRadius)
    GetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_GetRadius)
    SetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_SetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_SetForegroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_GetBackgroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_GetForegroundValue)
    GetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_GetBirthThreshold)
    SetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_SetBirthThreshold)
    GetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_GetSurvivalThreshold)
    SetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_SetSurvivalThreshold)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_GenerateInputRequestedRegion)
    InputEqualityComparableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_IntConvertibleToInputCheck
    
    InputConvertibleToOutputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkVotingBinaryImageFilterPython.delete_itkVotingBinaryImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryImageFilterISS2ISS2

        Create a new object of the class itkVotingBinaryImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryImageFilterISS2ISS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryImageFilterISS2ISS2 in _itkVotingBinaryImageFilterPython:
_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_swigregister(itkVotingBinaryImageFilterISS2ISS2)
itkVotingBinaryImageFilterISS2ISS2___New_orig__ = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2___New_orig__
itkVotingBinaryImageFilterISS2ISS2_cast = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS2ISS2_cast


def itkVotingBinaryImageFilterISS3ISS3_New():
    return itkVotingBinaryImageFilterISS3ISS3.New()

class itkVotingBinaryImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Applies a voting operation in a neighborhood of each pixel.

    Pixels which are not Foreground or Background will remain unchanged.

    See:  Image

    See:  Neighborhood

    See:  NeighborhoodOperator

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_Clone)
    SetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_GetRadius)
    SetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_SetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_SetForegroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_GetBackgroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_GetForegroundValue)
    GetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_GetBirthThreshold)
    SetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_SetBirthThreshold)
    GetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_GetSurvivalThreshold)
    SetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_SetSurvivalThreshold)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_GenerateInputRequestedRegion)
    InputEqualityComparableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_IntConvertibleToInputCheck
    
    InputConvertibleToOutputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkVotingBinaryImageFilterPython.delete_itkVotingBinaryImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryImageFilterISS3ISS3

        Create a new object of the class itkVotingBinaryImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryImageFilterISS3ISS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryImageFilterISS3ISS3 in _itkVotingBinaryImageFilterPython:
_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_swigregister(itkVotingBinaryImageFilterISS3ISS3)
itkVotingBinaryImageFilterISS3ISS3___New_orig__ = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3___New_orig__
itkVotingBinaryImageFilterISS3ISS3_cast = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS3ISS3_cast


def itkVotingBinaryImageFilterISS4ISS4_New():
    return itkVotingBinaryImageFilterISS4ISS4.New()

class itkVotingBinaryImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""


    Applies a voting operation in a neighborhood of each pixel.

    Pixels which are not Foreground or Background will remain unchanged.

    See:  Image

    See:  Neighborhood

    See:  NeighborhoodOperator

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_Clone)
    SetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_SetRadius)
    GetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_GetRadius)
    SetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_SetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_SetForegroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_GetBackgroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_GetForegroundValue)
    GetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_GetBirthThreshold)
    SetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_SetBirthThreshold)
    GetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_GetSurvivalThreshold)
    SetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_SetSurvivalThreshold)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_GenerateInputRequestedRegion)
    InputEqualityComparableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_IntConvertibleToInputCheck
    
    InputConvertibleToOutputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkVotingBinaryImageFilterPython.delete_itkVotingBinaryImageFilterISS4ISS4
    cast = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryImageFilterISS4ISS4

        Create a new object of the class itkVotingBinaryImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryImageFilterISS4ISS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryImageFilterISS4ISS4 in _itkVotingBinaryImageFilterPython:
_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_swigregister(itkVotingBinaryImageFilterISS4ISS4)
itkVotingBinaryImageFilterISS4ISS4___New_orig__ = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4___New_orig__
itkVotingBinaryImageFilterISS4ISS4_cast = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterISS4ISS4_cast


def itkVotingBinaryImageFilterIUC2IUC2_New():
    return itkVotingBinaryImageFilterIUC2IUC2.New()

class itkVotingBinaryImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Applies a voting operation in a neighborhood of each pixel.

    Pixels which are not Foreground or Background will remain unchanged.

    See:  Image

    See:  Neighborhood

    See:  NeighborhoodOperator

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_Clone)
    SetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_SetRadius)
    GetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_GetRadius)
    SetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_SetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_SetForegroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_GetBackgroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_GetForegroundValue)
    GetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_GetBirthThreshold)
    SetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_SetBirthThreshold)
    GetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_GetSurvivalThreshold)
    SetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_SetSurvivalThreshold)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_GenerateInputRequestedRegion)
    InputEqualityComparableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_IntConvertibleToInputCheck
    
    InputConvertibleToOutputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkVotingBinaryImageFilterPython.delete_itkVotingBinaryImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryImageFilterIUC2IUC2

        Create a new object of the class itkVotingBinaryImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryImageFilterIUC2IUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryImageFilterIUC2IUC2 in _itkVotingBinaryImageFilterPython:
_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_swigregister(itkVotingBinaryImageFilterIUC2IUC2)
itkVotingBinaryImageFilterIUC2IUC2___New_orig__ = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2___New_orig__
itkVotingBinaryImageFilterIUC2IUC2_cast = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC2IUC2_cast


def itkVotingBinaryImageFilterIUC3IUC3_New():
    return itkVotingBinaryImageFilterIUC3IUC3.New()

class itkVotingBinaryImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Applies a voting operation in a neighborhood of each pixel.

    Pixels which are not Foreground or Background will remain unchanged.

    See:  Image

    See:  Neighborhood

    See:  NeighborhoodOperator

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_Clone)
    SetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_GetRadius)
    SetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_SetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_SetForegroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_GetBackgroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_GetForegroundValue)
    GetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_GetBirthThreshold)
    SetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_SetBirthThreshold)
    GetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_GetSurvivalThreshold)
    SetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_SetSurvivalThreshold)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_GenerateInputRequestedRegion)
    InputEqualityComparableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_IntConvertibleToInputCheck
    
    InputConvertibleToOutputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkVotingBinaryImageFilterPython.delete_itkVotingBinaryImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryImageFilterIUC3IUC3

        Create a new object of the class itkVotingBinaryImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryImageFilterIUC3IUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryImageFilterIUC3IUC3 in _itkVotingBinaryImageFilterPython:
_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_swigregister(itkVotingBinaryImageFilterIUC3IUC3)
itkVotingBinaryImageFilterIUC3IUC3___New_orig__ = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3___New_orig__
itkVotingBinaryImageFilterIUC3IUC3_cast = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC3IUC3_cast


def itkVotingBinaryImageFilterIUC4IUC4_New():
    return itkVotingBinaryImageFilterIUC4IUC4.New()

class itkVotingBinaryImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""


    Applies a voting operation in a neighborhood of each pixel.

    Pixels which are not Foreground or Background will remain unchanged.

    See:  Image

    See:  Neighborhood

    See:  NeighborhoodOperator

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_Clone)
    SetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_SetRadius)
    GetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_GetRadius)
    SetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_SetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_SetForegroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_GetBackgroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_GetForegroundValue)
    GetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_GetBirthThreshold)
    SetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_SetBirthThreshold)
    GetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_GetSurvivalThreshold)
    SetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_SetSurvivalThreshold)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_GenerateInputRequestedRegion)
    InputEqualityComparableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_IntConvertibleToInputCheck
    
    InputConvertibleToOutputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkVotingBinaryImageFilterPython.delete_itkVotingBinaryImageFilterIUC4IUC4
    cast = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryImageFilterIUC4IUC4

        Create a new object of the class itkVotingBinaryImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryImageFilterIUC4IUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryImageFilterIUC4IUC4 in _itkVotingBinaryImageFilterPython:
_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_swigregister(itkVotingBinaryImageFilterIUC4IUC4)
itkVotingBinaryImageFilterIUC4IUC4___New_orig__ = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4___New_orig__
itkVotingBinaryImageFilterIUC4IUC4_cast = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUC4IUC4_cast


def itkVotingBinaryImageFilterIUS2IUS2_New():
    return itkVotingBinaryImageFilterIUS2IUS2.New()

class itkVotingBinaryImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Applies a voting operation in a neighborhood of each pixel.

    Pixels which are not Foreground or Background will remain unchanged.

    See:  Image

    See:  Neighborhood

    See:  NeighborhoodOperator

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_Clone)
    SetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_SetRadius)
    GetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_GetRadius)
    SetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_SetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_SetForegroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_GetBackgroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_GetForegroundValue)
    GetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_GetBirthThreshold)
    SetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_SetBirthThreshold)
    GetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_GetSurvivalThreshold)
    SetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_SetSurvivalThreshold)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_GenerateInputRequestedRegion)
    InputEqualityComparableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_IntConvertibleToInputCheck
    
    InputConvertibleToOutputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkVotingBinaryImageFilterPython.delete_itkVotingBinaryImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryImageFilterIUS2IUS2

        Create a new object of the class itkVotingBinaryImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryImageFilterIUS2IUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryImageFilterIUS2IUS2 in _itkVotingBinaryImageFilterPython:
_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_swigregister(itkVotingBinaryImageFilterIUS2IUS2)
itkVotingBinaryImageFilterIUS2IUS2___New_orig__ = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2___New_orig__
itkVotingBinaryImageFilterIUS2IUS2_cast = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS2IUS2_cast


def itkVotingBinaryImageFilterIUS3IUS3_New():
    return itkVotingBinaryImageFilterIUS3IUS3.New()

class itkVotingBinaryImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Applies a voting operation in a neighborhood of each pixel.

    Pixels which are not Foreground or Background will remain unchanged.

    See:  Image

    See:  Neighborhood

    See:  NeighborhoodOperator

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_Clone)
    SetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_GetRadius)
    SetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_SetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_SetForegroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_GetBackgroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_GetForegroundValue)
    GetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_GetBirthThreshold)
    SetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_SetBirthThreshold)
    GetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_GetSurvivalThreshold)
    SetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_SetSurvivalThreshold)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_GenerateInputRequestedRegion)
    InputEqualityComparableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_IntConvertibleToInputCheck
    
    InputConvertibleToOutputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkVotingBinaryImageFilterPython.delete_itkVotingBinaryImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryImageFilterIUS3IUS3

        Create a new object of the class itkVotingBinaryImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryImageFilterIUS3IUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryImageFilterIUS3IUS3 in _itkVotingBinaryImageFilterPython:
_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_swigregister(itkVotingBinaryImageFilterIUS3IUS3)
itkVotingBinaryImageFilterIUS3IUS3___New_orig__ = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3___New_orig__
itkVotingBinaryImageFilterIUS3IUS3_cast = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS3IUS3_cast


def itkVotingBinaryImageFilterIUS4IUS4_New():
    return itkVotingBinaryImageFilterIUS4IUS4.New()

class itkVotingBinaryImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""


    Applies a voting operation in a neighborhood of each pixel.

    Pixels which are not Foreground or Background will remain unchanged.

    See:  Image

    See:  Neighborhood

    See:  NeighborhoodOperator

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_Clone)
    SetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_SetRadius)
    GetRadius = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_GetRadius)
    SetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_SetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_SetForegroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_GetBackgroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_GetForegroundValue)
    GetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_GetBirthThreshold)
    SetBirthThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_SetBirthThreshold)
    GetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_GetSurvivalThreshold)
    SetSurvivalThreshold = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_SetSurvivalThreshold)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_GenerateInputRequestedRegion)
    InputEqualityComparableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_IntConvertibleToInputCheck
    
    InputConvertibleToOutputCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkVotingBinaryImageFilterPython.delete_itkVotingBinaryImageFilterIUS4IUS4
    cast = _swig_new_static_method(_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryImageFilterIUS4IUS4

        Create a new object of the class itkVotingBinaryImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryImageFilterIUS4IUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryImageFilterIUS4IUS4 in _itkVotingBinaryImageFilterPython:
_itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_swigregister(itkVotingBinaryImageFilterIUS4IUS4)
itkVotingBinaryImageFilterIUS4IUS4___New_orig__ = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4___New_orig__
itkVotingBinaryImageFilterIUS4IUS4_cast = _itkVotingBinaryImageFilterPython.itkVotingBinaryImageFilterIUS4IUS4_cast


from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def voting_binary_image_filter(*args, **kwargs):
    """Procedural interface for VotingBinaryImageFilter"""
    import itk

    instance = itk.VotingBinaryImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()


def voting_binary_image_filter_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    filter_class = itk.ITKLabelVoting.VotingBinaryImageFilter
    is_template = isinstance(filter_class, itkTemplate.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    voting_binary_image_filter.__doc__ = filter_object.__doc__
    voting_binary_image_filter.__doc__ += "\n args are input(s) to the filter.\n\n"
    voting_binary_image_filter.__doc__ += "\n Available keyword arguments:\n"
    if is_template:
        voting_binary_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        voting_binary_image_filter.__doc__ += "\n"
        voting_binary_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        voting_binary_image_filter.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )




