# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _ITKWatershedsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkIsolatedWatershedImageFilterPython
else:
    import _itkIsolatedWatershedImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkIsolatedWatershedImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkIsolatedWatershedImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.stdcomplexPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkFixedArrayPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourceCommonPython

def itkIsolatedWatershedImageFilterID2ID2_New():
    return itkIsolatedWatershedImageFilterID2ID2.New()

class itkIsolatedWatershedImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Isolate watershed basins using two seeds.

    IsolatedWatershedImageFilter labels pixels with ReplaceValue1 that are
    in the same watershed basin as Seed1 AND NOT the same as Seed2. The
    filter adjusts the waterlevel until the two seeds are not in different
    basins. The user supplies a Watershed threshold. The algorithm uses a
    binary search to adjust the upper waterlevel, starting at
    UpperValueLimit. UpperValueLimit defaults to the 1.0. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_Clone)
    PrintSelf = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_PrintSelf)
    SetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_SetSeed1)
    GetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_GetSeed1)
    SetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_SetSeed2)
    GetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_GetSeed2)
    SetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_GetThreshold)
    SetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_SetIsolatedValueTolerance)
    GetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_GetIsolatedValueTolerance)
    SetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_SetUpperValueLimit)
    GetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_GetUpperValueLimit)
    SetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_SetReplaceValue1)
    GetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_GetReplaceValue1)
    SetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_SetReplaceValue2)
    GetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_GetReplaceValue2)
    GetIsolatedValue = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_GetIsolatedValue)
    __swig_destroy__ = _itkIsolatedWatershedImageFilterPython.delete_itkIsolatedWatershedImageFilterID2ID2
    cast = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkIsolatedWatershedImageFilterID2ID2

        Create a new object of the class itkIsolatedWatershedImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsolatedWatershedImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsolatedWatershedImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsolatedWatershedImageFilterID2ID2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsolatedWatershedImageFilterID2ID2 in _itkIsolatedWatershedImageFilterPython:
_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_swigregister(itkIsolatedWatershedImageFilterID2ID2)
itkIsolatedWatershedImageFilterID2ID2___New_orig__ = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2___New_orig__
itkIsolatedWatershedImageFilterID2ID2_cast = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID2ID2_cast


def itkIsolatedWatershedImageFilterID3ID3_New():
    return itkIsolatedWatershedImageFilterID3ID3.New()

class itkIsolatedWatershedImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    Isolate watershed basins using two seeds.

    IsolatedWatershedImageFilter labels pixels with ReplaceValue1 that are
    in the same watershed basin as Seed1 AND NOT the same as Seed2. The
    filter adjusts the waterlevel until the two seeds are not in different
    basins. The user supplies a Watershed threshold. The algorithm uses a
    binary search to adjust the upper waterlevel, starting at
    UpperValueLimit. UpperValueLimit defaults to the 1.0. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_Clone)
    PrintSelf = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_PrintSelf)
    SetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_SetSeed1)
    GetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_GetSeed1)
    SetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_SetSeed2)
    GetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_GetSeed2)
    SetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_GetThreshold)
    SetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_SetIsolatedValueTolerance)
    GetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_GetIsolatedValueTolerance)
    SetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_SetUpperValueLimit)
    GetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_GetUpperValueLimit)
    SetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_SetReplaceValue1)
    GetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_GetReplaceValue1)
    SetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_SetReplaceValue2)
    GetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_GetReplaceValue2)
    GetIsolatedValue = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_GetIsolatedValue)
    __swig_destroy__ = _itkIsolatedWatershedImageFilterPython.delete_itkIsolatedWatershedImageFilterID3ID3
    cast = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkIsolatedWatershedImageFilterID3ID3

        Create a new object of the class itkIsolatedWatershedImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsolatedWatershedImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsolatedWatershedImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsolatedWatershedImageFilterID3ID3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsolatedWatershedImageFilterID3ID3 in _itkIsolatedWatershedImageFilterPython:
_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_swigregister(itkIsolatedWatershedImageFilterID3ID3)
itkIsolatedWatershedImageFilterID3ID3___New_orig__ = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3___New_orig__
itkIsolatedWatershedImageFilterID3ID3_cast = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID3ID3_cast


def itkIsolatedWatershedImageFilterID4ID4_New():
    return itkIsolatedWatershedImageFilterID4ID4.New()

class itkIsolatedWatershedImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""


    Isolate watershed basins using two seeds.

    IsolatedWatershedImageFilter labels pixels with ReplaceValue1 that are
    in the same watershed basin as Seed1 AND NOT the same as Seed2. The
    filter adjusts the waterlevel until the two seeds are not in different
    basins. The user supplies a Watershed threshold. The algorithm uses a
    binary search to adjust the upper waterlevel, starting at
    UpperValueLimit. UpperValueLimit defaults to the 1.0. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_Clone)
    PrintSelf = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_PrintSelf)
    SetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_SetSeed1)
    GetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_GetSeed1)
    SetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_SetSeed2)
    GetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_GetSeed2)
    SetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_GetThreshold)
    SetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_SetIsolatedValueTolerance)
    GetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_GetIsolatedValueTolerance)
    SetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_SetUpperValueLimit)
    GetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_GetUpperValueLimit)
    SetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_SetReplaceValue1)
    GetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_GetReplaceValue1)
    SetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_SetReplaceValue2)
    GetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_GetReplaceValue2)
    GetIsolatedValue = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_GetIsolatedValue)
    __swig_destroy__ = _itkIsolatedWatershedImageFilterPython.delete_itkIsolatedWatershedImageFilterID4ID4
    cast = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkIsolatedWatershedImageFilterID4ID4

        Create a new object of the class itkIsolatedWatershedImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsolatedWatershedImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsolatedWatershedImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsolatedWatershedImageFilterID4ID4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsolatedWatershedImageFilterID4ID4 in _itkIsolatedWatershedImageFilterPython:
_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_swigregister(itkIsolatedWatershedImageFilterID4ID4)
itkIsolatedWatershedImageFilterID4ID4___New_orig__ = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4___New_orig__
itkIsolatedWatershedImageFilterID4ID4_cast = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterID4ID4_cast


def itkIsolatedWatershedImageFilterIF2IF2_New():
    return itkIsolatedWatershedImageFilterIF2IF2.New()

class itkIsolatedWatershedImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Isolate watershed basins using two seeds.

    IsolatedWatershedImageFilter labels pixels with ReplaceValue1 that are
    in the same watershed basin as Seed1 AND NOT the same as Seed2. The
    filter adjusts the waterlevel until the two seeds are not in different
    basins. The user supplies a Watershed threshold. The algorithm uses a
    binary search to adjust the upper waterlevel, starting at
    UpperValueLimit. UpperValueLimit defaults to the 1.0. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_Clone)
    PrintSelf = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_PrintSelf)
    SetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_SetSeed1)
    GetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_GetSeed1)
    SetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_SetSeed2)
    GetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_GetSeed2)
    SetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_GetThreshold)
    SetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_SetIsolatedValueTolerance)
    GetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_GetIsolatedValueTolerance)
    SetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_SetUpperValueLimit)
    GetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_GetUpperValueLimit)
    SetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_SetReplaceValue1)
    GetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_GetReplaceValue1)
    SetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_SetReplaceValue2)
    GetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_GetReplaceValue2)
    GetIsolatedValue = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_GetIsolatedValue)
    __swig_destroy__ = _itkIsolatedWatershedImageFilterPython.delete_itkIsolatedWatershedImageFilterIF2IF2
    cast = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkIsolatedWatershedImageFilterIF2IF2

        Create a new object of the class itkIsolatedWatershedImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsolatedWatershedImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsolatedWatershedImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsolatedWatershedImageFilterIF2IF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsolatedWatershedImageFilterIF2IF2 in _itkIsolatedWatershedImageFilterPython:
_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_swigregister(itkIsolatedWatershedImageFilterIF2IF2)
itkIsolatedWatershedImageFilterIF2IF2___New_orig__ = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2___New_orig__
itkIsolatedWatershedImageFilterIF2IF2_cast = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF2IF2_cast


def itkIsolatedWatershedImageFilterIF3IF3_New():
    return itkIsolatedWatershedImageFilterIF3IF3.New()

class itkIsolatedWatershedImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    Isolate watershed basins using two seeds.

    IsolatedWatershedImageFilter labels pixels with ReplaceValue1 that are
    in the same watershed basin as Seed1 AND NOT the same as Seed2. The
    filter adjusts the waterlevel until the two seeds are not in different
    basins. The user supplies a Watershed threshold. The algorithm uses a
    binary search to adjust the upper waterlevel, starting at
    UpperValueLimit. UpperValueLimit defaults to the 1.0. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_Clone)
    PrintSelf = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_PrintSelf)
    SetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_SetSeed1)
    GetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_GetSeed1)
    SetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_SetSeed2)
    GetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_GetSeed2)
    SetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_GetThreshold)
    SetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_SetIsolatedValueTolerance)
    GetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_GetIsolatedValueTolerance)
    SetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_SetUpperValueLimit)
    GetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_GetUpperValueLimit)
    SetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_SetReplaceValue1)
    GetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_GetReplaceValue1)
    SetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_SetReplaceValue2)
    GetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_GetReplaceValue2)
    GetIsolatedValue = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_GetIsolatedValue)
    __swig_destroy__ = _itkIsolatedWatershedImageFilterPython.delete_itkIsolatedWatershedImageFilterIF3IF3
    cast = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkIsolatedWatershedImageFilterIF3IF3

        Create a new object of the class itkIsolatedWatershedImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsolatedWatershedImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsolatedWatershedImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsolatedWatershedImageFilterIF3IF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsolatedWatershedImageFilterIF3IF3 in _itkIsolatedWatershedImageFilterPython:
_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_swigregister(itkIsolatedWatershedImageFilterIF3IF3)
itkIsolatedWatershedImageFilterIF3IF3___New_orig__ = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3___New_orig__
itkIsolatedWatershedImageFilterIF3IF3_cast = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF3IF3_cast


def itkIsolatedWatershedImageFilterIF4IF4_New():
    return itkIsolatedWatershedImageFilterIF4IF4.New()

class itkIsolatedWatershedImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""


    Isolate watershed basins using two seeds.

    IsolatedWatershedImageFilter labels pixels with ReplaceValue1 that are
    in the same watershed basin as Seed1 AND NOT the same as Seed2. The
    filter adjusts the waterlevel until the two seeds are not in different
    basins. The user supplies a Watershed threshold. The algorithm uses a
    binary search to adjust the upper waterlevel, starting at
    UpperValueLimit. UpperValueLimit defaults to the 1.0. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_Clone)
    PrintSelf = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_PrintSelf)
    SetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_SetSeed1)
    GetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_GetSeed1)
    SetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_SetSeed2)
    GetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_GetSeed2)
    SetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_GetThreshold)
    SetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_SetIsolatedValueTolerance)
    GetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_GetIsolatedValueTolerance)
    SetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_SetUpperValueLimit)
    GetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_GetUpperValueLimit)
    SetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_SetReplaceValue1)
    GetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_GetReplaceValue1)
    SetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_SetReplaceValue2)
    GetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_GetReplaceValue2)
    GetIsolatedValue = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_GetIsolatedValue)
    __swig_destroy__ = _itkIsolatedWatershedImageFilterPython.delete_itkIsolatedWatershedImageFilterIF4IF4
    cast = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkIsolatedWatershedImageFilterIF4IF4

        Create a new object of the class itkIsolatedWatershedImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsolatedWatershedImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsolatedWatershedImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsolatedWatershedImageFilterIF4IF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsolatedWatershedImageFilterIF4IF4 in _itkIsolatedWatershedImageFilterPython:
_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_swigregister(itkIsolatedWatershedImageFilterIF4IF4)
itkIsolatedWatershedImageFilterIF4IF4___New_orig__ = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4___New_orig__
itkIsolatedWatershedImageFilterIF4IF4_cast = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIF4IF4_cast


def itkIsolatedWatershedImageFilterISS2ISS2_New():
    return itkIsolatedWatershedImageFilterISS2ISS2.New()

class itkIsolatedWatershedImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Isolate watershed basins using two seeds.

    IsolatedWatershedImageFilter labels pixels with ReplaceValue1 that are
    in the same watershed basin as Seed1 AND NOT the same as Seed2. The
    filter adjusts the waterlevel until the two seeds are not in different
    basins. The user supplies a Watershed threshold. The algorithm uses a
    binary search to adjust the upper waterlevel, starting at
    UpperValueLimit. UpperValueLimit defaults to the 1.0. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_Clone)
    PrintSelf = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_PrintSelf)
    SetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_SetSeed1)
    GetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_GetSeed1)
    SetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_SetSeed2)
    GetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_GetSeed2)
    SetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_GetThreshold)
    SetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_SetIsolatedValueTolerance)
    GetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_GetIsolatedValueTolerance)
    SetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_SetUpperValueLimit)
    GetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_GetUpperValueLimit)
    SetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_SetReplaceValue1)
    GetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_GetReplaceValue1)
    SetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_SetReplaceValue2)
    GetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_GetReplaceValue2)
    GetIsolatedValue = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_GetIsolatedValue)
    __swig_destroy__ = _itkIsolatedWatershedImageFilterPython.delete_itkIsolatedWatershedImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkIsolatedWatershedImageFilterISS2ISS2

        Create a new object of the class itkIsolatedWatershedImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsolatedWatershedImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsolatedWatershedImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsolatedWatershedImageFilterISS2ISS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsolatedWatershedImageFilterISS2ISS2 in _itkIsolatedWatershedImageFilterPython:
_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_swigregister(itkIsolatedWatershedImageFilterISS2ISS2)
itkIsolatedWatershedImageFilterISS2ISS2___New_orig__ = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2___New_orig__
itkIsolatedWatershedImageFilterISS2ISS2_cast = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS2ISS2_cast


def itkIsolatedWatershedImageFilterISS3ISS3_New():
    return itkIsolatedWatershedImageFilterISS3ISS3.New()

class itkIsolatedWatershedImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Isolate watershed basins using two seeds.

    IsolatedWatershedImageFilter labels pixels with ReplaceValue1 that are
    in the same watershed basin as Seed1 AND NOT the same as Seed2. The
    filter adjusts the waterlevel until the two seeds are not in different
    basins. The user supplies a Watershed threshold. The algorithm uses a
    binary search to adjust the upper waterlevel, starting at
    UpperValueLimit. UpperValueLimit defaults to the 1.0. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_Clone)
    PrintSelf = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_PrintSelf)
    SetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_SetSeed1)
    GetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_GetSeed1)
    SetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_SetSeed2)
    GetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_GetSeed2)
    SetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_GetThreshold)
    SetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_SetIsolatedValueTolerance)
    GetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_GetIsolatedValueTolerance)
    SetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_SetUpperValueLimit)
    GetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_GetUpperValueLimit)
    SetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_SetReplaceValue1)
    GetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_GetReplaceValue1)
    SetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_SetReplaceValue2)
    GetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_GetReplaceValue2)
    GetIsolatedValue = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_GetIsolatedValue)
    __swig_destroy__ = _itkIsolatedWatershedImageFilterPython.delete_itkIsolatedWatershedImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkIsolatedWatershedImageFilterISS3ISS3

        Create a new object of the class itkIsolatedWatershedImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsolatedWatershedImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsolatedWatershedImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsolatedWatershedImageFilterISS3ISS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsolatedWatershedImageFilterISS3ISS3 in _itkIsolatedWatershedImageFilterPython:
_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_swigregister(itkIsolatedWatershedImageFilterISS3ISS3)
itkIsolatedWatershedImageFilterISS3ISS3___New_orig__ = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3___New_orig__
itkIsolatedWatershedImageFilterISS3ISS3_cast = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS3ISS3_cast


def itkIsolatedWatershedImageFilterISS4ISS4_New():
    return itkIsolatedWatershedImageFilterISS4ISS4.New()

class itkIsolatedWatershedImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""


    Isolate watershed basins using two seeds.

    IsolatedWatershedImageFilter labels pixels with ReplaceValue1 that are
    in the same watershed basin as Seed1 AND NOT the same as Seed2. The
    filter adjusts the waterlevel until the two seeds are not in different
    basins. The user supplies a Watershed threshold. The algorithm uses a
    binary search to adjust the upper waterlevel, starting at
    UpperValueLimit. UpperValueLimit defaults to the 1.0. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_Clone)
    PrintSelf = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_PrintSelf)
    SetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_SetSeed1)
    GetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_GetSeed1)
    SetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_SetSeed2)
    GetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_GetSeed2)
    SetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_GetThreshold)
    SetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_SetIsolatedValueTolerance)
    GetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_GetIsolatedValueTolerance)
    SetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_SetUpperValueLimit)
    GetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_GetUpperValueLimit)
    SetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_SetReplaceValue1)
    GetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_GetReplaceValue1)
    SetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_SetReplaceValue2)
    GetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_GetReplaceValue2)
    GetIsolatedValue = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_GetIsolatedValue)
    __swig_destroy__ = _itkIsolatedWatershedImageFilterPython.delete_itkIsolatedWatershedImageFilterISS4ISS4
    cast = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkIsolatedWatershedImageFilterISS4ISS4

        Create a new object of the class itkIsolatedWatershedImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsolatedWatershedImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsolatedWatershedImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsolatedWatershedImageFilterISS4ISS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsolatedWatershedImageFilterISS4ISS4 in _itkIsolatedWatershedImageFilterPython:
_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_swigregister(itkIsolatedWatershedImageFilterISS4ISS4)
itkIsolatedWatershedImageFilterISS4ISS4___New_orig__ = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4___New_orig__
itkIsolatedWatershedImageFilterISS4ISS4_cast = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterISS4ISS4_cast


def itkIsolatedWatershedImageFilterIUC2IUC2_New():
    return itkIsolatedWatershedImageFilterIUC2IUC2.New()

class itkIsolatedWatershedImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Isolate watershed basins using two seeds.

    IsolatedWatershedImageFilter labels pixels with ReplaceValue1 that are
    in the same watershed basin as Seed1 AND NOT the same as Seed2. The
    filter adjusts the waterlevel until the two seeds are not in different
    basins. The user supplies a Watershed threshold. The algorithm uses a
    binary search to adjust the upper waterlevel, starting at
    UpperValueLimit. UpperValueLimit defaults to the 1.0. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_Clone)
    PrintSelf = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_PrintSelf)
    SetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_SetSeed1)
    GetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_GetSeed1)
    SetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_SetSeed2)
    GetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_GetSeed2)
    SetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_GetThreshold)
    SetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_SetIsolatedValueTolerance)
    GetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_GetIsolatedValueTolerance)
    SetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_SetUpperValueLimit)
    GetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_GetUpperValueLimit)
    SetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_SetReplaceValue1)
    GetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_GetReplaceValue1)
    SetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_SetReplaceValue2)
    GetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_GetReplaceValue2)
    GetIsolatedValue = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_GetIsolatedValue)
    __swig_destroy__ = _itkIsolatedWatershedImageFilterPython.delete_itkIsolatedWatershedImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkIsolatedWatershedImageFilterIUC2IUC2

        Create a new object of the class itkIsolatedWatershedImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsolatedWatershedImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsolatedWatershedImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsolatedWatershedImageFilterIUC2IUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsolatedWatershedImageFilterIUC2IUC2 in _itkIsolatedWatershedImageFilterPython:
_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_swigregister(itkIsolatedWatershedImageFilterIUC2IUC2)
itkIsolatedWatershedImageFilterIUC2IUC2___New_orig__ = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2___New_orig__
itkIsolatedWatershedImageFilterIUC2IUC2_cast = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC2IUC2_cast


def itkIsolatedWatershedImageFilterIUC3IUC3_New():
    return itkIsolatedWatershedImageFilterIUC3IUC3.New()

class itkIsolatedWatershedImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Isolate watershed basins using two seeds.

    IsolatedWatershedImageFilter labels pixels with ReplaceValue1 that are
    in the same watershed basin as Seed1 AND NOT the same as Seed2. The
    filter adjusts the waterlevel until the two seeds are not in different
    basins. The user supplies a Watershed threshold. The algorithm uses a
    binary search to adjust the upper waterlevel, starting at
    UpperValueLimit. UpperValueLimit defaults to the 1.0. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_Clone)
    PrintSelf = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_PrintSelf)
    SetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_SetSeed1)
    GetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_GetSeed1)
    SetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_SetSeed2)
    GetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_GetSeed2)
    SetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_GetThreshold)
    SetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_SetIsolatedValueTolerance)
    GetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_GetIsolatedValueTolerance)
    SetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_SetUpperValueLimit)
    GetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_GetUpperValueLimit)
    SetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_SetReplaceValue1)
    GetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_GetReplaceValue1)
    SetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_SetReplaceValue2)
    GetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_GetReplaceValue2)
    GetIsolatedValue = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_GetIsolatedValue)
    __swig_destroy__ = _itkIsolatedWatershedImageFilterPython.delete_itkIsolatedWatershedImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkIsolatedWatershedImageFilterIUC3IUC3

        Create a new object of the class itkIsolatedWatershedImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsolatedWatershedImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsolatedWatershedImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsolatedWatershedImageFilterIUC3IUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsolatedWatershedImageFilterIUC3IUC3 in _itkIsolatedWatershedImageFilterPython:
_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_swigregister(itkIsolatedWatershedImageFilterIUC3IUC3)
itkIsolatedWatershedImageFilterIUC3IUC3___New_orig__ = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3___New_orig__
itkIsolatedWatershedImageFilterIUC3IUC3_cast = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC3IUC3_cast


def itkIsolatedWatershedImageFilterIUC4IUC4_New():
    return itkIsolatedWatershedImageFilterIUC4IUC4.New()

class itkIsolatedWatershedImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""


    Isolate watershed basins using two seeds.

    IsolatedWatershedImageFilter labels pixels with ReplaceValue1 that are
    in the same watershed basin as Seed1 AND NOT the same as Seed2. The
    filter adjusts the waterlevel until the two seeds are not in different
    basins. The user supplies a Watershed threshold. The algorithm uses a
    binary search to adjust the upper waterlevel, starting at
    UpperValueLimit. UpperValueLimit defaults to the 1.0. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_Clone)
    PrintSelf = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_PrintSelf)
    SetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_SetSeed1)
    GetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_GetSeed1)
    SetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_SetSeed2)
    GetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_GetSeed2)
    SetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_GetThreshold)
    SetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_SetIsolatedValueTolerance)
    GetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_GetIsolatedValueTolerance)
    SetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_SetUpperValueLimit)
    GetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_GetUpperValueLimit)
    SetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_SetReplaceValue1)
    GetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_GetReplaceValue1)
    SetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_SetReplaceValue2)
    GetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_GetReplaceValue2)
    GetIsolatedValue = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_GetIsolatedValue)
    __swig_destroy__ = _itkIsolatedWatershedImageFilterPython.delete_itkIsolatedWatershedImageFilterIUC4IUC4
    cast = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkIsolatedWatershedImageFilterIUC4IUC4

        Create a new object of the class itkIsolatedWatershedImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsolatedWatershedImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsolatedWatershedImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsolatedWatershedImageFilterIUC4IUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsolatedWatershedImageFilterIUC4IUC4 in _itkIsolatedWatershedImageFilterPython:
_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_swigregister(itkIsolatedWatershedImageFilterIUC4IUC4)
itkIsolatedWatershedImageFilterIUC4IUC4___New_orig__ = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4___New_orig__
itkIsolatedWatershedImageFilterIUC4IUC4_cast = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUC4IUC4_cast


def itkIsolatedWatershedImageFilterIUS2IUS2_New():
    return itkIsolatedWatershedImageFilterIUS2IUS2.New()

class itkIsolatedWatershedImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Isolate watershed basins using two seeds.

    IsolatedWatershedImageFilter labels pixels with ReplaceValue1 that are
    in the same watershed basin as Seed1 AND NOT the same as Seed2. The
    filter adjusts the waterlevel until the two seeds are not in different
    basins. The user supplies a Watershed threshold. The algorithm uses a
    binary search to adjust the upper waterlevel, starting at
    UpperValueLimit. UpperValueLimit defaults to the 1.0. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_Clone)
    PrintSelf = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_PrintSelf)
    SetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_SetSeed1)
    GetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_GetSeed1)
    SetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_SetSeed2)
    GetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_GetSeed2)
    SetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_GetThreshold)
    SetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_SetIsolatedValueTolerance)
    GetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_GetIsolatedValueTolerance)
    SetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_SetUpperValueLimit)
    GetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_GetUpperValueLimit)
    SetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_SetReplaceValue1)
    GetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_GetReplaceValue1)
    SetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_SetReplaceValue2)
    GetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_GetReplaceValue2)
    GetIsolatedValue = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_GetIsolatedValue)
    __swig_destroy__ = _itkIsolatedWatershedImageFilterPython.delete_itkIsolatedWatershedImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkIsolatedWatershedImageFilterIUS2IUS2

        Create a new object of the class itkIsolatedWatershedImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsolatedWatershedImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsolatedWatershedImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsolatedWatershedImageFilterIUS2IUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsolatedWatershedImageFilterIUS2IUS2 in _itkIsolatedWatershedImageFilterPython:
_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_swigregister(itkIsolatedWatershedImageFilterIUS2IUS2)
itkIsolatedWatershedImageFilterIUS2IUS2___New_orig__ = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2___New_orig__
itkIsolatedWatershedImageFilterIUS2IUS2_cast = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS2IUS2_cast


def itkIsolatedWatershedImageFilterIUS3IUS3_New():
    return itkIsolatedWatershedImageFilterIUS3IUS3.New()

class itkIsolatedWatershedImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Isolate watershed basins using two seeds.

    IsolatedWatershedImageFilter labels pixels with ReplaceValue1 that are
    in the same watershed basin as Seed1 AND NOT the same as Seed2. The
    filter adjusts the waterlevel until the two seeds are not in different
    basins. The user supplies a Watershed threshold. The algorithm uses a
    binary search to adjust the upper waterlevel, starting at
    UpperValueLimit. UpperValueLimit defaults to the 1.0. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_Clone)
    PrintSelf = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_PrintSelf)
    SetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_SetSeed1)
    GetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_GetSeed1)
    SetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_SetSeed2)
    GetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_GetSeed2)
    SetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_GetThreshold)
    SetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_SetIsolatedValueTolerance)
    GetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_GetIsolatedValueTolerance)
    SetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_SetUpperValueLimit)
    GetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_GetUpperValueLimit)
    SetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_SetReplaceValue1)
    GetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_GetReplaceValue1)
    SetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_SetReplaceValue2)
    GetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_GetReplaceValue2)
    GetIsolatedValue = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_GetIsolatedValue)
    __swig_destroy__ = _itkIsolatedWatershedImageFilterPython.delete_itkIsolatedWatershedImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkIsolatedWatershedImageFilterIUS3IUS3

        Create a new object of the class itkIsolatedWatershedImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsolatedWatershedImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsolatedWatershedImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsolatedWatershedImageFilterIUS3IUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsolatedWatershedImageFilterIUS3IUS3 in _itkIsolatedWatershedImageFilterPython:
_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_swigregister(itkIsolatedWatershedImageFilterIUS3IUS3)
itkIsolatedWatershedImageFilterIUS3IUS3___New_orig__ = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3___New_orig__
itkIsolatedWatershedImageFilterIUS3IUS3_cast = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS3IUS3_cast


def itkIsolatedWatershedImageFilterIUS4IUS4_New():
    return itkIsolatedWatershedImageFilterIUS4IUS4.New()

class itkIsolatedWatershedImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""


    Isolate watershed basins using two seeds.

    IsolatedWatershedImageFilter labels pixels with ReplaceValue1 that are
    in the same watershed basin as Seed1 AND NOT the same as Seed2. The
    filter adjusts the waterlevel until the two seeds are not in different
    basins. The user supplies a Watershed threshold. The algorithm uses a
    binary search to adjust the upper waterlevel, starting at
    UpperValueLimit. UpperValueLimit defaults to the 1.0. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_Clone)
    PrintSelf = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_PrintSelf)
    SetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_SetSeed1)
    GetSeed1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_GetSeed1)
    SetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_SetSeed2)
    GetSeed2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_GetSeed2)
    SetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_GetThreshold)
    SetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_SetIsolatedValueTolerance)
    GetIsolatedValueTolerance = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_GetIsolatedValueTolerance)
    SetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_SetUpperValueLimit)
    GetUpperValueLimit = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_GetUpperValueLimit)
    SetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_SetReplaceValue1)
    GetReplaceValue1 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_GetReplaceValue1)
    SetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_SetReplaceValue2)
    GetReplaceValue2 = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_GetReplaceValue2)
    GetIsolatedValue = _swig_new_instance_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_GetIsolatedValue)
    __swig_destroy__ = _itkIsolatedWatershedImageFilterPython.delete_itkIsolatedWatershedImageFilterIUS4IUS4
    cast = _swig_new_static_method(_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkIsolatedWatershedImageFilterIUS4IUS4

        Create a new object of the class itkIsolatedWatershedImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsolatedWatershedImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsolatedWatershedImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsolatedWatershedImageFilterIUS4IUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsolatedWatershedImageFilterIUS4IUS4 in _itkIsolatedWatershedImageFilterPython:
_itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_swigregister(itkIsolatedWatershedImageFilterIUS4IUS4)
itkIsolatedWatershedImageFilterIUS4IUS4___New_orig__ = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4___New_orig__
itkIsolatedWatershedImageFilterIUS4IUS4_cast = _itkIsolatedWatershedImageFilterPython.itkIsolatedWatershedImageFilterIUS4IUS4_cast


from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def isolated_watershed_image_filter(*args, **kwargs):
    """Procedural interface for IsolatedWatershedImageFilter"""
    import itk

    instance = itk.IsolatedWatershedImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()


def isolated_watershed_image_filter_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    filter_class = itk.ITKWatersheds.IsolatedWatershedImageFilter
    is_template = isinstance(filter_class, itkTemplate.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    isolated_watershed_image_filter.__doc__ = filter_object.__doc__
    isolated_watershed_image_filter.__doc__ += "\n args are input(s) to the filter.\n\n"
    isolated_watershed_image_filter.__doc__ += "\n Available keyword arguments:\n"
    if is_template:
        isolated_watershed_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        isolated_watershed_image_filter.__doc__ += "\n"
        isolated_watershed_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        isolated_watershed_image_filter.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )




