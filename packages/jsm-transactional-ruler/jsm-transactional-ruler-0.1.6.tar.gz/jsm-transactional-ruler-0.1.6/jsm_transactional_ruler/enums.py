from enum import Enum


class EventType(Enum):
    T_EVENT_REGISTERED_USER = "T_EVENT_REGISTERED_USER"
    T_EVENT_GENERAL_ORDER_MADE = "T_EVENT_GENERAL_ORDER_MADE"
    T_EVENT_MOBILE_RECHARGE_ORDER_MADE = "T_EVENT_MOBILE_RECHARGE_ORDER_MADE"
    T_EVENT_PROFESSIONAL_INDICATED = "T_EVENT_PROFESSIONAL_INDICATED"
    T_EVENT_PROFESSIONAL_REGISTERED = "T_EVENT_PROFESSIONAL_REGISTERED"
    T_EVENT_FIRST_PURCHASE_RECEIPT_SUCCESS = "T_EVENT_FIRST_PURCHASE_RECEIPT_SUCCESS"
    T_EVENT_PURCHASE_RECEIPT_STATUS_NON_ELIGIBLE = "T_EVENT_PURCHASE_RECEIPT_STATUS_NON_ELIGIBLE"
    T_EVENT_USER_PASSWORD_CHANGE_REQUEST = "T_EVENT_USER_PASSWORD_CHANGE_REQUEST"
    T_EVENT_USER_PASSWORD_CHANGE_CONFIRM = "T_EVENT_USER_PASSWORD_CHANGE_CONFIRM"
    T_EVENT_USER_SELLER_APP_ACCESS_LIBERATED = "T_EVENT_USER_SELLER_APP_ACCESS_LIBERATED"
    T_EVENT_REDEMPTION_CONFIRM = "T_EVENT_REDEMPTION_CONFIRM"
    T_EVENT_POINTS_DEVOLUTION = "T_EVENT_POINTS_DEVOLUTION"
    T_EVENT_REQUEST_TO_CONFIRM_REGISTER_EMPLOYEE = "T_EVENT_REQUEST_TO_CONFIRM_REGISTER_EMPLOYEE"
    T_EVENT_PRE_REGISTER_EMPLOYEE = "T_EVENT_PRE_REGISTER_EMPLOYEE"
    T_EVENT_PRE_REGISTER_EMPLOYEE_DENIED = "T_EVENT_PRE_REGISTER_EMPLOYEE_DENIED"
    T_EVENT_PRE_REGISTER_EMPLOYEE_ACCEPTED = "T_EVENT_PRE_REGISTER_EMPLOYEE_ACCEPTED"
    T_EVENT_PROFESSIONAL_RULES_AGREEMENT_ACCEPTED = "T_EVENT_PROFESSIONAL_RULES_AGREEMENT_ACCEPTED"
    T_EVENT_INVITE_EMPLOYEE_TO_REGISTER = "T_EVENT_INVITE_EMPLOYEE_TO_REGISTER"
    T_EVENT_SEND_EMAIL_VALIDATION_LINK = "T_EVENT_SEND_EMAIL_VALIDATION_LINK"

    @classmethod
    def get_choices(cls):
        return tuple(item.value for item in cls)
