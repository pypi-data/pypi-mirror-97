# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kicker.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='kicker.proto',
  package='kicker',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=b'\n\x0ckicker.proto\x12\x06kicker\")\n\x08Response\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0f\n\x07message\x18\x02 \x01(\t\"!\n\x03Tag\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"1\n\x06Stream\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x19\n\x04tags\x18\x02 \x03(\x0b\x32\x0b.kicker.Tag\"R\n\x06\x44\x65vice\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x1f\n\x07streams\x18\x02 \x03(\x0b\x32\x0e.kicker.Stream\x12\x19\n\x04tags\x18\x03 \x03(\x0b\x32\x0b.kicker.Tag\"y\n\x04\x44\x61ta\x12\x0e\n\x06\x64\x65vice\x18\x01 \x01(\t\x12\x0e\n\x06stream\x18\x02 \x01(\t\x12\x11\n\ttimestamp\x18\x03 \x01(\x04\x12\x11\n\x07integer\x18\x05 \x01(\x03H\x00\x12\x0f\n\x05\x66loat\x18\x06 \x01(\x01H\x00\x12\x10\n\x06string\x18\x07 \x01(\tH\x00\x42\x08\n\x06sample\"6\n\x12SynchronizeRequest\x12\x12\n\ndeviceName\x18\x01 \x01(\t\x12\x0c\n\x04time\x18\x02 \x01(\x03\"$\n\x05Query\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05query\x18\x02 \x01(\t\"\x1c\n\x0bMatchResult\x12\r\n\x05match\x18\x01 \x01(\t2\xe2\x01\n\x0cKickerEngine\x12-\n\tAddDevice\x12\x0e.kicker.Device\x1a\x10.kicker.Response\x12\x30\n\x08\x41\x64\x64Query\x12\r.kicker.Query\x1a\x13.kicker.MatchResult0\x01\x12*\n\x08PushData\x12\x0c.kicker.Data\x1a\x10.kicker.Response\x12\x45\n\x15SynchronizeDeviceTime\x12\x1a.kicker.SynchronizeRequest\x1a\x10.kicker.Responseb\x06proto3'
)




_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='kicker.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='kicker.Response.code', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='kicker.Response.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=65,
)


_TAG = _descriptor.Descriptor(
  name='Tag',
  full_name='kicker.Tag',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='kicker.Tag.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='kicker.Tag.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=67,
  serialized_end=100,
)


_STREAM = _descriptor.Descriptor(
  name='Stream',
  full_name='kicker.Stream',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='kicker.Stream.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tags', full_name='kicker.Stream.tags', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=102,
  serialized_end=151,
)


_DEVICE = _descriptor.Descriptor(
  name='Device',
  full_name='kicker.Device',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='kicker.Device.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='streams', full_name='kicker.Device.streams', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tags', full_name='kicker.Device.tags', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=153,
  serialized_end=235,
)


_DATA = _descriptor.Descriptor(
  name='Data',
  full_name='kicker.Data',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device', full_name='kicker.Data.device', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stream', full_name='kicker.Data.stream', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='kicker.Data.timestamp', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='integer', full_name='kicker.Data.integer', index=3,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='float', full_name='kicker.Data.float', index=4,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='string', full_name='kicker.Data.string', index=5,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='sample', full_name='kicker.Data.sample',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=237,
  serialized_end=358,
)


_SYNCHRONIZEREQUEST = _descriptor.Descriptor(
  name='SynchronizeRequest',
  full_name='kicker.SynchronizeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='deviceName', full_name='kicker.SynchronizeRequest.deviceName', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='time', full_name='kicker.SynchronizeRequest.time', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=360,
  serialized_end=414,
)


_QUERY = _descriptor.Descriptor(
  name='Query',
  full_name='kicker.Query',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='kicker.Query.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='query', full_name='kicker.Query.query', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=416,
  serialized_end=452,
)


_MATCHRESULT = _descriptor.Descriptor(
  name='MatchResult',
  full_name='kicker.MatchResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='match', full_name='kicker.MatchResult.match', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=454,
  serialized_end=482,
)

_STREAM.fields_by_name['tags'].message_type = _TAG
_DEVICE.fields_by_name['streams'].message_type = _STREAM
_DEVICE.fields_by_name['tags'].message_type = _TAG
_DATA.oneofs_by_name['sample'].fields.append(
  _DATA.fields_by_name['integer'])
_DATA.fields_by_name['integer'].containing_oneof = _DATA.oneofs_by_name['sample']
_DATA.oneofs_by_name['sample'].fields.append(
  _DATA.fields_by_name['float'])
_DATA.fields_by_name['float'].containing_oneof = _DATA.oneofs_by_name['sample']
_DATA.oneofs_by_name['sample'].fields.append(
  _DATA.fields_by_name['string'])
_DATA.fields_by_name['string'].containing_oneof = _DATA.oneofs_by_name['sample']
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
DESCRIPTOR.message_types_by_name['Tag'] = _TAG
DESCRIPTOR.message_types_by_name['Stream'] = _STREAM
DESCRIPTOR.message_types_by_name['Device'] = _DEVICE
DESCRIPTOR.message_types_by_name['Data'] = _DATA
DESCRIPTOR.message_types_by_name['SynchronizeRequest'] = _SYNCHRONIZEREQUEST
DESCRIPTOR.message_types_by_name['Query'] = _QUERY
DESCRIPTOR.message_types_by_name['MatchResult'] = _MATCHRESULT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSE,
  '__module__' : 'kicker_pb2'
  # @@protoc_insertion_point(class_scope:kicker.Response)
  })
_sym_db.RegisterMessage(Response)

Tag = _reflection.GeneratedProtocolMessageType('Tag', (_message.Message,), {
  'DESCRIPTOR' : _TAG,
  '__module__' : 'kicker_pb2'
  # @@protoc_insertion_point(class_scope:kicker.Tag)
  })
_sym_db.RegisterMessage(Tag)

Stream = _reflection.GeneratedProtocolMessageType('Stream', (_message.Message,), {
  'DESCRIPTOR' : _STREAM,
  '__module__' : 'kicker_pb2'
  # @@protoc_insertion_point(class_scope:kicker.Stream)
  })
_sym_db.RegisterMessage(Stream)

Device = _reflection.GeneratedProtocolMessageType('Device', (_message.Message,), {
  'DESCRIPTOR' : _DEVICE,
  '__module__' : 'kicker_pb2'
  # @@protoc_insertion_point(class_scope:kicker.Device)
  })
_sym_db.RegisterMessage(Device)

Data = _reflection.GeneratedProtocolMessageType('Data', (_message.Message,), {
  'DESCRIPTOR' : _DATA,
  '__module__' : 'kicker_pb2'
  # @@protoc_insertion_point(class_scope:kicker.Data)
  })
_sym_db.RegisterMessage(Data)

SynchronizeRequest = _reflection.GeneratedProtocolMessageType('SynchronizeRequest', (_message.Message,), {
  'DESCRIPTOR' : _SYNCHRONIZEREQUEST,
  '__module__' : 'kicker_pb2'
  # @@protoc_insertion_point(class_scope:kicker.SynchronizeRequest)
  })
_sym_db.RegisterMessage(SynchronizeRequest)

Query = _reflection.GeneratedProtocolMessageType('Query', (_message.Message,), {
  'DESCRIPTOR' : _QUERY,
  '__module__' : 'kicker_pb2'
  # @@protoc_insertion_point(class_scope:kicker.Query)
  })
_sym_db.RegisterMessage(Query)

MatchResult = _reflection.GeneratedProtocolMessageType('MatchResult', (_message.Message,), {
  'DESCRIPTOR' : _MATCHRESULT,
  '__module__' : 'kicker_pb2'
  # @@protoc_insertion_point(class_scope:kicker.MatchResult)
  })
_sym_db.RegisterMessage(MatchResult)



_KICKERENGINE = _descriptor.ServiceDescriptor(
  name='KickerEngine',
  full_name='kicker.KickerEngine',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=485,
  serialized_end=711,
  methods=[
  _descriptor.MethodDescriptor(
    name='AddDevice',
    full_name='kicker.KickerEngine.AddDevice',
    index=0,
    containing_service=None,
    input_type=_DEVICE,
    output_type=_RESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddQuery',
    full_name='kicker.KickerEngine.AddQuery',
    index=1,
    containing_service=None,
    input_type=_QUERY,
    output_type=_MATCHRESULT,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='PushData',
    full_name='kicker.KickerEngine.PushData',
    index=2,
    containing_service=None,
    input_type=_DATA,
    output_type=_RESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SynchronizeDeviceTime',
    full_name='kicker.KickerEngine.SynchronizeDeviceTime',
    index=3,
    containing_service=None,
    input_type=_SYNCHRONIZEREQUEST,
    output_type=_RESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_KICKERENGINE)

DESCRIPTOR.services_by_name['KickerEngine'] = _KICKERENGINE

# @@protoc_insertion_point(module_scope)
