# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['kpcli']

package_data = \
{'': ['*']}

install_requires = \
['attrs>=20.3.0,<21.0.0',
 'cryptography>=3.4.6,<4.0.0',
 'pykeepass>=3.2.1,<4.0.0',
 'pyperclip>=1.8.1,<2.0.0',
 'tableformatter>=0.1.5,<0.2.0',
 'typer[all]>=0.3.2,<0.4.0']

entry_points = \
{'console_scripts': ['kpcli = kpcli.cli:app']}

setup_kwargs = {
    'name': 'kpcli',
    'version': '0.2.3',
    'description': 'A simple command line tool to interact with KeePassX databases',
    'long_description': '![https://github.com/rebkwok/kpcli/workflows/Run%20tests/badge.svg](https://github.com/rebkwok/kpcli/workflows/Run%20tests/badge.svg)\n\n# kpcli\n\nA simple command line tool to interact with KeePassX databases.\n\n[KeePassX](https://www.keepassx.org/) is a cross platform password management application.\nIt is available as a GUI application for MacOSX, Linux and Windows and as an Android app (KeePassDroid), \nmaking it useful to manage passwords across multiple devices.\n\n### Features\n- View details: list groups and entries, get details for a single entry\n- Add new entries and change passwords from the commandline\n- Resolve conflicts: users may choose to keep their KeePassX database in a central location\nsuch as Dropbox or other synchronisation software.  This results in "conflicting copies" being generated if \na opens and updates the database from more than one device.  **kpcli** avoids these conflicts, and also provides \na utility to compare conflicting copies and identify where the conflicts lie.\n\n## Installation\n\nUsing pip:\n\n```pip install kpcli```\n\nFrom source:\n\n```\ngit clone https://github.com/rebkwok/kpcli.git\ncd kpcli\npoetry install  # pip install poetry first if necessary\n```\n\n## Configuration\n\n**kpcli** will look for database configuration first in in environment variables, and \nthen in a config.ini file.\n\nThe (encrypted) database password can be stored by setting `STORE_ENCRYPTED_PASSWORD` to True in the config.ini file or \nas an environment variable.  **kpcli** will prompt for the password once and then every 24 hours.\n\n\n**NOTE:** \nAT YOUR OWN RISK! `KEEPASSDB_PASSWORD` can be set in plaintext in the config.ini file or as an environment variable if you really want to.\nIf no `KEEPASSDB_PASSWORD` is found, **kpcli** will prompt for it.\n\n### Config file \n\nCreate a config file at $(HOME)/.kp/config.ini, with at least a default profile, and your\ndatabase location and credentials:\n```\n[default]\nKEEPASSDB=/Users/me/mypassworddb.kdbx\n```\n\nIf your database uses a key file, provide that location too:\n```\n[default]\nKEEPASSDB=/path/to/mypassworddb.kdbx\nKEYPASSDB_KEYFILE=/path/to/mykeyfile.key\n```\n\nMore than one profile can be set for multiple databases, and switched with the `-p` flag\n```\n[default]\nKEEPASSDB=/path/to/db.kdbx\nKEYPASSDB_KEYFILE=/path/to/mykeyfile.key\n\n[work]\nKEEPASSDB=/path/to/workdb.kdbx\n```\n\nBy default, passwords copied to the clipboard will timeout after 5 seconds. To change the \ntimeout, provide a `KEYPASSDB_TIMEOUT` config or environment variable.\n\n### Environment Variables\nIf no config.ini file exists, **kpcli** will attempt to find config in the environment variables \n`KEEPASSDB`, `KEYPASSDB_KEYFILE` and `KEEPASSDB_PASSWORD` (falling back to a prompt for the password).\n\n\nFor more detailed usage, use `--help` with any kpcli command listed below.\n\n### Usage:\n\n```console\n$ kpcli [OPTIONS] COMMAND [ARGS]...\n```\n\n### Options:\n\n* `-p, --profile TEXT`: Specify config profile to use  [default: default]\n* `--loglevel TEXT`: [default: INFO]\n* `--install-completion`: Install completion for the current shell.\n* `--show-completion`: Show completion for the current shell, to copy it or customize the installation.\n* `--help`: Show this message and exit.\n\n\n### Commands:\n\nGroup names and entry titles can be passed as partial, case-insensitive strings for matching.\n\n* `ls`: List groups and entries\n* `add-group`: Add a new group\n* `rm-group`: delete a group\n* `get`: Fetch details for a single entry\n* `cp`: Copy entry attribute to clipboard\n* `add`: Add a new entry\n* `edit`: Edit an entry\'s attributes (except password)\n* `change-password`: Change entry password\n* `rm`: Delete an entry\n* `compare`: Compare potentially conflicting copies of a KeePassX Database and report conflicts\n\n\n### Usage Examples ###\n\n##### List groups and entries\n```console\n$ kpcli ls\n\nDatabase: /path/to/db.kdbx\n================================================================================\nGroups\n================================================================================\nRoot\nInternet\nCommunications\n...\n\n$ kpcli ls --group comm --entries\nDatabase: /path/to/db.kdbx\n================================================================================\nCommunications\n================================================================================\nmy email\nwork email\n...\n```\n\n##### List groups in the database from the "work" profile:\n```console\n$ kpcli --profile work ls\nDatabase: /path/to/workdb.kdbx\n================================================================================\nGroups\n================================================================================\nRoot\nWork\n...\n```\n\n##### Get an entry  \nBy group and entry title, separated with /.  Note partial matches are allowed.  \nIf multiple matching entries are found, all will be listed.\n```console\n$ kpcli get comm/email\nDatabase: /path/to/db.kdbx\n================================================================================\nCommunications/my email\n================================================================================\nname: Communications/my email\nusername: my@email.com\npassword: **********\nURL:\nNotes: This is my main email address\n```\n\n##### Copy an attribute (default password) from an entry to the clipboard  \nIf multiple entries match, kpcli prompts for a selection.\n```console\n$ kpcli cp comm/email\nEntry: Communications/my email\npassword copied to clipboard\n\n$ kpcli cp comm/email username\nEntry: Communications/my email\nusername copied to clipboard\n```\n\n##### Add an entry\n```console\n$ kpcli add\n```\n**kpcli** will prompt for required fields.\n\n\n##### Change a password\n```console\n$ kpcli change-password comm/email\n```\n**kpcli** will prompt for new password.\n\n\n##### Compare conflicting databases\n\nIn the example below, **kpcli** found one conflicting db to compare.  \nThe entry with title "entry1" in group "blue" is present in the conflicting db, but missing \nin the main db.  \nEntry blue/entry2 is present in the main db but missing in the conflicting db.  \nEntry red/entry3 is present in both dbs, but has conflicting username and password values.\n```console\n$ kpcli compare\n\nDatabase: path/to/db.kdbx\nDatabase password:\nLooking for conflicting files...\n================================================================================\nComparison db: path/to/db_conflicting_copy.kdbx\n================================================================================\n╔════════════╤═════════════╤════════════════════╗\n║ Main       │ Conflicting │ Conflicting fields ║\n╠════════════╪═════════════╪════════════════════╣\n║ -          │ blue/entry1 │                    ║ \n╟────────────┼─────────────┼────────────────────╢\n║ blue/entry2│ -           │                    ║\n╟────────────┼─────────────┼────────────────────╢\n║ red/entry3 │ red/entry3  │ username, password ║\n╚════════════╧═════════════╧════════════════════╝\n```\n\n\n\n',
    'author': 'Becky Smith',
    'author_email': 'rebkwok@gmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': None,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.6,<4.0',
}


setup(**setup_kwargs)
