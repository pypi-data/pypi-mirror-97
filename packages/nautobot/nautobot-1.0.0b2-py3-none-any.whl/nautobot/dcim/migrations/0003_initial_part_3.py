# Generated by Django 3.1.3 on 2021-02-20 08:07

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("dcim", "0002_initial_part_2"),
        ("extras", "0001_initial_part_1"),
        ("ipam", "0001_initial_part_1"),
    ]

    operations = [
        migrations.AddField(
            model_name="interface",
            name="tagged_vlans",
            field=models.ManyToManyField(blank=True, related_name="interfaces_as_tagged", to="ipam.VLAN"),
        ),
        migrations.AddField(
            model_name="interface",
            name="tags",
            field=taggit.managers.TaggableManager(through="extras.TaggedItem", to="extras.Tag"),
        ),
        migrations.AddField(
            model_name="interface",
            name="untagged_vlan",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="interfaces_as_untagged",
                to="ipam.vlan",
            ),
        ),
        migrations.AddField(
            model_name="frontporttemplate",
            name="device_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="frontporttemplates",
                to="dcim.devicetype",
            ),
        ),
        migrations.AddField(
            model_name="frontporttemplate",
            name="rear_port",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="frontport_templates",
                to="dcim.rearporttemplate",
            ),
        ),
        migrations.AddField(
            model_name="frontport",
            name="_cable_peer_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="frontport",
            name="cable",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="dcim.cable",
            ),
        ),
        migrations.AddField(
            model_name="frontport",
            name="device",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="frontports",
                to="dcim.device",
            ),
        ),
        migrations.AddField(
            model_name="frontport",
            name="rear_port",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="frontports",
                to="dcim.rearport",
            ),
        ),
        migrations.AddField(
            model_name="frontport",
            name="tags",
            field=taggit.managers.TaggableManager(through="extras.TaggedItem", to="extras.Tag"),
        ),
        migrations.AddField(
            model_name="devicetype",
            name="manufacturer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="device_types",
                to="dcim.manufacturer",
            ),
        ),
        migrations.AddField(
            model_name="devicetype",
            name="tags",
            field=taggit.managers.TaggableManager(through="extras.TaggedItem", to="extras.Tag"),
        ),
        migrations.AddField(
            model_name="devicebaytemplate",
            name="device_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="devicebaytemplates",
                to="dcim.devicetype",
            ),
        ),
        migrations.AddField(
            model_name="devicebay",
            name="device",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="devicebays",
                to="dcim.device",
            ),
        ),
        migrations.AddField(
            model_name="devicebay",
            name="installed_device",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="parent_bay",
                to="dcim.device",
            ),
        ),
        migrations.AddField(
            model_name="devicebay",
            name="tags",
            field=taggit.managers.TaggableManager(through="extras.TaggedItem", to="extras.Tag"),
        ),
    ]
