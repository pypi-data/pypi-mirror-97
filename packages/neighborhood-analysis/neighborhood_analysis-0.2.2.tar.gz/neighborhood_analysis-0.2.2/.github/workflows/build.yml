name: Build

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]

jobs:
  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      - name: Build Python sdist
        run: maturin build --release --strip --interpreter

      - name: List sdist
        run: find ./target/wheels/

      - name: Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        with:
          files: ./target/wheels/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: PyPi publish
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        env:
          MATURIN_PASSWORD: ${{ secrets.pypi_password }}
        run: maturin publish --interpreter --username milk-zheng

      - name: Test PyPi publish
        if: "contains(toJSON(github.event.commits.*.message), '[test pypi]')"
        env:
          MATURIN_PASSWORD: ${{ secrets.pypi_test_password }}
        run: maturin publish --interpreter --username milk-zheng --repository-url https://test.pypi.org/legacy/


  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      - name: Build Python package
        run: maturin build --release --strip --no-sdist --interpreter python${{matrix.python_version}}

      - name: List wheels
        if: matrix.os == 'windows-latest'
        run: dir target\wheels\

      - name: List wheels
        if:  matrix.os != 'windows-latest'
        run: find ./target/wheels/

      - name: Install wheels on Windows
        if:  matrix.os == 'windows-latest'
        run: pip install --find-links=target\wheels neighborhood_analysis

      - name: Install wheels on Unix
        if:  matrix.os != 'windows-latest'
        run: pip install target/wheels/neighborhood_analysis*.whl

      - name: Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        with:
          files: ./target/wheels/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: PyPi publish
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        env:
          MATURIN_PASSWORD: ${{ secrets.pypi_password }}
        run: maturin publish --no-sdist --interpreter python${{matrix.python_version}} --username milk-zheng

      - name: Test PyPi publish
        if: "contains(toJSON(github.event.commits.*.message), '[test pypi]')"
        env:
          MATURIN_PASSWORD: ${{ secrets.pypi_test_password }}
        run: maturin publish --no-sdist --interpreter python${{matrix.python_version}} --username milk-zheng --repository-url https://test.pypi.org/legacy/
