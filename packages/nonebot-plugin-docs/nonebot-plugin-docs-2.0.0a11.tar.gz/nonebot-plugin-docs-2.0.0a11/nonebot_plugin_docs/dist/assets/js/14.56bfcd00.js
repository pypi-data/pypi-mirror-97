(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{409:function(v,_,o){v.exports=o.p+"assets/img/Handle-Event.1e964e39.png"},428:function(v,_,o){"use strict";o.r(_);var e=o(21),t=Object(e.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"深入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#深入"}},[v._v("#")]),v._v(" 深入")]),v._v(" "),e("h2",{attrs:{id:"它如何工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#它如何工作"}},[v._v("#")]),v._v(" 它如何工作？")]),v._v(" "),e("p",[v._v("如同"),e("router-link",{attrs:{to:"./../guide/"}},[v._v("概览")]),v._v("所言:")],1),v._v(" "),e("blockquote",[e("p",[v._v("NoneBot2 是一个可扩展的 Python 异步机器人框架，它会对机器人收到的事件进行解析和处理，并以插件化的形式，按优先级分发给事件所对应的事件响应器，来完成具体的功能。")])]),v._v(" "),e("p",[e("code",[v._v("Nonebot2")]),v._v(" 是一个可以对机器人上报的事件进行处理并完成具体功能的机器人框架，在这里，我们将简要讲述它的工作内容。")]),v._v(" "),e("p",[e("strong",[v._v("便捷起见，以下内容对 "),e("code",[v._v("Nonebot2")]),v._v(" 会被称为 "),e("code",[v._v("nonebot")]),v._v("，与 "),e("code",[v._v("Nonebot2")]),v._v(" 交互的机器人实现会被称为 "),e("code",[v._v("协议端")])]),v._v("。")]),v._v(" "),e("p",[v._v("在实际应用中，"),e("code",[v._v("nonebot")]),v._v(" 会充当一个高性能，轻量级的 Python 微服务框架。协议端可以通过 "),e("code",[v._v("http")]),v._v(", "),e("code",[v._v("websocket")]),v._v(" 等方式与之通信，这个通信往往是双向的：一方面，协议端可以上报数据给 "),e("code",[v._v("nonebot")]),v._v("，"),e("code",[v._v("nonebot")]),v._v(" 会处理数据并返回响应给协议端；另一方面，"),e("code",[v._v("nonebot")]),v._v(" 可以主动推送数据给协议端。而 "),e("code",[v._v("nonebot")]),v._v(" 便是围绕上述的双向通信进行工作的。")]),v._v(" "),e("p",[v._v("在开始工作之前，"),e("code",[v._v("nonebot")]),v._v(" 会依照"),e("strong",[v._v("配置文件或初始化配置")]),v._v("启动，并会注册"),e("strong",[v._v("协议适配器")]),v._v(" "),e("code",[v._v("adapter")]),v._v("，之后便会加载"),e("strong",[v._v("插件")]),v._v("， 随后，倘若一个协议端与 "),e("code",[v._v("nonebot")]),v._v(" 进行了连接，"),e("code",[v._v("nonebot")]),v._v(" 的后端驱动 "),e("code",[v._v("driver")]),v._v(" 就会将 "),e("code",[v._v("adapter")]),v._v(" 实例化为 "),e("code",[v._v("bot")]),v._v("，"),e("code",[v._v("nonebot")]),v._v(" 便会利用 "),e("code",[v._v("bot")]),v._v(" 开始工作，它的工作内容分为两个方面：")]),v._v(" "),e("ol",[e("li",[e("p",[e("strong",[v._v("事件处理")]),v._v("，"),e("code",[v._v("bot")]),v._v(" 会将协议端上报的数据转化为 "),e("code",[v._v("事件")]),v._v("("),e("code",[v._v("Event")]),v._v(")，之后 "),e("code",[v._v("nonebot")]),v._v(" 会根据一套既定流程来处理 "),e("code",[v._v("事件")]),v._v("。")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("调用 "),e("code",[v._v("API")])]),v._v(", 在"),e("strong",[v._v("事件处理")]),v._v("的过程中，"),e("code",[v._v("nonebot")]),v._v(" 可以通过 "),e("code",[v._v("bot")]),v._v(" 调用协议端指定的 "),e("code",[v._v("API")]),v._v(" 来获取更多数据，或者反馈响应给协议端; "),e("code",[v._v("nonebot")]),v._v(" 也可以通过调用 "),e("code",[v._v("API")]),v._v(" 向协议端主动请求数据或者主动推送数据。")])])]),v._v(" "),e("p",[v._v("在"),e("strong",[v._v("指南")]),v._v("模块， 我们已经叙述了"),e("router-link",{attrs:{to:"./../guide/basic-configuration.html"}},[v._v("如何配置 nonebot")]),v._v(", "),e("router-link",{attrs:{to:"./../guide/getting-started.html"}},[v._v("如何注册协议适配器")]),v._v("，"),e("router-link",{attrs:{to:"./../guide/loading-a-plugin.html"}},[v._v("如何加载插件")]),v._v(", 在这里便不再赘述。")],1),v._v(" "),e("p",[v._v("下面，我们将对"),e("strong",[v._v("事件处理")]),v._v("， "),e("strong",[v._v("调用 API")]),v._v("进行说明。")]),v._v(" "),e("h2",{attrs:{id:"事件处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件处理"}},[v._v("#")]),v._v(" 事件处理")]),v._v(" "),e("p",[v._v("我们可以先看事件处理的流程图：")]),v._v(" "),e("p",[e("img",{attrs:{src:o(409),alt:"handle-event"}})]),v._v(" "),e("p",[v._v("在流程图里，我们可以看到，"),e("code",[v._v("nonebot")]),v._v(" 会有三个阶段来处理事件：")]),v._v(" "),e("ol",[e("li",[e("strong",[v._v("driver 处理上报数据")])]),v._v(" "),e("li",[e("strong",[v._v("adapter 处理原始数据")])]),v._v(" "),e("li",[e("strong",[v._v("nonebot 处理 Event")])])]),v._v(" "),e("p",[v._v("我们将顺序说明这三个阶段。其中，会将第三个阶段拆分成"),e("strong",[v._v("概念解释")]),v._v("，"),e("strong",[v._v("处理 Event")]),v._v("，"),e("strong",[v._v("特殊异常处理")]),v._v("三个部分来说明。")]),v._v(" "),e("h3",{attrs:{id:"driver-处理上报数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#driver-处理上报数据"}},[v._v("#")]),v._v(" driver 处理上报数据")]),v._v(" "),e("ol",[e("li",[e("p",[v._v("协议端会通过 "),e("code",[v._v("websocket")]),v._v(" 或者 "),e("code",[v._v("http")]),v._v(" 等方式与 "),e("code",[v._v("nonebot")]),v._v(" 的后端驱动 "),e("code",[v._v("driver")]),v._v(" 连接，"),e("code",[v._v("driver")]),v._v(" 会根据之前注册的 "),e("code",[v._v("adapter")]),v._v(" 和配置文件的内容来进行鉴权，从而获得这个连接的唯一识别 id "),e("code",[v._v("self-id")]),v._v("，随后 "),e("code",[v._v("adapter")]),v._v(" 就会利用 "),e("code",[v._v("self-id")]),v._v(" 实例化为 "),e("code",[v._v("bot")]),v._v(" 对象。")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),e("p",[v._v("需要注意的是，如果协议端通过 "),e("code",[v._v("websocket")]),v._v(" 与 "),e("code",[v._v("nonebot")]),v._v(" 连接，这个步骤只会在建立连接时进行；通过 "),e("code",[v._v("http")]),v._v(" 方式连接时，会在协议端每次上报数据时都进行这个步骤。")])]),v._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[v._v("WARNING")]),v._v(" "),e("p",[v._v("连接之前必须要注册 "),e("code",[v._v("adapter")])])]),v._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[v._v("WARNING")]),v._v(" "),e("p",[e("code",[v._v("self-id")]),v._v(" 是帐号的唯一识别 ID，这意味着不能出现相同的 "),e("code",[v._v("self-id")]),v._v("。")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("driver")]),v._v(" 会将接收到的数据转交给 "),e("code",[v._v("bot")]),v._v(" 对象进一步处理。")])])]),v._v(" "),e("h3",{attrs:{id:"adapter-处理原始数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#adapter-处理原始数据"}},[v._v("#")]),v._v(" adapter 处理原始数据")]),v._v(" "),e("ol",[e("li",[e("p",[e("code",[v._v("bot")]),v._v(" 会利用事先定义好的 "),e("code",[v._v("Event Model")]),v._v(" 对上报的数据进行分析处理，将数据转化为 "),e("code",[v._v("nonebot")]),v._v(" 可以处理的 "),e("code",[v._v("Event")]),v._v(" 对象。")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),e("p",[e("code",[v._v("adapter")]),v._v(" 在转换数据格式的同时可以进行一系列的特殊操作，例如 "),e("code",[v._v("CQHTTP")]),v._v(" 会对 "),e("code",[v._v("reply")]),v._v(" 信息进行提取。")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("Event")]),v._v(" 会传入 "),e("code",[v._v("nonebot")]),v._v(" 做进一步处理。")])])]),v._v(" "),e("h3",{attrs:{id:"nonebot-处理-event"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nonebot-处理-event"}},[v._v("#")]),v._v(" nonebot 处理 Event")]),v._v(" "),e("p",[v._v("在讲述这个阶段之前，我们需要先对几个概念进行解释。")]),v._v(" "),e("h4",{attrs:{id:"概念解释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概念解释"}},[v._v("#")]),v._v(" 概念解释")]),v._v(" "),e("ol",[e("li",[e("p",[e("strong",[v._v("hook")]),v._v("，或者说"),e("strong",[v._v("钩子函数")]),v._v("，它们可以在 "),e("code",[v._v("nonebot")]),v._v(" 处理 "),e("code",[v._v("Event")]),v._v(" 的不同时刻进行拦截，修改或者扩展，在 "),e("code",[v._v("nonebot")]),v._v(" 中，钩子函数分为 "),e("code",[v._v("事件预处理hook")]),v._v("，"),e("code",[v._v("运行预处理hook")]),v._v("，"),e("code",[v._v("运行后处理hook")]),v._v(" 和 "),e("code",[v._v("事件后处理hook")]),v._v("。")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),e("p",[v._v("关于"),e("code",[v._v("hook")]),v._v("的更多信息，可以查阅"),e("router-link",{attrs:{to:"./runtime-hook.html"}},[v._v("这里")])],1)])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("Matcher")]),v._v("与"),e("strong",[v._v("matcher")]),v._v("，在"),e("strong",[v._v("指南")]),v._v("中，我们讲述了"),e("a",{attrs:{href:"../guide/creating-a-matcher"}},[v._v("如何注册事件响应器")]),v._v("，这里的事件响应器或者说 "),e("code",[v._v("Matcher")]),v._v(" 并不是一个具体的实例 "),e("code",[v._v("instance")]),v._v("，而是一个具有特定属性的类 "),e("code",[v._v("class")]),v._v("。只有当 "),e("code",[v._v("Matcher")]),v._v(" "),e("strong",[v._v("响应事件")]),v._v("时，才会实例化为具体的 "),e("code",[v._v("instance")]),v._v("，也就是 "),e("code",[v._v("matcher")]),v._v("。"),e("code",[v._v("matcher")]),v._v(" 可以认为是 "),e("code",[v._v("nonebot")]),v._v(" 处理 "),e("code",[v._v("Event")]),v._v(" 的基本单位，运行 "),e("code",[v._v("matcher")]),v._v(" 是"),e("code",[v._v("nonebot")]),v._v("工作的主要内容。")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("handler")]),v._v("，或者说"),e("strong",[v._v("事件处理函数")]),v._v(", 它们可以认为是 "),e("code",[v._v("nonebot")]),v._v(" 处理 "),e("code",[v._v("Event")]),v._v(" 的最小单位。在不考虑 "),e("code",[v._v("hook")]),v._v(" 的情况下，"),e("strong",[v._v("运行 matcher 就是顺序运行 matcher.handlers")]),v._v("，这句话换种表达方式就是，"),e("code",[v._v("handler")]),v._v(" 只有添加到 "),e("code",[v._v("matcher.handlers")]),v._v(" 时，才可以参与到 "),e("code",[v._v("nonebot")]),v._v(" 的工作中来。")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),e("p",[v._v("如何让 "),e("code",[v._v("handler")]),v._v(" 添加到 "),e("code",[v._v("matcher.handlers")]),v._v("？")]),v._v(" "),e("p",[v._v("一方面，我们可以参照"),e("a",{attrs:{href:"../guide/creating-a-handler"}},[v._v("这里")]),v._v("利用装饰器来添加；另一方面，我们在用 "),e("code",[v._v("on()")]),v._v(" 或者 "),e("code",[v._v("on_*()")]),v._v(" 注册事件响应器时，可以添加 "),e("code",[v._v("handlers=[handler1, handler2, ...]")]),v._v(" 这样的关键词参数来添加。")])])])]),v._v(" "),e("h4",{attrs:{id:"处理-event"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#处理-event"}},[v._v("#")]),v._v(" 处理 Event")]),v._v(" "),e("ol",[e("li",[e("p",[e("strong",[v._v("执行事件预处理 hook")]),v._v("， "),e("code",[v._v("nonebot")]),v._v(" 接收到 "),e("code",[v._v("Event")]),v._v(" 后，会传入到 "),e("code",[v._v("事件预处理hook")]),v._v(" 中进行处理。")]),v._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[v._v("WARNING")]),v._v(" "),e("p",[v._v("需要注意的是，执行多个 "),e("code",[v._v("事件预处理hook")]),v._v(" 时并无顺序可言，它们是"),e("strong",[v._v("并行运行")]),v._v("的。这个原则同样适用于其他的 "),e("code",[v._v("hook")]),v._v("。")])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("按优先级升序选出同一优先级的 Matcher")]),v._v("，"),e("code",[v._v("nonebot")]),v._v(" 提供了一个全局字典 "),e("code",[v._v("matchers")]),v._v("，这个字典的 "),e("code",[v._v("key")]),v._v(" 是优先级 "),e("code",[v._v("priority")]),v._v("，"),e("code",[v._v("value")]),v._v(" 是一个 "),e("code",[v._v("list")]),v._v("，里面存放着同一优先级的 "),e("code",[v._v("Matcher")]),v._v("。在注册 "),e("code",[v._v("Matcher")]),v._v(" 时，它和优先级 "),e("code",[v._v("priority")]),v._v(" 会添加到里面。")]),v._v(" "),e("p",[v._v("在执行 "),e("code",[v._v("事件预处理hook")]),v._v(" 后，"),e("code",[v._v("nonebot")]),v._v(" 会对 "),e("code",[v._v("matchers")]),v._v(" 的 "),e("code",[v._v("key")]),v._v(" 升序排序并选择出当前最小优先级的 "),e("code",[v._v("Matcher")]),v._v("。")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("根据 Matcher 定义的 Rule, Permission 判断是否运行")]),v._v("，在选出 "),e("code",[v._v("Matcher")]),v._v(" 后，"),e("code",[v._v("nonebot")]),v._v(" 会将 "),e("code",[v._v("bot")]),v._v("，"),e("code",[v._v("Event")]),v._v(" 传入到 "),e("code",[v._v("Matcher.check_rule")]),v._v(" 和 "),e("code",[v._v("Matcher.check_perm")]),v._v(" 两个函数中，两个函数分别对 Matcher 定义的 Rule, Permission 进行 check，当 check 通过后，这个 "),e("code",[v._v("Matcher")]),v._v(" 就会响应事件。但是当同一个优先级的所有 "),e("code",[v._v("Matcher")]),v._v(" 均没有响应时，"),e("code",[v._v("nonebot")]),v._v(" 会返回到上一个步骤，选择出下一优先级的 "),e("code",[v._v("Matcher")]),v._v("。")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("实例化 matcher 并执行运行预处理 hook")]),v._v("，当 "),e("code",[v._v("Matcher")]),v._v(" 响应事件后，它便会实例化为 "),e("code",[v._v("matcher")]),v._v("，并执行 "),e("code",[v._v("运行预处理hook")]),v._v("。")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("顺序运行 matcher 的所有 handlers")]),v._v("，"),e("code",[v._v("运行预处理hook")]),v._v(" 执行完毕后，便会运行 "),e("code",[v._v("matcher")]),v._v("，也就是"),e("strong",[v._v("顺序运行")]),v._v("它的 "),e("code",[v._v("handlers")]),v._v("。")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),e("p",[e("code",[v._v("matcher")]),v._v(" 运行 "),e("code",[v._v("handlers")]),v._v(" 的顺序是: 先运行该 "),e("code",[v._v("matcher")]),v._v(" 的类 "),e("code",[v._v("Matcher")]),v._v(" 注册时添加的 "),e("code",[v._v("handlers")]),v._v("(如果有的话)，再按照装饰器装饰顺序运行装饰的 "),e("code",[v._v("handlers")]),v._v("。")])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("执行运行后处理 hook")]),v._v("，"),e("code",[v._v("matcher")]),v._v(" 的 "),e("code",[v._v("handlers")]),v._v(" 运行完毕后，会执行 "),e("code",[v._v("运行后处理hook")]),v._v("。")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("判断是否停止事件传播")]),v._v("，"),e("code",[v._v("nonebot")]),v._v(" 会根据当前优先级所有 "),e("code",[v._v("matcher")]),v._v(" 的 "),e("code",[v._v("block")]),v._v(" 参数或者 "),e("code",[v._v("StopPropagation")]),v._v(" 异常判断是否停止传播 "),e("code",[v._v("Event")]),v._v("，如果事件没有停止传播，"),e("code",[v._v("nonebot")]),v._v(" 便会返回到第 2 步， 选择出下一优先级的 "),e("code",[v._v("Matcher")]),v._v("。")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("执行事件后处理 hook")]),v._v("，在 "),e("code",[v._v("Event")]),v._v(" 停止传播或执行完所有响应的 "),e("code",[v._v("Matcher")]),v._v(" 后，"),e("code",[v._v("nonebot")]),v._v(" 会执行 "),e("code",[v._v("事件后处理hook")]),v._v("。")]),v._v(" "),e("p",[v._v("当 "),e("code",[v._v("事件后处理hook")]),v._v(" 执行完毕后，当前"),e("code",[v._v("Event")]),v._v("的处理周期就顺利结束了。")])])]),v._v(" "),e("h4",{attrs:{id:"特殊异常处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#特殊异常处理"}},[v._v("#")]),v._v(" 特殊异常处理")]),v._v(" "),e("p",[v._v("在这个阶段，"),e("code",[v._v("nonebot")]),v._v(" 规定了几个特殊的异常，当 "),e("code",[v._v("nonebot")]),v._v(" 捕获到它们时，会用特定的行为来处理它们。")]),v._v(" "),e("ol",[e("li",[e("p",[e("strong",[v._v("IgnoredException")])]),v._v(" "),e("p",[v._v("这个异常可以在 "),e("code",[v._v("事件预处理hook")]),v._v(" 和 "),e("code",[v._v("运行预处理hook")]),v._v(" 抛出。")]),v._v(" "),e("p",[v._v("当 "),e("code",[v._v("事件预处理hook")]),v._v(" 抛出它时，"),e("code",[v._v("nonebot")]),v._v(" 会忽略当前的 "),e("code",[v._v("Event")]),v._v("，不进行处理。")]),v._v(" "),e("p",[v._v("当 "),e("code",[v._v("运行预处理hook")]),v._v(" 抛出它时，"),e("code",[v._v("nonebot")]),v._v(" 会忽略当前的 "),e("code",[v._v("matcher")]),v._v("，结束当前 "),e("code",[v._v("matcher")]),v._v(" 的运行。")]),v._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[v._v("WARNING")]),v._v(" "),e("p",[v._v("当 "),e("code",[v._v("hook")]),v._v(" 需要抛出这个异常时，要写明原因。")])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("PausedException")])]),v._v(" "),e("p",[v._v("这个异常可以在 "),e("code",[v._v("handler")]),v._v(" 中由 "),e("code",[v._v("Matcher.pause")]),v._v(" 抛出。")]),v._v(" "),e("p",[v._v("当 "),e("code",[v._v("nonebot")]),v._v(" 捕获到它时，会停止运行当前 "),e("code",[v._v("handler")]),v._v(" 并结束当前 "),e("code",[v._v("matcher")]),v._v(" 的运行，并将后续的 "),e("code",[v._v("handler")]),v._v(" 交给一个临时 "),e("code",[v._v("Matcher")]),v._v(" 来响应当前交互用户的下一个消息事件，当临时 "),e("code",[v._v("Matcher")]),v._v(" 响应时，临时 "),e("code",[v._v("Matcher")]),v._v(" 会运行后续的 handlers。")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("RejectedException")])]),v._v(" "),e("p",[v._v("这个异常可以在 "),e("code",[v._v("handler")]),v._v(" 中由 "),e("code",[v._v("Matcher.reject")]),v._v(" 抛出。")]),v._v(" "),e("p",[v._v("当 "),e("code",[v._v("nonebot")]),v._v(" 捕获到它时，会停止运行当前 "),e("code",[v._v("handler")]),v._v(" 并结束当前 "),e("code",[v._v("matcher")]),v._v(" 的运行，并将**当前 handler 和后续 "),e("code",[v._v("handler")]),v._v("**交给一个临时 "),e("code",[v._v("Matcher")]),v._v(" 来响应当前交互用户的下一个消息事件，当临时 "),e("code",[v._v("Matcher")]),v._v(" 响应时，临时 "),e("code",[v._v("Matcher")]),v._v(" 会运行当前 "),e("code",[v._v("handler")]),v._v(" 和后续的 "),e("code",[v._v("handler")]),v._v("。")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("FinishedException")])]),v._v(" "),e("p",[v._v("这个异常可以在 "),e("code",[v._v("handler")]),v._v(" 中由 "),e("code",[v._v("Matcher.finish")]),v._v(" 抛出。")]),v._v(" "),e("p",[v._v("当 "),e("code",[v._v("nonebot")]),v._v(" 捕获到它时，会停止运行当前 "),e("code",[v._v("handler")]),v._v(" 并结束当前 "),e("code",[v._v("matcher")]),v._v(" 的运行。")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("StopPropagation")])]),v._v(" "),e("p",[v._v("这个异常一般会在执行 "),e("code",[v._v("运行后处理hook")]),v._v(" 后抛出。")]),v._v(" "),e("p",[v._v("当 "),e("code",[v._v("nonebot")]),v._v(" 捕获到它时， 会停止传播当前 "),e("code",[v._v("Event")]),v._v("，不再寻找下一优先级的 "),e("code",[v._v("Matcher")]),v._v("，直接执行 "),e("code",[v._v("事件后处理hook")]),v._v("。")])])]),v._v(" "),e("h2",{attrs:{id:"调用-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#调用-api"}},[v._v("#")]),v._v(" 调用 API")]),v._v(" "),e("p",[e("code",[v._v("nonebot")]),v._v(" 可以通过 "),e("code",[v._v("bot")]),v._v(" 来调用 API，API 可以向协议端发送数据，也可以向协议端请求更多的数据。")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),e("p",[v._v("不同 "),e("code",[v._v("adapter")]),v._v(" 规定了不同的 API，对应的 API 列表请参照协议规范。")])]),v._v(" "),e("p",[v._v("一般来说，我们可以用 "),e("code",[v._v("bot.*")]),v._v(" 来调用 "),e("code",[v._v("API")]),v._v("(*是 "),e("code",[v._v("API")]),v._v(" 的 "),e("code",[v._v("action")]),v._v(" 或者 "),e("code",[v._v("endpoint")]),v._v(")。")]),v._v(" "),e("p",[v._v("对于发送消息而言，一方面可以调用既有的 API；另一方面 "),e("code",[v._v("nonebot")]),v._v(" 实现了两个便捷方法，"),e("code",[v._v("bot.send(event, message, **kwargs)")]),v._v(" 方法和可以在 "),e("code",[v._v("handler")]),v._v(" 中使用的 "),e("code",[v._v("Matcher.send(message, **kwargs)")]),v._v(" 方法，来向事件主体发送消息。")])])}),[],!1,null,null,null);_.default=t.exports}}]);