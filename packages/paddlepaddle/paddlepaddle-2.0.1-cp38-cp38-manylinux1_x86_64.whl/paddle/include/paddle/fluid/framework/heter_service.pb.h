// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: heter_service.proto

#ifndef PROTOBUF_heter_5fservice_2eproto__INCLUDED
#define PROTOBUF_heter_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace paddle {
namespace framework {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_heter_5fservice_2eproto();
void protobuf_InitDefaults_heter_5fservice_2eproto();
void protobuf_AssignDesc_heter_5fservice_2eproto();
void protobuf_ShutdownFile_heter_5fservice_2eproto();

class HeterRequest;
class HeterResponse;
class VariableMessage;
class VariableMessage_LodData;

enum VariableMessage_Type {
  VariableMessage_Type_BOOL = 0,
  VariableMessage_Type_INT16 = 1,
  VariableMessage_Type_INT32 = 2,
  VariableMessage_Type_INT64 = 3,
  VariableMessage_Type_FP16 = 4,
  VariableMessage_Type_FP32 = 5,
  VariableMessage_Type_FP64 = 6
};
bool VariableMessage_Type_IsValid(int value);
const VariableMessage_Type VariableMessage_Type_Type_MIN = VariableMessage_Type_BOOL;
const VariableMessage_Type VariableMessage_Type_Type_MAX = VariableMessage_Type_FP64;
const int VariableMessage_Type_Type_ARRAYSIZE = VariableMessage_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* VariableMessage_Type_descriptor();
inline const ::std::string& VariableMessage_Type_Name(VariableMessage_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    VariableMessage_Type_descriptor(), value);
}
inline bool VariableMessage_Type_Parse(
    const ::std::string& name, VariableMessage_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VariableMessage_Type>(
    VariableMessage_Type_descriptor(), name, value);
}
enum VarType {
  LOD_TENSOR = 0,
  SELECTED_ROWS = 1,
  NCCL_ID = 2
};
bool VarType_IsValid(int value);
const VarType VarType_MIN = LOD_TENSOR;
const VarType VarType_MAX = NCCL_ID;
const int VarType_ARRAYSIZE = VarType_MAX + 1;

const ::google::protobuf::EnumDescriptor* VarType_descriptor();
inline const ::std::string& VarType_Name(VarType value) {
  return ::google::protobuf::internal::NameOfEnum(
    VarType_descriptor(), value);
}
inline bool VarType_Parse(
    const ::std::string& name, VarType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VarType>(
    VarType_descriptor(), name, value);
}
// ===================================================================

class VariableMessage_LodData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:paddle.framework.VariableMessage.LodData) */ {
 public:
  VariableMessage_LodData();
  virtual ~VariableMessage_LodData();

  VariableMessage_LodData(const VariableMessage_LodData& from);

  inline VariableMessage_LodData& operator=(const VariableMessage_LodData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VariableMessage_LodData& default_instance();

  static const VariableMessage_LodData* internal_default_instance();

  void Swap(VariableMessage_LodData* other);

  // implements Message ----------------------------------------------

  inline VariableMessage_LodData* New() const { return New(NULL); }

  VariableMessage_LodData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VariableMessage_LodData& from);
  void MergeFrom(const VariableMessage_LodData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VariableMessage_LodData* other);
  void UnsafeMergeFrom(const VariableMessage_LodData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 lod_data = 1;
  int lod_data_size() const;
  void clear_lod_data();
  static const int kLodDataFieldNumber = 1;
  ::google::protobuf::int64 lod_data(int index) const;
  void set_lod_data(int index, ::google::protobuf::int64 value);
  void add_lod_data(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      lod_data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_lod_data();

  // @@protoc_insertion_point(class_scope:paddle.framework.VariableMessage.LodData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > lod_data_;
  friend void  protobuf_InitDefaults_heter_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_heter_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_heter_5fservice_2eproto();
  friend void protobuf_ShutdownFile_heter_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<VariableMessage_LodData> VariableMessage_LodData_default_instance_;

// -------------------------------------------------------------------

class VariableMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:paddle.framework.VariableMessage) */ {
 public:
  VariableMessage();
  virtual ~VariableMessage();

  VariableMessage(const VariableMessage& from);

  inline VariableMessage& operator=(const VariableMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VariableMessage& default_instance();

  static const VariableMessage* internal_default_instance();

  void Swap(VariableMessage* other);

  // implements Message ----------------------------------------------

  inline VariableMessage* New() const { return New(NULL); }

  VariableMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VariableMessage& from);
  void MergeFrom(const VariableMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VariableMessage* other);
  void UnsafeMergeFrom(const VariableMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef VariableMessage_LodData LodData;

  typedef VariableMessage_Type Type;
  static const Type BOOL =
    VariableMessage_Type_BOOL;
  static const Type INT16 =
    VariableMessage_Type_INT16;
  static const Type INT32 =
    VariableMessage_Type_INT32;
  static const Type INT64 =
    VariableMessage_Type_INT64;
  static const Type FP16 =
    VariableMessage_Type_FP16;
  static const Type FP32 =
    VariableMessage_Type_FP32;
  static const Type FP64 =
    VariableMessage_Type_FP64;
  static inline bool Type_IsValid(int value) {
    return VariableMessage_Type_IsValid(value);
  }
  static const Type Type_MIN =
    VariableMessage_Type_Type_MIN;
  static const Type Type_MAX =
    VariableMessage_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    VariableMessage_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return VariableMessage_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return VariableMessage_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return VariableMessage_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string varname = 1;
  bool has_varname() const;
  void clear_varname();
  static const int kVarnameFieldNumber = 1;
  const ::std::string& varname() const;
  void set_varname(const ::std::string& value);
  void set_varname(const char* value);
  void set_varname(const char* value, size_t size);
  ::std::string* mutable_varname();
  ::std::string* release_varname();
  void set_allocated_varname(::std::string* varname);

  // optional .paddle.framework.VarType type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::paddle::framework::VarType type() const;
  void set_type(::paddle::framework::VarType value);

  // optional .paddle.framework.VariableMessage.Type data_type = 3;
  bool has_data_type() const;
  void clear_data_type();
  static const int kDataTypeFieldNumber = 3;
  ::paddle::framework::VariableMessage_Type data_type() const;
  void set_data_type(::paddle::framework::VariableMessage_Type value);

  // repeated int64 dims = 4;
  int dims_size() const;
  void clear_dims();
  static const int kDimsFieldNumber = 4;
  ::google::protobuf::int64 dims(int index) const;
  void set_dims(int index, ::google::protobuf::int64 value);
  void add_dims(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      dims() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_dims();

  // optional int64 lod_level = 5;
  bool has_lod_level() const;
  void clear_lod_level();
  static const int kLodLevelFieldNumber = 5;
  ::google::protobuf::int64 lod_level() const;
  void set_lod_level(::google::protobuf::int64 value);

  // repeated .paddle.framework.VariableMessage.LodData lod = 6;
  int lod_size() const;
  void clear_lod();
  static const int kLodFieldNumber = 6;
  const ::paddle::framework::VariableMessage_LodData& lod(int index) const;
  ::paddle::framework::VariableMessage_LodData* mutable_lod(int index);
  ::paddle::framework::VariableMessage_LodData* add_lod();
  ::google::protobuf::RepeatedPtrField< ::paddle::framework::VariableMessage_LodData >*
      mutable_lod();
  const ::google::protobuf::RepeatedPtrField< ::paddle::framework::VariableMessage_LodData >&
      lod() const;

  // optional int64 slr_height = 7;
  bool has_slr_height() const;
  void clear_slr_height();
  static const int kSlrHeightFieldNumber = 7;
  ::google::protobuf::int64 slr_height() const;
  void set_slr_height(::google::protobuf::int64 value);

  // optional bytes data = 8;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 8;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:paddle.framework.VariableMessage)
 private:
  inline void set_has_varname();
  inline void clear_has_varname();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_data_type();
  inline void clear_has_data_type();
  inline void set_has_lod_level();
  inline void clear_has_lod_level();
  inline void set_has_slr_height();
  inline void clear_has_slr_height();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > dims_;
  ::google::protobuf::RepeatedPtrField< ::paddle::framework::VariableMessage_LodData > lod_;
  ::google::protobuf::internal::ArenaStringPtr varname_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  int type_;
  int data_type_;
  ::google::protobuf::int64 lod_level_;
  ::google::protobuf::int64 slr_height_;
  friend void  protobuf_InitDefaults_heter_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_heter_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_heter_5fservice_2eproto();
  friend void protobuf_ShutdownFile_heter_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<VariableMessage> VariableMessage_default_instance_;

// -------------------------------------------------------------------

class HeterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:paddle.framework.HeterRequest) */ {
 public:
  HeterRequest();
  virtual ~HeterRequest();

  HeterRequest(const HeterRequest& from);

  inline HeterRequest& operator=(const HeterRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeterRequest& default_instance();

  static const HeterRequest* internal_default_instance();

  void Swap(HeterRequest* other);

  // implements Message ----------------------------------------------

  inline HeterRequest* New() const { return New(NULL); }

  HeterRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeterRequest& from);
  void MergeFrom(const HeterRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeterRequest* other);
  void UnsafeMergeFrom(const HeterRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // optional int32 cur_batch = 2;
  bool has_cur_batch() const;
  void clear_cur_batch();
  static const int kCurBatchFieldNumber = 2;
  ::google::protobuf::int32 cur_batch() const;
  void set_cur_batch(::google::protobuf::int32 value);

  // repeated .paddle.framework.VariableMessage vars = 3;
  int vars_size() const;
  void clear_vars();
  static const int kVarsFieldNumber = 3;
  const ::paddle::framework::VariableMessage& vars(int index) const;
  ::paddle::framework::VariableMessage* mutable_vars(int index);
  ::paddle::framework::VariableMessage* add_vars();
  ::google::protobuf::RepeatedPtrField< ::paddle::framework::VariableMessage >*
      mutable_vars();
  const ::google::protobuf::RepeatedPtrField< ::paddle::framework::VariableMessage >&
      vars() const;

  // @@protoc_insertion_point(class_scope:paddle.framework.HeterRequest)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_cur_batch();
  inline void clear_has_cur_batch();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::paddle::framework::VariableMessage > vars_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 cur_batch_;
  friend void  protobuf_InitDefaults_heter_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_heter_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_heter_5fservice_2eproto();
  friend void protobuf_ShutdownFile_heter_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeterRequest> HeterRequest_default_instance_;

// -------------------------------------------------------------------

class HeterResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:paddle.framework.HeterResponse) */ {
 public:
  HeterResponse();
  virtual ~HeterResponse();

  HeterResponse(const HeterResponse& from);

  inline HeterResponse& operator=(const HeterResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeterResponse& default_instance();

  static const HeterResponse* internal_default_instance();

  void Swap(HeterResponse* other);

  // implements Message ----------------------------------------------

  inline HeterResponse* New() const { return New(NULL); }

  HeterResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeterResponse& from);
  void MergeFrom(const HeterResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeterResponse* other);
  void UnsafeMergeFrom(const HeterResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .paddle.framework.VariableMessage vars = 1;
  int vars_size() const;
  void clear_vars();
  static const int kVarsFieldNumber = 1;
  const ::paddle::framework::VariableMessage& vars(int index) const;
  ::paddle::framework::VariableMessage* mutable_vars(int index);
  ::paddle::framework::VariableMessage* add_vars();
  ::google::protobuf::RepeatedPtrField< ::paddle::framework::VariableMessage >*
      mutable_vars();
  const ::google::protobuf::RepeatedPtrField< ::paddle::framework::VariableMessage >&
      vars() const;

  // @@protoc_insertion_point(class_scope:paddle.framework.HeterResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::paddle::framework::VariableMessage > vars_;
  friend void  protobuf_InitDefaults_heter_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_heter_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_heter_5fservice_2eproto();
  friend void protobuf_ShutdownFile_heter_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeterResponse> HeterResponse_default_instance_;

// ===================================================================

class HeterService_Stub;

class HeterService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline HeterService() {};
 public:
  virtual ~HeterService();

  typedef HeterService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void service(::google::protobuf::RpcController* controller,
                       const ::paddle::framework::HeterRequest* request,
                       ::paddle::framework::HeterResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(HeterService);
};

class HeterService_Stub : public HeterService {
 public:
  HeterService_Stub(::google::protobuf::RpcChannel* channel);
  HeterService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~HeterService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements HeterService ------------------------------------------

  void service(::google::protobuf::RpcController* controller,
                       const ::paddle::framework::HeterRequest* request,
                       ::paddle::framework::HeterResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(HeterService_Stub);
};


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// VariableMessage_LodData

// repeated int64 lod_data = 1;
inline int VariableMessage_LodData::lod_data_size() const {
  return lod_data_.size();
}
inline void VariableMessage_LodData::clear_lod_data() {
  lod_data_.Clear();
}
inline ::google::protobuf::int64 VariableMessage_LodData::lod_data(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.VariableMessage.LodData.lod_data)
  return lod_data_.Get(index);
}
inline void VariableMessage_LodData::set_lod_data(int index, ::google::protobuf::int64 value) {
  lod_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:paddle.framework.VariableMessage.LodData.lod_data)
}
inline void VariableMessage_LodData::add_lod_data(::google::protobuf::int64 value) {
  lod_data_.Add(value);
  // @@protoc_insertion_point(field_add:paddle.framework.VariableMessage.LodData.lod_data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
VariableMessage_LodData::lod_data() const {
  // @@protoc_insertion_point(field_list:paddle.framework.VariableMessage.LodData.lod_data)
  return lod_data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
VariableMessage_LodData::mutable_lod_data() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.VariableMessage.LodData.lod_data)
  return &lod_data_;
}

inline const VariableMessage_LodData* VariableMessage_LodData::internal_default_instance() {
  return &VariableMessage_LodData_default_instance_.get();
}
// -------------------------------------------------------------------

// VariableMessage

// optional string varname = 1;
inline bool VariableMessage::has_varname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VariableMessage::set_has_varname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VariableMessage::clear_has_varname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VariableMessage::clear_varname() {
  varname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_varname();
}
inline const ::std::string& VariableMessage::varname() const {
  // @@protoc_insertion_point(field_get:paddle.framework.VariableMessage.varname)
  return varname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VariableMessage::set_varname(const ::std::string& value) {
  set_has_varname();
  varname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paddle.framework.VariableMessage.varname)
}
inline void VariableMessage::set_varname(const char* value) {
  set_has_varname();
  varname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle.framework.VariableMessage.varname)
}
inline void VariableMessage::set_varname(const char* value, size_t size) {
  set_has_varname();
  varname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle.framework.VariableMessage.varname)
}
inline ::std::string* VariableMessage::mutable_varname() {
  set_has_varname();
  // @@protoc_insertion_point(field_mutable:paddle.framework.VariableMessage.varname)
  return varname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VariableMessage::release_varname() {
  // @@protoc_insertion_point(field_release:paddle.framework.VariableMessage.varname)
  clear_has_varname();
  return varname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VariableMessage::set_allocated_varname(::std::string* varname) {
  if (varname != NULL) {
    set_has_varname();
  } else {
    clear_has_varname();
  }
  varname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), varname);
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.VariableMessage.varname)
}

// optional .paddle.framework.VarType type = 2;
inline bool VariableMessage::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VariableMessage::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VariableMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VariableMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::paddle::framework::VarType VariableMessage::type() const {
  // @@protoc_insertion_point(field_get:paddle.framework.VariableMessage.type)
  return static_cast< ::paddle::framework::VarType >(type_);
}
inline void VariableMessage::set_type(::paddle::framework::VarType value) {
  assert(::paddle::framework::VarType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.VariableMessage.type)
}

// optional .paddle.framework.VariableMessage.Type data_type = 3;
inline bool VariableMessage::has_data_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VariableMessage::set_has_data_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VariableMessage::clear_has_data_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VariableMessage::clear_data_type() {
  data_type_ = 0;
  clear_has_data_type();
}
inline ::paddle::framework::VariableMessage_Type VariableMessage::data_type() const {
  // @@protoc_insertion_point(field_get:paddle.framework.VariableMessage.data_type)
  return static_cast< ::paddle::framework::VariableMessage_Type >(data_type_);
}
inline void VariableMessage::set_data_type(::paddle::framework::VariableMessage_Type value) {
  assert(::paddle::framework::VariableMessage_Type_IsValid(value));
  set_has_data_type();
  data_type_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.VariableMessage.data_type)
}

// repeated int64 dims = 4;
inline int VariableMessage::dims_size() const {
  return dims_.size();
}
inline void VariableMessage::clear_dims() {
  dims_.Clear();
}
inline ::google::protobuf::int64 VariableMessage::dims(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.VariableMessage.dims)
  return dims_.Get(index);
}
inline void VariableMessage::set_dims(int index, ::google::protobuf::int64 value) {
  dims_.Set(index, value);
  // @@protoc_insertion_point(field_set:paddle.framework.VariableMessage.dims)
}
inline void VariableMessage::add_dims(::google::protobuf::int64 value) {
  dims_.Add(value);
  // @@protoc_insertion_point(field_add:paddle.framework.VariableMessage.dims)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
VariableMessage::dims() const {
  // @@protoc_insertion_point(field_list:paddle.framework.VariableMessage.dims)
  return dims_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
VariableMessage::mutable_dims() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.VariableMessage.dims)
  return &dims_;
}

// optional int64 lod_level = 5;
inline bool VariableMessage::has_lod_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VariableMessage::set_has_lod_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VariableMessage::clear_has_lod_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VariableMessage::clear_lod_level() {
  lod_level_ = GOOGLE_LONGLONG(0);
  clear_has_lod_level();
}
inline ::google::protobuf::int64 VariableMessage::lod_level() const {
  // @@protoc_insertion_point(field_get:paddle.framework.VariableMessage.lod_level)
  return lod_level_;
}
inline void VariableMessage::set_lod_level(::google::protobuf::int64 value) {
  set_has_lod_level();
  lod_level_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.VariableMessage.lod_level)
}

// repeated .paddle.framework.VariableMessage.LodData lod = 6;
inline int VariableMessage::lod_size() const {
  return lod_.size();
}
inline void VariableMessage::clear_lod() {
  lod_.Clear();
}
inline const ::paddle::framework::VariableMessage_LodData& VariableMessage::lod(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.VariableMessage.lod)
  return lod_.Get(index);
}
inline ::paddle::framework::VariableMessage_LodData* VariableMessage::mutable_lod(int index) {
  // @@protoc_insertion_point(field_mutable:paddle.framework.VariableMessage.lod)
  return lod_.Mutable(index);
}
inline ::paddle::framework::VariableMessage_LodData* VariableMessage::add_lod() {
  // @@protoc_insertion_point(field_add:paddle.framework.VariableMessage.lod)
  return lod_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::paddle::framework::VariableMessage_LodData >*
VariableMessage::mutable_lod() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.VariableMessage.lod)
  return &lod_;
}
inline const ::google::protobuf::RepeatedPtrField< ::paddle::framework::VariableMessage_LodData >&
VariableMessage::lod() const {
  // @@protoc_insertion_point(field_list:paddle.framework.VariableMessage.lod)
  return lod_;
}

// optional int64 slr_height = 7;
inline bool VariableMessage::has_slr_height() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void VariableMessage::set_has_slr_height() {
  _has_bits_[0] |= 0x00000040u;
}
inline void VariableMessage::clear_has_slr_height() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void VariableMessage::clear_slr_height() {
  slr_height_ = GOOGLE_LONGLONG(0);
  clear_has_slr_height();
}
inline ::google::protobuf::int64 VariableMessage::slr_height() const {
  // @@protoc_insertion_point(field_get:paddle.framework.VariableMessage.slr_height)
  return slr_height_;
}
inline void VariableMessage::set_slr_height(::google::protobuf::int64 value) {
  set_has_slr_height();
  slr_height_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.VariableMessage.slr_height)
}

// optional bytes data = 8;
inline bool VariableMessage::has_data() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void VariableMessage::set_has_data() {
  _has_bits_[0] |= 0x00000080u;
}
inline void VariableMessage::clear_has_data() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void VariableMessage::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& VariableMessage::data() const {
  // @@protoc_insertion_point(field_get:paddle.framework.VariableMessage.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VariableMessage::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paddle.framework.VariableMessage.data)
}
inline void VariableMessage::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle.framework.VariableMessage.data)
}
inline void VariableMessage::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle.framework.VariableMessage.data)
}
inline ::std::string* VariableMessage::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:paddle.framework.VariableMessage.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VariableMessage::release_data() {
  // @@protoc_insertion_point(field_release:paddle.framework.VariableMessage.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VariableMessage::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.VariableMessage.data)
}

inline const VariableMessage* VariableMessage::internal_default_instance() {
  return &VariableMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// HeterRequest

// required int32 cmd = 1;
inline bool HeterRequest::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeterRequest::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeterRequest::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeterRequest::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 HeterRequest::cmd() const {
  // @@protoc_insertion_point(field_get:paddle.framework.HeterRequest.cmd)
  return cmd_;
}
inline void HeterRequest::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.HeterRequest.cmd)
}

// optional int32 cur_batch = 2;
inline bool HeterRequest::has_cur_batch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeterRequest::set_has_cur_batch() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeterRequest::clear_has_cur_batch() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeterRequest::clear_cur_batch() {
  cur_batch_ = 0;
  clear_has_cur_batch();
}
inline ::google::protobuf::int32 HeterRequest::cur_batch() const {
  // @@protoc_insertion_point(field_get:paddle.framework.HeterRequest.cur_batch)
  return cur_batch_;
}
inline void HeterRequest::set_cur_batch(::google::protobuf::int32 value) {
  set_has_cur_batch();
  cur_batch_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.HeterRequest.cur_batch)
}

// repeated .paddle.framework.VariableMessage vars = 3;
inline int HeterRequest::vars_size() const {
  return vars_.size();
}
inline void HeterRequest::clear_vars() {
  vars_.Clear();
}
inline const ::paddle::framework::VariableMessage& HeterRequest::vars(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.HeterRequest.vars)
  return vars_.Get(index);
}
inline ::paddle::framework::VariableMessage* HeterRequest::mutable_vars(int index) {
  // @@protoc_insertion_point(field_mutable:paddle.framework.HeterRequest.vars)
  return vars_.Mutable(index);
}
inline ::paddle::framework::VariableMessage* HeterRequest::add_vars() {
  // @@protoc_insertion_point(field_add:paddle.framework.HeterRequest.vars)
  return vars_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::paddle::framework::VariableMessage >*
HeterRequest::mutable_vars() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.HeterRequest.vars)
  return &vars_;
}
inline const ::google::protobuf::RepeatedPtrField< ::paddle::framework::VariableMessage >&
HeterRequest::vars() const {
  // @@protoc_insertion_point(field_list:paddle.framework.HeterRequest.vars)
  return vars_;
}

inline const HeterRequest* HeterRequest::internal_default_instance() {
  return &HeterRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// HeterResponse

// repeated .paddle.framework.VariableMessage vars = 1;
inline int HeterResponse::vars_size() const {
  return vars_.size();
}
inline void HeterResponse::clear_vars() {
  vars_.Clear();
}
inline const ::paddle::framework::VariableMessage& HeterResponse::vars(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.HeterResponse.vars)
  return vars_.Get(index);
}
inline ::paddle::framework::VariableMessage* HeterResponse::mutable_vars(int index) {
  // @@protoc_insertion_point(field_mutable:paddle.framework.HeterResponse.vars)
  return vars_.Mutable(index);
}
inline ::paddle::framework::VariableMessage* HeterResponse::add_vars() {
  // @@protoc_insertion_point(field_add:paddle.framework.HeterResponse.vars)
  return vars_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::paddle::framework::VariableMessage >*
HeterResponse::mutable_vars() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.HeterResponse.vars)
  return &vars_;
}
inline const ::google::protobuf::RepeatedPtrField< ::paddle::framework::VariableMessage >&
HeterResponse::vars() const {
  // @@protoc_insertion_point(field_list:paddle.framework.HeterResponse.vars)
  return vars_;
}

inline const HeterResponse* HeterResponse::internal_default_instance() {
  return &HeterResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace framework
}  // namespace paddle

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::paddle::framework::VariableMessage_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::paddle::framework::VariableMessage_Type>() {
  return ::paddle::framework::VariableMessage_Type_descriptor();
}
template <> struct is_proto_enum< ::paddle::framework::VarType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::paddle::framework::VarType>() {
  return ::paddle::framework::VarType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_heter_5fservice_2eproto__INCLUDED
