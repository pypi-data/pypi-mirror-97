{"version":3,"sources":["webpack://paper-admin/./paper_admin/static/paper_admin/src/js/components/sortable_table/ListTree.js","webpack://paper-admin/./paper_admin/static/paper_admin/src/js/components/sortable_table/StaggerHighlight.js","webpack://paper-admin/./paper_admin/static/paper_admin/src/js/components/sortable_table/SortableTable.js","webpack://paper-admin/./paper_admin/static/paper_admin/src/js/components/actions.js","webpack://paper-admin/./paper_admin/static/paper_admin/src/js/components/search.js","webpack://paper-admin/./paper_admin/static/paper_admin/src/js/changelist.js","webpack://paper-admin/./paper_admin/static/paper_admin/src/js/components/RelatedObjectLookups.js"],"names":["ListTree","elements","this","_buildTree","prototype","_createNode","child","dataset","pk","parseInt","id","parent","element","childs","_addNode","node","_nodes","isNaN","_roots","push","getNode","Error","stack","forEach","elem","length","stack_node","unshift","shift","bind","getRoots","map","root_node","getDescendants","reduce","result","child_pk","child_node","concat","StaggerHighlight","options","opts","Object","assign","className","staggerMin","staggerMax","_elements","_isReleased","_timer","_createTimer","i","count","speed","Math","max","setInterval","classList","add","_destroyTimer","_removeClass","clearInterval","remove","release","SortableTable","table","url","tree","handler","disabledClass","tbody","querySelector","_createSortable","Sortable","animation","draggable","handle","filter","ghostClass","onStart","_onStart","onMove","_onMove","onEnd","_onEnd","evt","rows","querySelectorAll","item_parentId","item","row","parentId","related","contains","moved","_getMovedRows","_normalizeTable","_createOrderMap","highlighter","_sendRequest","then","sliceStart","min","oldIndex","newIndex","sliceEnd","slice","Array","call","pk_array","order_array","order","pop","setAttribute","prev","previousElementSibling","next","nextElementSibling","parents","isPrevSibling","isNextChild","indexOf","Element","after","apply","data","fetch","method","credentials","headers","body","JSON","stringify","response","ok","error","status","statusText","TOGGLE_ALL_ID","CHECKBOX_LABEL_SELECTOR","toggleRows","checked","tagName","dispatchEvent","CustomEvent","bubbles","cancelable","detail","state","updateCounter","inputs","selected","sum","input","document","counter","innerHTML","interpolate","ngettext","sel","cnt","actionsIcnt","question","hidden","showQuestion","clearAcross","setAcrossInput","value","Number","allContainer","clear","whenDomReady","checkboxes","lastChecked","getElementById","allToggleInput","addEventListener","closest","event","target","Boolean","toggle","find","label_clicked","checkbox_label","checkbox","preventDefault","shiftKey","lastIndex","targetIndex","startIndex","endIndex","ctrlKey","selectAcross","list_editable_changed","form","confirm","gettext","save_button","action_selects","action_changed","every","select","protectEditForm","initActions","from","window","defaultPrevented","pagination","key","click","orderUrl","$","tooltip","title","placement","trigger","html","delay","show","hide","id_to_windowname","text","replace","windowname_to_id","showAdminPopup","triggeringLink","name_regexp","add_popup","name","href","browser_left","screenX","screenLeft","browser_top","screenY","screenTop","browser_width","outerWidth","clientWidth","browser_height","outerHeight","clientHeight","top_position","round","left_position","open","focus","showRelatedObjectLookupPopup","showRelatedObjectPopup","updateRelatedObjectLinks","$this","siblings","val","each","elm","attr","removeAttr","dismissAddRelatedObjectPopup","win","newId","newRepr","elemName","nodeName","toUpperCase","Option","close","dismissRelatedLookupPopup","chosenId","dismissChangeRelatedObjectPopup","objId","textContent","dismissDeleteRelatedObjectPopup","showAddAnotherPopup","dismissAddAnotherPopup","ready","on","opener","e","Event","isDefaultPrevented"],"mappings":"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","file":"changelist.chunk.min.js","sourcesContent":["/**\n * Представление списка DOM-элементов в виде дерева.\n * Каждый DOM-элемент должен иметь data-атрибуты: id, parent.\n * Каждый дочерний узел должен идти после родителя.\n * @module ListTree\n */\n\n/**\n * @typedef {Object} module:ListTree.ListTreeNode\n * @property {Number}       pk\n * @property {Number}       parent\n * @property {HTMLElement}  element\n * @property {Number[]}     childs\n */\n\n/**\n * Конструктор объектов ListTree.\n * @param {NodeList|Element[]} elements\n * @constructor\n */\nfunction ListTree(elements) {\n    this._buildTree(elements);\n}\n\n/**\n * Создание узла дерева.\n * @param {HTMLElement} child\n * @returns {module:ListTree.ListTreeNode}\n * @private\n */\nListTree.prototype._createNode = function(child) {\n    const dataset = child.dataset;\n    return {\n        pk: parseInt(dataset.id),\n        parent: parseInt(dataset.parent),\n        element: child,\n        childs: []\n    };\n};\n\n/**\n * Добавление узла дерева в карту, для быстрого поиска по ID.\n * @param {module:ListTree.ListTreeNode} node\n * @returns {Boolean}\n * @private\n */\nListTree.prototype._addNode = function(node) {\n    if (node && (typeof node.pk === 'number')) {\n        this._nodes[node.pk] = node;\n        if (isNaN(node.parent)) {\n            this._roots.push(node);\n        }\n        return true;\n    }\n    return false;\n};\n\n/**\n * Получение узла по ID.\n * @param {Number} pk\n * @returns {module:ListTree.ListTreeNode}\n */\nListTree.prototype.getNode = function(pk) {\n    if (this._nodes === null) {\n        throw new Error('tree is empty');\n    }\n    if (!(pk in this._nodes)) {\n        throw new Error(`node ${pk} not found`);\n    }\n    return this._nodes[pk];\n};\n\n/**\n * Построение дерева из элементов.\n * @param {Element[]} elements\n * @private\n */\nListTree.prototype._buildTree = function(elements) {\n    const stack = [];\n\n    this._nodes = {};\n    this._roots = [];\n    elements.forEach(function(elem) {\n        let node = this._createNode(elem);\n        this._addNode(node);\n\n        while (stack.length) {\n            let stack_node = stack[0];\n            if (node.parent === stack_node.pk) {\n                stack_node.childs.push(node.pk);\n                stack.unshift(node);\n                return\n            }\n            stack.shift();\n        }\n\n        stack.unshift(node);\n    }.bind(this));\n};\n\n/**\n * Получение корневых элементов.\n * @returns {Element[]}\n */\nListTree.prototype.getRoots = function() {\n    if (this._roots === null) {\n        throw new Error('tree is empty');\n    }\n    return this._roots.map(function(root_node) {\n        return root_node.element\n    }.bind(this));\n};\n\n/**\n * Получение всех потомков узла.\n * @param {Number} pk\n * @returns {Element[]}\n */\nListTree.prototype.getDescendants = function(pk) {\n    const node = this.getNode(pk);\n    return node.childs.reduce(function(result, child_pk) {\n        let child_node = this.getNode(child_pk);\n        if (child_node) {\n            result.push(child_node.element);\n            result = result.concat(this.getDescendants(child_pk));\n        }\n        return result\n    }.bind(this), []);\n};\n\n\nexport default ListTree;\n","/**\n * Прелоадер для списков / таблиц.\n * Последовательно добавляет класс DOM-элементам и удаляет этот класс,\n * когда выполняется последнее событие из:\n * a) всем элементам был добавлен класс\n * b) вызван метод release()\n * @module StaggerHighlight\n */\n\n/**\n * @typedef {Object} module:StaggerHighlight.StaggerHighlightOptions\n * @property {String} className\n * @property {Number} staggerMin\n * @property {Number} staggerMax\n */\n\n/**\n * Конструктор объектов StaggerHighlight.\n * @param {Element[]} elements\n * @param {module:StaggerHighlight.StaggerHighlightOptions} [options]\n * @constructor\n */\nfunction StaggerHighlight(elements, options) {\n    /** @type module:StaggerHighlight.StaggerHighlightOptions */\n    this.opts = Object.assign({\n        className: 'highlight',\n        staggerMin: 12,\n        staggerMax: 50\n    }, options);\n\n    /**\n     * @type {Element[]}\n     * @private\n     */\n    this._elements = elements;\n\n    /**\n     * @type {Boolean}\n     * @private\n     */\n    this._isReleased = false;\n\n    /**\n     * @type {?Number}\n     * @private\n     */\n    this._timer = this._createTimer();\n}\n\n/**\n * Создание таймера, выделяюего элементы один за другим.\n * @returns {Number}\n * @private\n */\nStaggerHighlight.prototype._createTimer = function() {\n    let i = 0;\n    const count = this._elements.length;\n    const speed = Math.max(this.opts.staggerMin, this.staggerMax * 2 / count);\n    return setInterval(function() {\n        if (i < count) {\n            this._elements[i].classList.add(this.opts.className);\n            i++;\n        } else {\n            this._destroyTimer();\n            if (this._isReleased) {\n                this._removeClass();\n            }\n        }\n    }.bind(this), speed);\n};\n\n/**\n * Уничтожение таймера.\n * @private\n */\nStaggerHighlight.prototype._destroyTimer = function() {\n    if (this._timer !== null) {\n        clearInterval(this._timer);\n        this._timer = null;\n    }\n};\n\n/**\n * Немедленное удаление класса со всех элементов.\n * @private\n */\nStaggerHighlight.prototype._removeClass = function() {\n    this._elements.forEach(function(node) {\n        node.classList.remove(this.opts.className);\n    }.bind(this));\n};\n\n/**\n * Сигнал завершения операции.\n */\nStaggerHighlight.prototype.release = function() {\n    this._isReleased = true;\n    if (this._timer === null) {\n        this._removeClass();\n    }\n};\n\n\nexport default StaggerHighlight;\n","/**\n * Таблица с возможностью сортировки строк.\n * Каждая строка должна иметь атрибут data-id.\n * В случае, если строки представляют дерево, то еще необходим атрибут data-parent.\n * @module SortableTable\n */\n\n/**\n * @typedef {Object} module:SortableTable.SortableTableOptions\n * @property {String}  url\n * @property {Boolean} [tree]\n * @property {String}  [handler]\n * @property {String}  [disabledClass]\n */\n\nimport Sortable from \"sortablejs\";\nimport ListTree from \"./ListTree\";\nimport StaggerHighlight from \"./StaggerHighlight\";\n\n/**\n * Конструктор объектов SortableTable.\n * @param {Element} table\n * @param {module:SortableTable.SortableTableOptions} [options]\n * @constructor\n */\nfunction SortableTable(table, options) {\n    /** @type {module:SortableTable.SortableTableOptions} */\n    this.opts = Object.assign({\n        url: null,\n        tree: false,\n        handler: '.handler',\n        disabledClass: 'disabled'\n    }, options);\n\n    /** @type {Element} */\n    this.table = table;\n\n    /** @type {Element} */\n    this.tbody = table.querySelector('tbody');\n    if (!this.tbody) {\n        throw new Error('table body not found');\n    }\n\n    /** @type {?ListTree} */\n    this.tree = null;\n\n    this._createSortable();\n}\n\n/**\n * Инициализация плагина сортировки.\n * @private\n */\nSortableTable.prototype._createSortable = function() {\n    return Sortable.create(this.tbody, {\n        animation: 0,\n        draggable: 'tr',\n        handle: this.opts.handler,\n        filter: '.' + this.opts.disabledClass,\n        ghostClass: 'sortable-ghost',\n        onStart: this._onStart.bind(this),\n        onMove: this._onMove.bind(this),\n        onEnd: this._onEnd.bind(this),\n    });\n};\n\n/**\n * Обработчик события начала перетаскивания.\n * @param evt\n * @private\n */\nSortableTable.prototype._onStart = function(evt) {\n    const rows = this.tbody.querySelectorAll('tr');\n\n    if (this.opts.tree) {\n        this.tree = new ListTree(rows);\n    }\n\n    // блокируем все узлы, кроме соседних\n    const item_parentId = parseInt(evt.item.dataset.parent);\n    rows.forEach(function(row) {\n        const parentId = parseInt(row.dataset.parent);\n        if ((!isNaN(parentId) || !isNaN(item_parentId)) && parentId !== item_parentId) {\n            row.classList.add(this.opts.disabledClass);\n        }\n    }.bind(this));\n};\n\n/**\n * Обработчик события перетаскивания.\n * @param evt\n * @returns {Boolean}\n * @private\n */\nSortableTable.prototype._onMove = function(evt) {\n    return !evt.related.classList.contains(this.opts.disabledClass);\n};\n\n/**\n * Обработчик события завершения перетаскивания.\n * @param evt\n * @private\n */\nSortableTable.prototype._onEnd = function(evt) {\n    // снимаем блокировку со всех узлов\n    const rows = this.tbody.querySelectorAll('tr');\n    rows.forEach(function(row) {\n        row.classList.remove(this.opts.disabledClass);\n    }.bind(this));\n\n    let moved = this._getMovedRows(evt);\n    if (!moved.length) {\n        return\n    }\n\n    this._normalizeTable(evt, moved);\n\n    const map = this._createOrderMap(evt, moved);\n\n    // выделение рядов, учавствовавших в перемещении\n    const highlighter = new StaggerHighlight(moved);\n    this._sendRequest(map).then(function() {\n        highlighter.release();\n    });\n};\n\n/**\n * Получение строк, чей порядок изменился.\n * @param evt\n * @returns {Element[]}\n * @private\n */\nSortableTable.prototype._getMovedRows = function(evt) {\n    const sliceStart = Math.min(evt.oldIndex, evt.newIndex);\n    const sliceEnd = Math.max(evt.oldIndex, evt.newIndex);\n    const rows = this.tbody.querySelectorAll('tr');\n    let slice = Array.prototype.slice.call(rows, sliceStart, sliceEnd + 1);\n    if (this.tree) {\n        // пропускаем узлы, не являющиеся соседними\n        const pk = parseInt(evt.item.dataset.id);\n        const node = this.tree.getNode(pk);\n        slice = slice.filter(function(row) {\n            return parseInt(row.dataset.parent) === node.parent\n        });\n    }\n    return slice;\n};\n\n/**\n * Создание карты новых значений сортировки строк.\n * @param evt\n * @param {Element[]} rows\n * @returns {Object}\n * @private\n */\nSortableTable.prototype._createOrderMap = function(evt, rows) {\n    const pk_array = [];\n    const order_array = [];\n    rows.forEach(function(row) {\n        const handle = row.querySelector(this.opts.handler);\n        if (handle) {\n            pk_array.push(parseInt(row.dataset.id));\n            order_array.push(parseInt(handle.dataset.order));\n        }\n    }.bind(this));\n\n    // циклический сдвиг значений order\n    const movedDown = evt.oldIndex < evt.newIndex;\n    if (movedDown) {\n        order_array.unshift(order_array.pop());\n    } else {\n        order_array.push(order_array.shift());\n    }\n\n    return pk_array.reduce(function(result, pk, i) {\n        result[pk] = order_array[i];\n\n        // обновляем атрибут order\n        const row = this.tbody.querySelector('tr[data-id=\"'+pk+'\"]');\n        row.querySelector(this.opts.handler).setAttribute('data-order', order_array[i]);\n\n        return result;\n    }.bind(this), {});\n};\n\n/**\n * Нормализация таблицы.\n * Все дочерние строки перемещаются под своего родителя.\n * Без этого метода может случиться ситуация, когда элемент\n * был перемещен между своим соседом и его детьми.\n * @param evt\n * @param {Element[]} moved\n * @private\n */\nSortableTable.prototype._normalizeTable = function(evt, moved) {\n    if (this.tree) {\n        const pk = parseInt(evt.item.dataset.id);\n        const node = this.tree.getNode(pk);\n        const prev = evt.item.previousElementSibling;\n        const next = evt.item.nextElementSibling;\n        const parents = moved.slice();\n        if (prev && next) {\n            // если предыдущая строка - сосед, а следующая - ребенок соседа,\n            // то сосед должен быть в списке нормализации.\n            const isPrevSibling = parseInt(prev.dataset.parent) === node.parent;\n            const isNextChild = parseInt(next.dataset.parent) === parseInt(prev.dataset.id);\n            if (isPrevSibling && isNextChild && (parents.indexOf(prev) < 0)) {\n                parents.unshift(prev);\n            }\n        }\n\n        // перенос детей под родителя\n        parents.forEach(function(parent) {\n            const pk = parseInt(parent.dataset.id);\n            const childs = this.tree.getDescendants(pk);\n            Element.prototype.after.apply(parent, childs);\n        }.bind(this));\n    }\n};\n\n/**\n * Отправка новых значений сортировки на сервер.\n * @param {Object} data\n * @returns {Promise<Response>}\n * @private\n */\nSortableTable.prototype._sendRequest = function(data) {\n    return fetch(this.opts.url, {\n        method: 'POST',\n        credentials: 'same-origin',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    }).then(function(response) {\n        if (!response.ok) {\n            const error = new Error(`${response.status} ${response.statusText}`);\n            error.response = response;\n            throw error;\n        }\n    });\n};\n\n\nexport default SortableTable;\n","/*global gettext, interpolate, ngettext*/\n\nimport whenDomReady from \"when-dom-ready\";\n\nconst TOGGLE_ALL_ID = 'action-toggle';\nconst CHECKBOX_CLASS = 'action-select';\nconst CHECKBOX_LABEL_SELECTOR = '.action-checkbox .vCustomCheckbox';\nconst COUNTER_CLASS = 'action-counter';\nconst QUESTION_CLASS= 'action-question';\nconst ALL_CLASS = 'action-all';\nconst ACROSS_CLASS = 'select-across';\nconst CLEAR_CLASS = 'action-clear';\n\n\nwhenDomReady(function() {\n    const checkboxes = document.querySelectorAll(`.${CHECKBOX_CLASS}`);\n    if (checkboxes.length) {\n        initActions(Array.from(checkboxes));\n    }\n});\n\n\nfunction initActions(inputs) {\n    let lastChecked = null;\n    const table = document.getElementById('result_list');\n    const allToggleInput = document.getElementById(TOGGLE_ALL_ID);\n\n    // клик на чекбокс \"выбрать все\"\n    allToggleInput.addEventListener('change', function() {\n        const rows = inputs.map(input => input.closest('tr'));\n        toggleRows(rows, this.checked);\n        updateCounter(inputs);\n    });\n\n    // пользовательское событие выделения ряда таблицы\n    table.addEventListener('select', function(event) {\n        const target = event.target;\n        if ((target.tagName !== 'TR') || (target.closest('table') !== table)) {\n            return\n        }\n\n        const state = Boolean(event.detail.state);\n        const checkbox = target.querySelector(`.${CHECKBOX_CLASS}`);\n        checkbox.checked = state;\n        target.classList.toggle('selected', state);\n\n        // все ли чекбоксы выделены\n        allToggleInput.checked = inputs.find(input => !input.checked) == null;\n    });\n\n    table.addEventListener('click', function(event) {\n        const target = event.target;\n        const row = target.closest('tr');\n        const label_clicked = target.closest(CHECKBOX_LABEL_SELECTOR);\n        const checkbox_label = row && row.querySelector(CHECKBOX_LABEL_SELECTOR);\n        const checkbox = checkbox_label && checkbox_label.querySelector(`.${CHECKBOX_CLASS}`);\n\n        // клик вне строк таблицы\n        if (!row) {\n            return\n        }\n\n        // отмена выделения чекбокса при клике на <label>\n        if (label_clicked) {\n            event.preventDefault();\n        }\n\n        if (event.shiftKey && lastChecked && (lastChecked !== checkbox)) {\n            // массовое выделение (через Shift)\n            const lastIndex = inputs.indexOf(lastChecked);\n            const targetIndex = inputs.indexOf(checkbox);\n            const startIndex = Math.min(lastIndex, targetIndex);\n            const endIndex = Math.max(lastIndex, targetIndex);\n            const input_slice = inputs.slice(startIndex, endIndex + 1);\n            const rows = input_slice.map(input => input.closest('tr'));\n            toggleRows(rows, lastChecked.checked);\n        } else if (label_clicked || (event.ctrlKey && !event.shiftKey)) {\n            // клик на чекбокс или на строку через Ctrl\n            lastChecked = checkbox;\n            toggleRows([row], !checkbox.checked);\n        }\n\n        updateCounter(inputs);\n    });\n\n    // отмена выделения текста при клике с удержанным Shift\n    table.addEventListener('mousedown', function(event) {\n        const target = event.target;\n        if (event.shiftKey && ((target.tagName === 'TD') || (target.tagName === 'TH'))) {\n            event.preventDefault();\n        }\n    });\n\n    // выбор всех записей таблицы\n    document.addEventListener('click', function(event) {\n        const target = event.target;\n        if ((target.tagName === 'A') && target.closest(`.${QUESTION_CLASS}`)) {\n            event.preventDefault();\n            selectAcross();\n        }\n    });\n\n    // очистка выбора\n    document.addEventListener('click', function(event) {\n        const target = event.target;\n        if ((target.tagName === 'A') && target.closest(`.${CLEAR_CLASS}`)) {\n            event.preventDefault();\n            allToggleInput.checked = false;\n            const rows = inputs.map(input => input.closest('tr'));\n            toggleRows(rows, false);\n            clearAcross(inputs);\n            updateCounter(inputs);\n        }\n    });\n\n    protectEditForm();\n}\n\n/**\n * Требование подтверждения выполнения действия, если в форме были изменения.\n */\nfunction protectEditForm() {\n    let list_editable_changed = false;\n    const form = document.getElementById('changelist_form');\n\n    form.addEventListener('change', function(event) {\n        const target = event.target;\n        if (target.tagName === 'INPUT') {\n            if (target.closest(`.${CHECKBOX_CLASS}`) || (target.id === TOGGLE_ALL_ID)) {\n                // nothing\n            } else {\n                list_editable_changed = true;\n            }\n        } else if (target.tagName === 'SELECT') {\n            if (target.closest(`.action-action`)) {\n                // nothing\n            } else {\n                list_editable_changed = true;\n            }\n        } else {\n            list_editable_changed = true;\n        }\n    });\n\n    form.addEventListener('click', function(event) {\n        const target = event.target;\n        const action_button = target.closest('[name=\"index\"]');\n        if (action_button && list_editable_changed) {\n            const agree = confirm(gettext(\"You have unsaved changes on individual editable fields. If you run an action, your unsaved changes will be lost.\"));\n            if (!agree) {\n                event.preventDefault();\n            }\n        }\n    });\n\n    form.addEventListener('click', function(event) {\n        const target = event.target;\n        const save_button = target.closest('[name=\"_save\"]');\n\n        const action_selects = document.querySelectorAll('.actions select[name=\"action\"]');\n        const action_changed = !Array.prototype.every.call(action_selects, function(select) {\n            return !select.value\n        });\n        \n        if (save_button && action_changed) {\n            let apply;\n            if (list_editable_changed) {\n                apply = confirm(gettext(\"You have selected an action, but you haven't saved your changes to individual fields yet. Please click OK to save. You'll need to re-run the action.\"));\n            } else {\n                apply = confirm(gettext(\"You have selected an action, and you haven't made any changes on individual fields. You're probably looking for the Go button rather than the Save button.\"));\n            }\n            if (!apply) {\n                event.preventDefault();\n            }\n        }\n    });\n}\n\n/**\n * Установка/сброс галочки в чекбоксах.\n * @param {HTMLTableRowElement[]} rows\n * @param {Boolean} checked\n */\nfunction toggleRows(rows, checked) {\n    rows.forEach(function(row) {\n        if (row && row.tagName === 'TR') {\n            row.dispatchEvent(new CustomEvent('select', {\n                bubbles: true,\n                cancelable: true,\n                detail: {\n                    state: checked\n                }\n            }));\n        }\n    });\n}\n\nfunction updateCounter(inputs) {\n    const selected = inputs.reduce((sum, input) => sum + (input.checked ? 1 : 0), 0);\n    const counters = document.querySelectorAll(`.${COUNTER_CLASS}`);\n    counters.forEach(function(counter) {\n        counter.innerHTML = interpolate(\n            ngettext('%(sel)s of %(cnt)s selected', '%(sel)s of %(cnt)s selected', selected),\n            {\n                sel: selected,\n                cnt: counter.dataset.actionsIcnt\n            },\n            true\n        );\n    });\n\n    if (selected === inputs.length) {\n        showQuestion();\n    } else {\n        clearAcross(inputs);\n    }\n}\n\n/**\n * Показ ссылки \"выбрать всё\"\n */\nfunction showQuestion() {\n    const question = document.querySelector(`.${QUESTION_CLASS}`);\n    question && (question.hidden = false);\n}\n\n/**\n * Установка значения input-элементу для выполнения действия над всеми элементами\n * @param {Boolean} value\n */\nfunction setAcrossInput(value) {\n    const acrossInput = document.querySelectorAll(`.${ACROSS_CLASS}`);\n    acrossInput.forEach(function(input) {\n        input.value = Number(value);\n    });\n}\n\nfunction selectAcross() {\n    setAcrossInput(true);\n\n    const counter = document.querySelector(`.${COUNTER_CLASS}`);\n    counter && (counter.hidden = true);\n\n    const allContainer = document.querySelector(`.${ALL_CLASS}`);\n    allContainer && (allContainer.hidden = false);\n\n    const question = document.querySelector(`.${QUESTION_CLASS}`);\n    question && (question.hidden = true);\n\n    const clear = document.querySelector(`.${CLEAR_CLASS}`);\n    clear && (clear.hidden = false);\n}\n\nfunction clearAcross(inputs) {\n    setAcrossInput(false);\n\n    const counter = document.querySelector(`.${COUNTER_CLASS}`);\n    counter && (counter.hidden = false);\n\n    const allContainer = document.querySelector(`.${ALL_CLASS}`);\n    allContainer && (allContainer.hidden = true);\n\n    const selected = inputs.reduce((sum, input) => sum + (input.checked ? 1 : 0), 0);\n    const question = document.querySelector(`.${QUESTION_CLASS}`);\n    question && (question.hidden = selected !== inputs.length);\n\n    const clear = document.querySelector(`.${CLEAR_CLASS}`);\n    clear && (clear.hidden = true);\n}\n","import whenDomReady from \"when-dom-ready\";\n\n\nwhenDomReady(function() {\n    const form = document.querySelector('.paper-search-form');\n    const input = form && form.querySelector('.form-control');\n    input && input.addEventListener('focus', function() {\n        this.select();\n    });\n});\n","/* global gettext */\n\nimport whenDomReady from \"when-dom-ready\";\nimport SortableTable from \"./components/sortable_table/SortableTable\";\nimport \"./components/actions\";\nimport \"./components/RelatedObjectLookups\";\nimport \"./components/search\";\n\n\n// Ctrl + Arrows navigation\nwindow.addEventListener('keydown', function(event) {\n    if (event.defaultPrevented) {\n        return; // Do nothing if the event was already processed\n    }\n\n    if (event.ctrlKey) {\n        const paperMain = document.getElementById('paper-main');\n        const pagination = paperMain.querySelector('.pagination');\n        if (!pagination) {\n            return\n        }\n\n        switch (event.key) {\n            case \"Left\":\n            case \"ArrowLeft\":\n                pagination.querySelector('.page-link[aria-label=\"Previous\"]').click();\n                break;\n            case \"Right\":\n            case \"ArrowRight\":\n                pagination.querySelector('.page-link[aria-label=\"Next\"]').click();\n                break;\n            default:\n                // Quit when this doesn't handle the key event.\n                return;\n        }\n\n        // Cancel the default action to avoid it being handled twice\n        event.preventDefault();\n    }\n});\n\n\nwhenDomReady(function() {\n    const table = document.getElementById('result_list');\n    if (table && table.classList.contains('table-sortable')) {\n        if (table.classList.contains('table-sortable-allowed')) {\n            new SortableTable(table, {\n                url: table.dataset.orderUrl,\n                tree: table.classList.contains('table-mptt'),\n                handler: '.sort-handler'\n            });\n        } else {\n            $(table).find('.sort-handler').tooltip({\n                title: gettext('Sort list by this column to enable ordering'),\n                placement: 'bottom',\n                trigger: 'hover',\n                html: true,\n                delay: {\n                    show: 300,\n                    hide: 100\n                }\n            });\n        }\n    }\n});\n","// Handles related-objects functionality: lookup link for raw_id_fields\n// and Add Another links.\n\n(function($) {\n    'use strict';\n\n    // IE doesn't accept periods or dashes in the window name, but the element IDs\n    // we use to generate popup window names may contain them, therefore we map them\n    // to allowed characters in a reversible way so that we can locate the correct\n    // element when the popup window is dismissed.\n    function id_to_windowname(text) {\n        text = text.replace(/\\./g, '__dot__');\n        text = text.replace(/-/g, '__dash__');\n        return text;\n    }\n\n    function windowname_to_id(text) {\n        text = text.replace(/__dot__/g, '.');\n        text = text.replace(/__dash__/g, '-');\n        return text;\n    }\n\n    function showAdminPopup(triggeringLink, name_regexp, add_popup) {\n        let name = triggeringLink.id.replace(name_regexp, '');\n        name = id_to_windowname(name);\n        let href = triggeringLink.href;\n        if (add_popup) {\n            if (href.indexOf('?') === -1) {\n                href += '?_popup=1';\n            } else {\n                href += '&_popup=1';\n            }\n        }\n\n        // Центрирование popup\n        const browser_left = typeof window.screenX !== 'undefined' ? window.screenX : window.screenLeft,\n            browser_top = typeof window.screenY !== 'undefined' ? window.screenY : window.screenTop,\n            browser_width = typeof window.outerWidth !== 'undefined' ? window.outerWidth : document.body.clientWidth,\n            browser_height = typeof window.outerHeight !== 'undefined' ? window.outerHeight : document.body.clientHeight,\n            popup_width = 940,\n            popup_height = 600,\n            top_position = browser_top + Math.round((browser_height - popup_height) / 2),\n            left_position = browser_left + Math.round((browser_width - popup_width) / 2);\n\n        const win = window.open(href, name,\n            'width=' + popup_width +\n            ',height=' + popup_height +\n            ',top=' + top_position +\n            ',left=' + left_position +\n            ',resizable=yes,scrollbars=yes'\n        );\n\n        win.focus();\n        return false;\n    }\n\n    function showRelatedObjectLookupPopup(triggeringLink) {\n        return showAdminPopup(triggeringLink, /^lookup_/, true);\n    }\n\n    function dismissRelatedLookupPopup(win, chosenId) {\n        const name = windowname_to_id(win.name);\n        const elem = document.getElementById(name);\n        if (elem.className.indexOf('vManyToManyRawIdAdminField') !== -1 && elem.value) {\n            elem.value += ',' + chosenId;\n        } else {\n            document.getElementById(name).value = chosenId;\n        }\n        win.close();\n    }\n\n    function showRelatedObjectPopup(triggeringLink) {\n        return showAdminPopup(triggeringLink, /^(change|add|delete)_/, false);\n    }\n\n    function updateRelatedObjectLinks(triggeringLink) {\n        const $this = $(triggeringLink);\n        const siblings = $this.closest('.related-widget-wrapper').find('.view-related, .change-related, .delete-related');\n        if (!siblings.length) {\n            return;\n        }\n        const value = $this.val();\n        if (value) {\n            siblings.each(function() {\n                const elm = $(this);\n                elm.attr('href', elm.attr('data-href-template').replace('__fk__', value));\n            });\n        } else {\n            siblings.removeAttr('href');\n        }\n    }\n\n    function dismissAddRelatedObjectPopup(win, newId, newRepr) {\n        const name = windowname_to_id(win.name);\n        const elem = document.getElementById(name);\n        if (elem) {\n            const elemName = elem.nodeName.toUpperCase();\n            if (elemName === 'SELECT') {\n                elem.options[elem.options.length] = new Option(newRepr, newId, true, true);\n            } else if (elemName === 'INPUT') {\n                if (elem.className.indexOf('vManyToManyRawIdAdminField') !== -1 && elem.value) {\n                    elem.value += ',' + newId;\n                } else {\n                    elem.value = newId;\n                }\n            }\n            // Trigger a change event to update related links if required.\n            $(elem).trigger('change');\n        }\n        win.close();\n    }\n\n    function dismissChangeRelatedObjectPopup(win, objId, newRepr, newId) {\n        const id = windowname_to_id(win.name).replace(/^edit_/, '');\n        const select = $('#' + id);\n        select.find('option').each(function() {\n            if (this.value === objId) {\n                this.textContent = newRepr;\n                this.value = newId;\n            }\n        });\n        win.close();\n    }\n\n    function dismissDeleteRelatedObjectPopup(win, objId) {\n        const id = windowname_to_id(win.name).replace(/^delete_/, '');\n        const select = $('#' + id);\n        select.find('option').each(function() {\n            if (this.value === objId) {\n                $(this).remove();\n            }\n        }).trigger('change');\n        win.close();\n    }\n\n    // Global for testing purposes\n    window.id_to_windowname = id_to_windowname;\n    window.windowname_to_id = windowname_to_id;\n\n    window.showRelatedObjectLookupPopup = showRelatedObjectLookupPopup;\n    window.dismissRelatedLookupPopup = dismissRelatedLookupPopup;\n    window.showRelatedObjectPopup = showRelatedObjectPopup;\n    window.updateRelatedObjectLinks = updateRelatedObjectLinks;\n    window.dismissAddRelatedObjectPopup = dismissAddRelatedObjectPopup;\n    window.dismissChangeRelatedObjectPopup = dismissChangeRelatedObjectPopup;\n    window.dismissDeleteRelatedObjectPopup = dismissDeleteRelatedObjectPopup;\n\n    // Kept for backward compatibility\n    window.showAddAnotherPopup = showRelatedObjectPopup;\n    window.dismissAddAnotherPopup = dismissAddRelatedObjectPopup;\n\n    $(document).ready(function() {\n        $(\"a[data-popup-opener]\").on('click', function(event) {\n            event.preventDefault();\n            opener.dismissRelatedLookupPopup(window, $(this).data(\"popup-opener\"));\n        });\n        $('body').on('click', '.related-widget-wrapper-link', function(e) {\n            e.preventDefault();\n            if (this.href) {\n                const event = $.Event('django:show-related', {href: this.href});\n                $(this).trigger(event);\n                if (!event.isDefaultPrevented()) {\n                    showRelatedObjectPopup(this);\n                }\n            }\n        }).on('change', '.related-widget-wrapper select', function() {\n            const event = $.Event('django:update-related');\n            $(this).trigger(event);\n            if (!event.isDefaultPrevented()) {\n                updateRelatedObjectLinks(this);\n            }\n        }).on('change', '.related-widget-wrapper input', function() {\n            if (this.checked) {\n                updateRelatedObjectLinks(this);\n            }\n        }).on('click', '.related-lookup', function(e) {\n            e.preventDefault();\n            const event = $.Event('django:lookup-related');\n            $(this).trigger(event);\n            if (!event.isDefaultPrevented()) {\n                showRelatedObjectLookupPopup(this);\n            }\n        });\n\n        $('.related-widget-wrapper select').trigger('change');\n        $('.related-widget-wrapper input:checked').trigger('change');\n    });\n\n})(jQuery);\n"],"sourceRoot":""}