{"version":3,"sources":["webpack://paper-admin/./paper_admin/static/paper_admin/src/js/components/hook_unload.js","webpack://paper-admin/./paper_admin/static/paper_admin/src/js/passwordform.js","webpack://paper-admin/./paper_admin/static/paper_admin/src/js/widgets/password.js"],"names":["hookUnload","form","submit","formHasChanged","addEventListener","message","gettext","userActionHandler","document","removeEventListener","changeHandler","event","target","widget","closest","contains","window","evt","returnValue","whenDomReady","getElementById","toggler","field","icon","querySelector","input","classes","types","index","indexOf","type","classList","add","remove"],"mappings":"+GASe,SAASA,EAAWC,GAC/B,IAAIC,GAAS,EACTC,GAAiB,EAErBF,EAAKG,iBAAiB,UAAU,WAC5BF,GAAS,KAGb,MAAMG,EAAUC,QAAQ,4BAYxB,SAASC,IACLC,SAASC,oBAAoB,UAAWF,GACxCC,SAASC,oBAAoB,YAAaF,GAC1CN,EAAKG,iBAAiB,UAAU,SAASM,EAAcC,GACnDV,EAAKQ,oBAAoB,SAAUC,GAEnC,MAAME,EAASD,EAAMC,OACfC,EAASD,EAAOE,QAAQ,kBAC0C,OAAnDF,EAAOE,QAAQ,kCACfD,GAAUZ,EAAKc,SAASF,KACzCV,GAAiB,MArB7Ba,OAAOZ,iBAAiB,gBAAgB,SAASa,GAC7C,IAAKf,GAAUC,EAEX,OADAc,EAAIC,YAAcb,EACXA,KAMfG,SAASJ,iBAAiB,UAAWG,GACrCC,SAASJ,iBAAiB,YAAaG,G,0GCvB3CY,QAAa,WAET,MAAMlB,EAAOO,SAASY,eAAe,gBACjCnB,IACAD,OAAWC,O,eCTnBO,SAASJ,iBAAiB,SAAS,SAASO,GACxC,MACMU,EADSV,EAAMC,OACEE,QAAQ,qBAC/B,GAAIO,EAAS,CACT,MAAMC,EAAQD,EAAQP,QAAQ,gBACxBS,EAAOD,GAASA,EAAME,cAAc,QACpCC,EAAQH,GAASA,EAAME,cAAc,SAC3C,GAAIC,EAAO,CACP,MAAMC,EAAU,CAAC,eAAgB,UAC3BC,EAAQ,CAAC,OAAQ,YACjBC,GAASD,EAAME,QAAQJ,EAAMK,MAAQ,GAAK,EAChDL,EAAMK,KAAOH,EAAMC,GACnBL,EAAKQ,UAAUC,IAAIN,EAAQE,IAC3BL,EAAKQ,UAAUE,OAAOP,GAASE,EAAQ,GAAK","file":"passwordform.chunk.min.js","sourcesContent":["/* global gettext */\n\n/**\n * Инициализация отслеживания изменения формы и вывод\n * предупреждения при попытке закрыть страницу без сохранения.\n *\n * Для предотвращения изменения в какой-либо части формы,\n * добавьте аттрибут data-hook-unload=\"prevent\".\n */\nexport default function hookUnload(form) {\n    let submit = false;\n    let formHasChanged = false;\n\n    form.addEventListener('submit', function() {\n        submit = true;\n    });\n\n    const message = gettext('You have unsaved changes');\n    window.addEventListener('beforeunload', function(evt) {\n        if (!submit && formHasChanged) {\n            evt.returnValue = message;\n            return message;\n        }\n    });\n\n    // начинаем отслеживать изменения после первого действия\n    // пользователя, чтобы игнорировать последствия инициализации\n    document.addEventListener('keydown', userActionHandler);\n    document.addEventListener('mousedown', userActionHandler);\n    function userActionHandler() {\n        document.removeEventListener('keydown', userActionHandler);\n        document.removeEventListener('mousedown', userActionHandler);\n        form.addEventListener('change', function changeHandler(event) {\n            form.removeEventListener('change', changeHandler);\n\n            const target = event.target;\n            const widget = target.closest('.form-widget');\n            const prevent_hook = target.closest('[data-hook-unload=\"prevent\"]') !== null;\n            if (!prevent_hook && widget && form.contains(widget)) {\n                formHasChanged = true;\n            }\n        });\n    }\n}\n","import whenDomReady from \"when-dom-ready\";\nimport hookUnload from \"./components/hook_unload\";\nimport \"./widgets/password\";\n\n\nwhenDomReady(function() {\n    // предупреждение при закрытии формы\n    const form = document.getElementById('passwordform');\n    if (form) {\n        hookUnload(form);\n    }\n});\n","document.addEventListener('click', function(event) {\n    const target = event.target;\n    const toggler = target.closest('.vPasswordTrigger');\n    if (toggler) {\n        const field = toggler.closest('.input-group');\n        const icon = field && field.querySelector('i.fa');\n        const input = field && field.querySelector('input');\n        if (input) {\n            const classes = ['fa-eye-slash', 'fa-eye'];\n            const types = ['text', 'password'];\n            const index = (types.indexOf(input.type) + 1) % 2;\n            input.type = types[index];\n            icon.classList.add(classes[index]);\n            icon.classList.remove(classes[(index + 1) % 2]);\n        }\n    }\n});\n"],"sourceRoot":""}