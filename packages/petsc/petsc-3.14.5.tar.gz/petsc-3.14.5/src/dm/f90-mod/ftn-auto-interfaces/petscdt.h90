      subroutine PetscDTAltVApply(a,b,c,d,e,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
        PetscErrorCode z
       end subroutine PetscDTAltVApply
      subroutine PetscDTAltVWedge(a,b,c,d,e,f,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
       PetscReal f ! PetscReal
        PetscErrorCode z
       end subroutine PetscDTAltVWedge
      subroutine PetscDTAltVWedgeMatrix(a,b,c,d,e,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
        PetscErrorCode z
       end subroutine PetscDTAltVWedgeMatrix
      subroutine PetscDTAltVPullback(a,b,c,d,e,f,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       PetscInt d ! PetscInt
       PetscReal e ! PetscReal
       PetscReal f ! PetscReal
        PetscErrorCode z
       end subroutine PetscDTAltVPullback
      subroutine PetscDTAltVPullbackMatrix(a,b,c,d,e,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       PetscInt d ! PetscInt
       PetscReal e ! PetscReal
        PetscErrorCode z
       end subroutine PetscDTAltVPullbackMatrix
      subroutine PetscDTAltVInterior(a,b,c,d,e,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
        PetscErrorCode z
       end subroutine PetscDTAltVInterior
      subroutine PetscDTAltVInteriorMatrix(a,b,c,d,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
        PetscErrorCode z
       end subroutine PetscDTAltVInteriorMatrix
      subroutine PetscDTAltVInteriorPattern(a,b,c,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
        PetscErrorCode z
       end subroutine PetscDTAltVInteriorPattern
      subroutine PetscDTAltVStar(a,b,c,d,e,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
        PetscErrorCode z
       end subroutine PetscDTAltVStar
      subroutine PetscDSSetFromOptions(a,z)
      use petscdmdef
       PetscDS a ! PetscDS
        PetscErrorCode z
       end subroutine PetscDSSetFromOptions
      subroutine PetscDSDestroy(a,z)
      use petscdmdef
       PetscDS a ! PetscDS
        PetscErrorCode z
       end subroutine PetscDSDestroy
      subroutine PetscDSCreate(a,b,z)
      use petscdmdef
      MPI_Comm a ! MPI_Comm
       PetscDS b ! PetscDS
        PetscErrorCode z
       end subroutine PetscDSCreate
      subroutine PetscDSGetNumFields(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine PetscDSGetNumFields
      subroutine PetscDSGetSpatialDimension(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine PetscDSGetSpatialDimension
      subroutine PetscDSGetCoordinateDimension(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine PetscDSGetCoordinateDimension
      subroutine PetscDSSetCoordinateDimension(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine PetscDSSetCoordinateDimension
      subroutine PetscDSGetHybrid(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine PetscDSGetHybrid
      subroutine PetscDSSetHybrid(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine PetscDSSetHybrid
      subroutine PetscDSGetTotalDimension(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine PetscDSGetTotalDimension
      subroutine PetscDSGetTotalComponents(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine PetscDSGetTotalComponents
      subroutine PetscDSGetDiscretization(a,b,c,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b ! PetscInt
       PetscObject c ! PetscObject
        PetscErrorCode z
       end subroutine PetscDSGetDiscretization
      subroutine PetscDSSetDiscretization(a,b,c,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b ! PetscInt
       PetscObject c ! PetscObject
        PetscErrorCode z
       end subroutine PetscDSSetDiscretization
      subroutine PetscDSAddDiscretization(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscObject b ! PetscObject
        PetscErrorCode z
       end subroutine PetscDSAddDiscretization
      subroutine PetscDSGetQuadrature(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscQuadrature b ! PetscQuadrature
        PetscErrorCode z
       end subroutine PetscDSGetQuadrature
      subroutine PetscDSGetImplicit(a,b,c,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
        PetscErrorCode z
       end subroutine PetscDSGetImplicit
      subroutine PetscDSSetImplicit(a,b,c,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
        PetscErrorCode z
       end subroutine PetscDSSetImplicit
      subroutine PetscDSHasBdJacobian(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine PetscDSHasBdJacobian
      subroutine PetscDSHasBdJacobianPreconditioner(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine PetscDSHasBdJacobianPreconditioner
      subroutine PetscDSGetFieldIndex(a,b,c,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscObject b ! PetscObject
       PetscInt c ! PetscInt
        PetscErrorCode z
       end subroutine PetscDSGetFieldIndex
      subroutine PetscDSGetFieldSize(a,b,c,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
        PetscErrorCode z
       end subroutine PetscDSGetFieldSize
      subroutine PetscDSGetFieldOffset(a,b,c,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
        PetscErrorCode z
       end subroutine PetscDSGetFieldOffset
      subroutine PetscDSGetDimensions(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b (*) ! PetscInt
        PetscErrorCode z
       end subroutine PetscDSGetDimensions
      subroutine PetscDSGetComponents(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b (*) ! PetscInt
        PetscErrorCode z
       end subroutine PetscDSGetComponents
      subroutine PetscDSGetComponentOffset(a,b,c,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
        PetscErrorCode z
       end subroutine PetscDSGetComponentOffset
      subroutine PetscDSGetComponentOffsets(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b (*) ! PetscInt
        PetscErrorCode z
       end subroutine PetscDSGetComponentOffsets
      subroutine PetscDSGetComponentDerivativeOffsets(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b (*) ! PetscInt
        PetscErrorCode z
       end subroutine PetscDSGetComponentDerivativeOffsets
      subroutine PetscDSGetNumBoundary(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine PetscDSGetNumBoundary
      subroutine PetscDSCopyBoundary(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscDS b ! PetscDS
        PetscErrorCode z
       end subroutine PetscDSCopyBoundary
      subroutine PetscDSSelectDiscretizations(a,b,c,d,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscDS d ! PetscDS
        PetscErrorCode z
       end subroutine PetscDSSelectDiscretizations
      subroutine PetscDSSelectEquations(a,b,c,d,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscDS d ! PetscDS
        PetscErrorCode z
       end subroutine PetscDSSelectEquations
      subroutine PetscDSCopyEquations(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscDS b ! PetscDS
        PetscErrorCode z
       end subroutine PetscDSCopyEquations
      subroutine PetscDSCopyConstants(a,b,z)
      use petscdmdef
       PetscDS a ! PetscDS
       PetscDS b ! PetscDS
        PetscErrorCode z
       end subroutine PetscDSCopyConstants
      subroutine PetscQuadratureCreate(a,b,z)
      use petscdmdef
      MPI_Comm a ! MPI_Comm
       PetscQuadrature b ! PetscQuadrature
        PetscErrorCode z
       end subroutine PetscQuadratureCreate
      subroutine PetscQuadratureDuplicate(a,b,z)
      use petscdmdef
       PetscQuadrature a ! PetscQuadrature
       PetscQuadrature b ! PetscQuadrature
        PetscErrorCode z
       end subroutine PetscQuadratureDuplicate
      subroutine PetscQuadratureDestroy(a,z)
      use petscdmdef
       PetscQuadrature a ! PetscQuadrature
        PetscErrorCode z
       end subroutine PetscQuadratureDestroy
      subroutine PetscQuadratureGetOrder(a,b,z)
      use petscdmdef
       PetscQuadrature a ! PetscQuadrature
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine PetscQuadratureGetOrder
      subroutine PetscQuadratureSetOrder(a,b,z)
      use petscdmdef
       PetscQuadrature a ! PetscQuadrature
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine PetscQuadratureSetOrder
      subroutine PetscQuadratureGetNumComponents(a,b,z)
      use petscdmdef
       PetscQuadrature a ! PetscQuadrature
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine PetscQuadratureGetNumComponents
      subroutine PetscQuadratureSetNumComponents(a,b,z)
      use petscdmdef
       PetscQuadrature a ! PetscQuadrature
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine PetscQuadratureSetNumComponents
      subroutine PetscQuadraturePushForward(a,b,c,d,e,f,g,z)
      use petscdmdef
       PetscQuadrature a ! PetscQuadrature
       PetscInt b ! PetscInt
       PetscReal c (*) ! PetscReal
       PetscReal d (*) ! PetscReal
       PetscReal e (*) ! PetscReal
       PetscInt f ! PetscInt
       PetscQuadrature g ! PetscQuadrature
        PetscErrorCode z
       end subroutine PetscQuadraturePushForward
      subroutine PetscDTJacobiNorm(a,b,c,d,z)
      use petscdmdef
       PetscReal a ! PetscReal
       PetscReal b ! PetscReal
       PetscInt c ! PetscInt
       PetscReal d ! PetscReal
        PetscErrorCode z
       end subroutine PetscDTJacobiNorm
      subroutine PetscDTJacobiEvalJet(a,b,c,d,e,f,g,z)
      use petscdmdef
       PetscReal a ! PetscReal
       PetscReal b ! PetscReal
       PetscInt c ! PetscInt
       PetscReal d (*) ! PetscReal
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscReal g (*) ! PetscReal
        PetscErrorCode z
       end subroutine PetscDTJacobiEvalJet
      subroutine PetscDTJacobiEval(a,b,c,d,e,f,g,h,i,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscReal g ! PetscReal
       PetscReal h ! PetscReal
       PetscReal i ! PetscReal
        PetscErrorCode z
       end subroutine PetscDTJacobiEval
      subroutine PetscDTLegendreEval(a,b,c,d,e,f,g,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscReal b ! PetscReal
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscReal e ! PetscReal
       PetscReal f ! PetscReal
       PetscReal g ! PetscReal
        PetscErrorCode z
       end subroutine PetscDTLegendreEval
      subroutine PetscDTIndexToGradedOrder(a,b,c,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
        PetscErrorCode z
       end subroutine PetscDTIndexToGradedOrder
      subroutine PetscDTGradedOrderToIndex(a,b,c,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b (*) ! PetscInt
       PetscInt c ! PetscInt
        PetscErrorCode z
       end subroutine PetscDTGradedOrderToIndex
      subroutine PetscDTPKDEvalJet(a,b,c,d,e,f,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscReal c (*) ! PetscReal
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscReal f (*) ! PetscReal
        PetscErrorCode z
       end subroutine PetscDTPKDEvalJet
      subroutine PetscDTGaussJacobiQuadrature(a,b,c,d,e,f,g,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
       PetscReal f (*) ! PetscReal
       PetscReal g (*) ! PetscReal
        PetscErrorCode z
       end subroutine PetscDTGaussJacobiQuadrature
      subroutine PetscDTGaussLobattoJacobiQuadrature(a,b,c,d,e,f,g,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
       PetscReal f (*) ! PetscReal
       PetscReal g (*) ! PetscReal
        PetscErrorCode z
       end subroutine PetscDTGaussLobattoJacobiQuadrature
      subroutine PetscDTGaussQuadrature(a,b,c,d,e,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
        PetscErrorCode z
       end subroutine PetscDTGaussQuadrature
      subroutine PetscDTGaussTensorQuadrature(a,b,c,d,e,f,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
       PetscQuadrature f ! PetscQuadrature
        PetscErrorCode z
       end subroutine PetscDTGaussTensorQuadrature
      subroutine PetscDTStroudConicalQuadrature(a,b,c,d,e,f,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
       PetscQuadrature f ! PetscQuadrature
        PetscErrorCode z
       end subroutine PetscDTStroudConicalQuadrature
      subroutine PetscDTTanhSinhTensorQuadrature(a,b,c,d,e,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscQuadrature e ! PetscQuadrature
        PetscErrorCode z
       end subroutine PetscDTTanhSinhTensorQuadrature
      subroutine PetscDTReconstructPoly(a,b,c,d,e,f,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       PetscInt d ! PetscInt
       PetscReal e ! PetscReal
       PetscReal f ! PetscReal
        PetscErrorCode z
       end subroutine PetscDTReconstructPoly
      subroutine PetscDTIndexToBary(a,b,c,d,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d (*) ! PetscInt
        PetscErrorCode z
       end subroutine PetscDTIndexToBary
      subroutine PetscDTBaryToIndex(a,b,c,d,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscInt d ! PetscInt
        PetscErrorCode z
       end subroutine PetscDTBaryToIndex
