Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ELSE
    NEWLINE
    THEN
    USE
    WHILE

Grammar

Rule 0     S' -> expr
Rule 1     expr -> table ID DOT ID
Rule 2     expr -> table ID
Rule 3     table -> CREATE TABLE IF NOT EXISTS
Rule 4     table -> CREATE TABLE
Rule 5     column -> ID ID
Rule 6     column -> ID ID NUM_VALUE_SDP
Rule 7     column -> ID NUM_VALUE_SDP
Rule 8     expr -> column
Rule 9     expr -> column DEFAULT NUM_VALUE_SDP
Rule 10    expr -> column NOT NULL
Rule 11    expr -> column NULL
Rule 12    expr -> column PRIMARY KEY
Rule 13    expr -> column DEFAULT ID
Rule 14    expr -> PRIMARY KEY ID
Rule 15    expr -> PRIMARY KEY ID ID
Rule 16    expr -> PRIMARY KEY ID ID ID
Rule 17    expr -> PRIMARY KEY ID ID ID ID
Rule 18    expr -> PRIMARY KEY ID ID ID ID ID

Terminals, with rules where they appear

CREATE               : 3 4
DEFAULT              : 9 13
DOT                  : 1
ELSE                 : 
EXISTS               : 3
ID                   : 1 1 2 5 5 6 6 7 13 14 15 15 16 16 16 17 17 17 17 18 18 18 18 18
IF                   : 3
KEY                  : 12 14 15 16 17 18
NEWLINE              : 
NOT                  : 3 10
NULL                 : 10 11
NUM_VALUE_SDP        : 6 7 9
PRIMARY              : 12 14 15 16 17 18
TABLE                : 3 4
THEN                 : 
USE                  : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

column               : 8 9 10 11 12 13
expr                 : 0
table                : 1 2

Parsing method: LALR

state 0

    (0) S' -> . expr
    (1) expr -> . table ID DOT ID
    (2) expr -> . table ID
    (8) expr -> . column
    (9) expr -> . column DEFAULT NUM_VALUE_SDP
    (10) expr -> . column NOT NULL
    (11) expr -> . column NULL
    (12) expr -> . column PRIMARY KEY
    (13) expr -> . column DEFAULT ID
    (14) expr -> . PRIMARY KEY ID
    (15) expr -> . PRIMARY KEY ID ID
    (16) expr -> . PRIMARY KEY ID ID ID
    (17) expr -> . PRIMARY KEY ID ID ID ID
    (18) expr -> . PRIMARY KEY ID ID ID ID ID
    (3) table -> . CREATE TABLE IF NOT EXISTS
    (4) table -> . CREATE TABLE
    (5) column -> . ID ID
    (6) column -> . ID ID NUM_VALUE_SDP
    (7) column -> . ID NUM_VALUE_SDP

    PRIMARY         shift and go to state 5
    CREATE          shift and go to state 6
    ID              shift and go to state 3

    expr                           shift and go to state 1
    table                          shift and go to state 2
    column                         shift and go to state 4

state 1

    (0) S' -> expr .



state 2

    (1) expr -> table . ID DOT ID
    (2) expr -> table . ID

    ID              shift and go to state 7


state 3

    (5) column -> ID . ID
    (6) column -> ID . ID NUM_VALUE_SDP
    (7) column -> ID . NUM_VALUE_SDP

    ID              shift and go to state 8
    NUM_VALUE_SDP   shift and go to state 9


state 4

    (8) expr -> column .
    (9) expr -> column . DEFAULT NUM_VALUE_SDP
    (10) expr -> column . NOT NULL
    (11) expr -> column . NULL
    (12) expr -> column . PRIMARY KEY
    (13) expr -> column . DEFAULT ID

    $end            reduce using rule 8 (expr -> column .)
    DEFAULT         shift and go to state 10
    NOT             shift and go to state 11
    NULL            shift and go to state 12
    PRIMARY         shift and go to state 13


state 5

    (14) expr -> PRIMARY . KEY ID
    (15) expr -> PRIMARY . KEY ID ID
    (16) expr -> PRIMARY . KEY ID ID ID
    (17) expr -> PRIMARY . KEY ID ID ID ID
    (18) expr -> PRIMARY . KEY ID ID ID ID ID

    KEY             shift and go to state 14


state 6

    (3) table -> CREATE . TABLE IF NOT EXISTS
    (4) table -> CREATE . TABLE

    TABLE           shift and go to state 15


state 7

    (1) expr -> table ID . DOT ID
    (2) expr -> table ID .

    DOT             shift and go to state 16
    $end            reduce using rule 2 (expr -> table ID .)


state 8

    (5) column -> ID ID .
    (6) column -> ID ID . NUM_VALUE_SDP

    DEFAULT         reduce using rule 5 (column -> ID ID .)
    NOT             reduce using rule 5 (column -> ID ID .)
    NULL            reduce using rule 5 (column -> ID ID .)
    PRIMARY         reduce using rule 5 (column -> ID ID .)
    $end            reduce using rule 5 (column -> ID ID .)
    NUM_VALUE_SDP   shift and go to state 17


state 9

    (7) column -> ID NUM_VALUE_SDP .

    DEFAULT         reduce using rule 7 (column -> ID NUM_VALUE_SDP .)
    NOT             reduce using rule 7 (column -> ID NUM_VALUE_SDP .)
    NULL            reduce using rule 7 (column -> ID NUM_VALUE_SDP .)
    PRIMARY         reduce using rule 7 (column -> ID NUM_VALUE_SDP .)
    $end            reduce using rule 7 (column -> ID NUM_VALUE_SDP .)


state 10

    (9) expr -> column DEFAULT . NUM_VALUE_SDP
    (13) expr -> column DEFAULT . ID

    NUM_VALUE_SDP   shift and go to state 18
    ID              shift and go to state 19


state 11

    (10) expr -> column NOT . NULL

    NULL            shift and go to state 20


state 12

    (11) expr -> column NULL .

    $end            reduce using rule 11 (expr -> column NULL .)


state 13

    (12) expr -> column PRIMARY . KEY

    KEY             shift and go to state 21


state 14

    (14) expr -> PRIMARY KEY . ID
    (15) expr -> PRIMARY KEY . ID ID
    (16) expr -> PRIMARY KEY . ID ID ID
    (17) expr -> PRIMARY KEY . ID ID ID ID
    (18) expr -> PRIMARY KEY . ID ID ID ID ID

    ID              shift and go to state 22


state 15

    (3) table -> CREATE TABLE . IF NOT EXISTS
    (4) table -> CREATE TABLE .

    IF              shift and go to state 23
    ID              reduce using rule 4 (table -> CREATE TABLE .)


state 16

    (1) expr -> table ID DOT . ID

    ID              shift and go to state 24


state 17

    (6) column -> ID ID NUM_VALUE_SDP .

    DEFAULT         reduce using rule 6 (column -> ID ID NUM_VALUE_SDP .)
    NOT             reduce using rule 6 (column -> ID ID NUM_VALUE_SDP .)
    NULL            reduce using rule 6 (column -> ID ID NUM_VALUE_SDP .)
    PRIMARY         reduce using rule 6 (column -> ID ID NUM_VALUE_SDP .)
    $end            reduce using rule 6 (column -> ID ID NUM_VALUE_SDP .)


state 18

    (9) expr -> column DEFAULT NUM_VALUE_SDP .

    $end            reduce using rule 9 (expr -> column DEFAULT NUM_VALUE_SDP .)


state 19

    (13) expr -> column DEFAULT ID .

    $end            reduce using rule 13 (expr -> column DEFAULT ID .)


state 20

    (10) expr -> column NOT NULL .

    $end            reduce using rule 10 (expr -> column NOT NULL .)


state 21

    (12) expr -> column PRIMARY KEY .

    $end            reduce using rule 12 (expr -> column PRIMARY KEY .)


state 22

    (14) expr -> PRIMARY KEY ID .
    (15) expr -> PRIMARY KEY ID . ID
    (16) expr -> PRIMARY KEY ID . ID ID
    (17) expr -> PRIMARY KEY ID . ID ID ID
    (18) expr -> PRIMARY KEY ID . ID ID ID ID

    $end            reduce using rule 14 (expr -> PRIMARY KEY ID .)
    ID              shift and go to state 25


state 23

    (3) table -> CREATE TABLE IF . NOT EXISTS

    NOT             shift and go to state 26


state 24

    (1) expr -> table ID DOT ID .

    $end            reduce using rule 1 (expr -> table ID DOT ID .)


state 25

    (15) expr -> PRIMARY KEY ID ID .
    (16) expr -> PRIMARY KEY ID ID . ID
    (17) expr -> PRIMARY KEY ID ID . ID ID
    (18) expr -> PRIMARY KEY ID ID . ID ID ID

    $end            reduce using rule 15 (expr -> PRIMARY KEY ID ID .)
    ID              shift and go to state 27


state 26

    (3) table -> CREATE TABLE IF NOT . EXISTS

    EXISTS          shift and go to state 28


state 27

    (16) expr -> PRIMARY KEY ID ID ID .
    (17) expr -> PRIMARY KEY ID ID ID . ID
    (18) expr -> PRIMARY KEY ID ID ID . ID ID

    $end            reduce using rule 16 (expr -> PRIMARY KEY ID ID ID .)
    ID              shift and go to state 29


state 28

    (3) table -> CREATE TABLE IF NOT EXISTS .

    ID              reduce using rule 3 (table -> CREATE TABLE IF NOT EXISTS .)


state 29

    (17) expr -> PRIMARY KEY ID ID ID ID .
    (18) expr -> PRIMARY KEY ID ID ID ID . ID

    $end            reduce using rule 17 (expr -> PRIMARY KEY ID ID ID ID .)
    ID              shift and go to state 30


state 30

    (18) expr -> PRIMARY KEY ID ID ID ID ID .

    $end            reduce using rule 18 (expr -> PRIMARY KEY ID ID ID ID ID .)

