Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ELSE
    NEWLINE
    THEN
    USE
    WHILE

Grammar

Rule 0     S' -> expr
Rule 1     expr -> CREATE TABLE IF NOT EXISTS ID DOT ID
Rule 2     expr -> CREATE TABLE IF NOT EXISTS ID
Rule 3     expr -> CREATE TABLE ID
Rule 4     expr -> CREATE TABLE ID DOT ID
Rule 5     column -> ID ID
Rule 6     column -> ID ID NUM_VALUE_SDP
Rule 7     column -> ID NUM_VALUE_SDP
Rule 8     expr -> column NOT NULL
Rule 9     expr -> column
Rule 10    expr -> column NULL
Rule 11    expr -> column PRIMARY KEY
Rule 12    expr -> column DEFAULT NUM_VALUE_SDP
Rule 13    expr -> column DEFAULT ID
Rule 14    expr -> column NOT NULL PRIMARY KEY
Rule 15    expr -> column NULL PRIMARY KEY
Rule 16    expr -> PRIMARY KEY ID
Rule 17    expr -> PRIMARY KEY ID ID
Rule 18    expr -> PRIMARY KEY ID ID ID
Rule 19    expr -> PRIMARY KEY ID ID ID ID
Rule 20    expr -> PRIMARY KEY ID ID ID ID ID
Rule 21    expr -> PRIMARY KEY ID ID ID ID ID ID

Terminals, with rules where they appear

CREATE               : 1 2 3 4
DEFAULT              : 12 13
DOT                  : 1 4
ELSE                 : 
EXISTS               : 1 2
ID                   : 1 1 2 3 4 4 5 5 6 6 7 13 16 17 17 18 18 18 19 19 19 19 20 20 20 20 20 21 21 21 21 21 21
IF                   : 1 2
KEY                  : 11 14 15 16 17 18 19 20 21
NEWLINE              : 
NOT                  : 1 2 8 14
NULL                 : 8 10 14 15
NUM_VALUE_SDP        : 6 7 12
PRIMARY              : 11 14 15 16 17 18 19 20 21
TABLE                : 1 2 3 4
THEN                 : 
USE                  : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

column               : 8 9 10 11 12 13 14 15
expr                 : 0

Parsing method: LALR

state 0

    (0) S' -> . expr
    (1) expr -> . CREATE TABLE IF NOT EXISTS ID DOT ID
    (2) expr -> . CREATE TABLE IF NOT EXISTS ID
    (3) expr -> . CREATE TABLE ID
    (4) expr -> . CREATE TABLE ID DOT ID
    (8) expr -> . column NOT NULL
    (9) expr -> . column
    (10) expr -> . column NULL
    (11) expr -> . column PRIMARY KEY
    (12) expr -> . column DEFAULT NUM_VALUE_SDP
    (13) expr -> . column DEFAULT ID
    (14) expr -> . column NOT NULL PRIMARY KEY
    (15) expr -> . column NULL PRIMARY KEY
    (16) expr -> . PRIMARY KEY ID
    (17) expr -> . PRIMARY KEY ID ID
    (18) expr -> . PRIMARY KEY ID ID ID
    (19) expr -> . PRIMARY KEY ID ID ID ID
    (20) expr -> . PRIMARY KEY ID ID ID ID ID
    (21) expr -> . PRIMARY KEY ID ID ID ID ID ID
    (5) column -> . ID ID
    (6) column -> . ID ID NUM_VALUE_SDP
    (7) column -> . ID NUM_VALUE_SDP

    CREATE          shift and go to state 2
    PRIMARY         shift and go to state 5
    ID              shift and go to state 3

    expr                           shift and go to state 1
    column                         shift and go to state 4

state 1

    (0) S' -> expr .



state 2

    (1) expr -> CREATE . TABLE IF NOT EXISTS ID DOT ID
    (2) expr -> CREATE . TABLE IF NOT EXISTS ID
    (3) expr -> CREATE . TABLE ID
    (4) expr -> CREATE . TABLE ID DOT ID

    TABLE           shift and go to state 6


state 3

    (5) column -> ID . ID
    (6) column -> ID . ID NUM_VALUE_SDP
    (7) column -> ID . NUM_VALUE_SDP

    ID              shift and go to state 7
    NUM_VALUE_SDP   shift and go to state 8


state 4

    (8) expr -> column . NOT NULL
    (9) expr -> column .
    (10) expr -> column . NULL
    (11) expr -> column . PRIMARY KEY
    (12) expr -> column . DEFAULT NUM_VALUE_SDP
    (13) expr -> column . DEFAULT ID
    (14) expr -> column . NOT NULL PRIMARY KEY
    (15) expr -> column . NULL PRIMARY KEY

    NOT             shift and go to state 9
    $end            reduce using rule 9 (expr -> column .)
    NULL            shift and go to state 10
    PRIMARY         shift and go to state 11
    DEFAULT         shift and go to state 12


state 5

    (16) expr -> PRIMARY . KEY ID
    (17) expr -> PRIMARY . KEY ID ID
    (18) expr -> PRIMARY . KEY ID ID ID
    (19) expr -> PRIMARY . KEY ID ID ID ID
    (20) expr -> PRIMARY . KEY ID ID ID ID ID
    (21) expr -> PRIMARY . KEY ID ID ID ID ID ID

    KEY             shift and go to state 13


state 6

    (1) expr -> CREATE TABLE . IF NOT EXISTS ID DOT ID
    (2) expr -> CREATE TABLE . IF NOT EXISTS ID
    (3) expr -> CREATE TABLE . ID
    (4) expr -> CREATE TABLE . ID DOT ID

    IF              shift and go to state 14
    ID              shift and go to state 15


state 7

    (5) column -> ID ID .
    (6) column -> ID ID . NUM_VALUE_SDP

    NOT             reduce using rule 5 (column -> ID ID .)
    NULL            reduce using rule 5 (column -> ID ID .)
    PRIMARY         reduce using rule 5 (column -> ID ID .)
    DEFAULT         reduce using rule 5 (column -> ID ID .)
    $end            reduce using rule 5 (column -> ID ID .)
    NUM_VALUE_SDP   shift and go to state 16


state 8

    (7) column -> ID NUM_VALUE_SDP .

    NOT             reduce using rule 7 (column -> ID NUM_VALUE_SDP .)
    NULL            reduce using rule 7 (column -> ID NUM_VALUE_SDP .)
    PRIMARY         reduce using rule 7 (column -> ID NUM_VALUE_SDP .)
    DEFAULT         reduce using rule 7 (column -> ID NUM_VALUE_SDP .)
    $end            reduce using rule 7 (column -> ID NUM_VALUE_SDP .)


state 9

    (8) expr -> column NOT . NULL
    (14) expr -> column NOT . NULL PRIMARY KEY

    NULL            shift and go to state 17


state 10

    (10) expr -> column NULL .
    (15) expr -> column NULL . PRIMARY KEY

    $end            reduce using rule 10 (expr -> column NULL .)
    PRIMARY         shift and go to state 18


state 11

    (11) expr -> column PRIMARY . KEY

    KEY             shift and go to state 19


state 12

    (12) expr -> column DEFAULT . NUM_VALUE_SDP
    (13) expr -> column DEFAULT . ID

    NUM_VALUE_SDP   shift and go to state 20
    ID              shift and go to state 21


state 13

    (16) expr -> PRIMARY KEY . ID
    (17) expr -> PRIMARY KEY . ID ID
    (18) expr -> PRIMARY KEY . ID ID ID
    (19) expr -> PRIMARY KEY . ID ID ID ID
    (20) expr -> PRIMARY KEY . ID ID ID ID ID
    (21) expr -> PRIMARY KEY . ID ID ID ID ID ID

    ID              shift and go to state 22


state 14

    (1) expr -> CREATE TABLE IF . NOT EXISTS ID DOT ID
    (2) expr -> CREATE TABLE IF . NOT EXISTS ID

    NOT             shift and go to state 23


state 15

    (3) expr -> CREATE TABLE ID .
    (4) expr -> CREATE TABLE ID . DOT ID

    $end            reduce using rule 3 (expr -> CREATE TABLE ID .)
    DOT             shift and go to state 24


state 16

    (6) column -> ID ID NUM_VALUE_SDP .

    NOT             reduce using rule 6 (column -> ID ID NUM_VALUE_SDP .)
    NULL            reduce using rule 6 (column -> ID ID NUM_VALUE_SDP .)
    PRIMARY         reduce using rule 6 (column -> ID ID NUM_VALUE_SDP .)
    DEFAULT         reduce using rule 6 (column -> ID ID NUM_VALUE_SDP .)
    $end            reduce using rule 6 (column -> ID ID NUM_VALUE_SDP .)


state 17

    (8) expr -> column NOT NULL .
    (14) expr -> column NOT NULL . PRIMARY KEY

    $end            reduce using rule 8 (expr -> column NOT NULL .)
    PRIMARY         shift and go to state 25


state 18

    (15) expr -> column NULL PRIMARY . KEY

    KEY             shift and go to state 26


state 19

    (11) expr -> column PRIMARY KEY .

    $end            reduce using rule 11 (expr -> column PRIMARY KEY .)


state 20

    (12) expr -> column DEFAULT NUM_VALUE_SDP .

    $end            reduce using rule 12 (expr -> column DEFAULT NUM_VALUE_SDP .)


state 21

    (13) expr -> column DEFAULT ID .

    $end            reduce using rule 13 (expr -> column DEFAULT ID .)


state 22

    (16) expr -> PRIMARY KEY ID .
    (17) expr -> PRIMARY KEY ID . ID
    (18) expr -> PRIMARY KEY ID . ID ID
    (19) expr -> PRIMARY KEY ID . ID ID ID
    (20) expr -> PRIMARY KEY ID . ID ID ID ID
    (21) expr -> PRIMARY KEY ID . ID ID ID ID ID

    $end            reduce using rule 16 (expr -> PRIMARY KEY ID .)
    ID              shift and go to state 27


state 23

    (1) expr -> CREATE TABLE IF NOT . EXISTS ID DOT ID
    (2) expr -> CREATE TABLE IF NOT . EXISTS ID

    EXISTS          shift and go to state 28


state 24

    (4) expr -> CREATE TABLE ID DOT . ID

    ID              shift and go to state 29


state 25

    (14) expr -> column NOT NULL PRIMARY . KEY

    KEY             shift and go to state 30


state 26

    (15) expr -> column NULL PRIMARY KEY .

    $end            reduce using rule 15 (expr -> column NULL PRIMARY KEY .)


state 27

    (17) expr -> PRIMARY KEY ID ID .
    (18) expr -> PRIMARY KEY ID ID . ID
    (19) expr -> PRIMARY KEY ID ID . ID ID
    (20) expr -> PRIMARY KEY ID ID . ID ID ID
    (21) expr -> PRIMARY KEY ID ID . ID ID ID ID

    $end            reduce using rule 17 (expr -> PRIMARY KEY ID ID .)
    ID              shift and go to state 31


state 28

    (1) expr -> CREATE TABLE IF NOT EXISTS . ID DOT ID
    (2) expr -> CREATE TABLE IF NOT EXISTS . ID

    ID              shift and go to state 32


state 29

    (4) expr -> CREATE TABLE ID DOT ID .

    $end            reduce using rule 4 (expr -> CREATE TABLE ID DOT ID .)


state 30

    (14) expr -> column NOT NULL PRIMARY KEY .

    $end            reduce using rule 14 (expr -> column NOT NULL PRIMARY KEY .)


state 31

    (18) expr -> PRIMARY KEY ID ID ID .
    (19) expr -> PRIMARY KEY ID ID ID . ID
    (20) expr -> PRIMARY KEY ID ID ID . ID ID
    (21) expr -> PRIMARY KEY ID ID ID . ID ID ID

    $end            reduce using rule 18 (expr -> PRIMARY KEY ID ID ID .)
    ID              shift and go to state 33


state 32

    (1) expr -> CREATE TABLE IF NOT EXISTS ID . DOT ID
    (2) expr -> CREATE TABLE IF NOT EXISTS ID .

    DOT             shift and go to state 34
    $end            reduce using rule 2 (expr -> CREATE TABLE IF NOT EXISTS ID .)


state 33

    (19) expr -> PRIMARY KEY ID ID ID ID .
    (20) expr -> PRIMARY KEY ID ID ID ID . ID
    (21) expr -> PRIMARY KEY ID ID ID ID . ID ID

    $end            reduce using rule 19 (expr -> PRIMARY KEY ID ID ID ID .)
    ID              shift and go to state 35


state 34

    (1) expr -> CREATE TABLE IF NOT EXISTS ID DOT . ID

    ID              shift and go to state 36


state 35

    (20) expr -> PRIMARY KEY ID ID ID ID ID .
    (21) expr -> PRIMARY KEY ID ID ID ID ID . ID

    $end            reduce using rule 20 (expr -> PRIMARY KEY ID ID ID ID ID .)
    ID              shift and go to state 37


state 36

    (1) expr -> CREATE TABLE IF NOT EXISTS ID DOT ID .

    $end            reduce using rule 1 (expr -> CREATE TABLE IF NOT EXISTS ID DOT ID .)


state 37

    (21) expr -> PRIMARY KEY ID ID ID ID ID ID .

    $end            reduce using rule 21 (expr -> PRIMARY KEY ID ID ID ID ID ID .)

