# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: workflow.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.struct_pb2
from . import common_pb2
from . import classifier_pb2
from . import search_pb2
from . import workflow_pb2


class WorkflowBase(abc.ABC):

    @abc.abstractmethod
    async def ExecuteWorkflow(self, stream: 'grpclib.server.Stream[workflow_pb2.ExecuteWorkflowRequest, workflow_pb2.ExecuteWorkflowResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/Workflow/ExecuteWorkflow': grpclib.const.Handler(
                self.ExecuteWorkflow,
                grpclib.const.Cardinality.UNARY_UNARY,
                workflow_pb2.ExecuteWorkflowRequest,
                workflow_pb2.ExecuteWorkflowResponse,
            ),
        }


class WorkflowStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ExecuteWorkflow = grpclib.client.UnaryUnaryMethod(
            channel,
            '/Workflow/ExecuteWorkflow',
            workflow_pb2.ExecuteWorkflowRequest,
            workflow_pb2.ExecuteWorkflowResponse,
        )
