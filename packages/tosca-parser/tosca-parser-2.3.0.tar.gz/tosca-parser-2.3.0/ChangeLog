CHANGES
=======

2.3.0
-----

* Remove depreciated file babel.cfg
* Dropping explicit unicode literal
* Update TOX\_CONSTRAINTS\_FILE
* Move tosca-parser to new hacking 4.0.0
* Support "Implementation" definition as Artifact Name
* Drop Python 2 support
* Add Python3 wallaby unit tests
* Add validation for required property of policies
* Fix error parsing scalar unit contraints

2.2.0
-----

* Enable \_get\_explicit\_relationship to maintain original relationship type name
* Enable store multi flavour in nested topo template
* Add "state" to condition keyname
* Fix deprecated yaml loader usage

2.1.1
-----

* drop mock from lower-constraints
* Fix ResourceWarning for unclosed file

2.1.0
-----

* Switch to newer openstackdocstheme version
* Fix hacking min version to 3.0.1
* Update hacking for Python3
* Enable max\_length and min\_length constraints in lists

2.0.0
-----

* [ussuri][goal] Drop python 2.7 support and testing
* Switch to official Ussuri jobs
* Fail to parse if relationship is not defined in requirements

1.7.0
-----

* Initialize CSAR main\_template\_file\_name

1.6.0
-----

* Add support for tosca definition version 1.2
* Fail to parse properties in substitution\_mappings
* Bump the openstackdocstheme extension to 1.20
* Blacklist sphinx 2.1.0 (autodoc bug)
* Fail to parse capabilities without properties

1.5.0
-----

* Checks the type of the TopologyTemplate fields
* Add Python 3 Train unit tests
* Replace git.openstack.org URLs with opendev.org URLs
* Sync Sphinx requirement
* OpenDev Migration Patch
* Dropping the py35 testing
* Update the bugs link to storyboard
* Remove support for py34

1.4.0
-----

* Change openstack-dev to openstack-discuss
* Add reservation policy support

1.3.0
-----

* Move extension tests to where stestr can find them
* Add py36 to tox.ini and setup.cfg

1.2.0
-----

* Use templates for cover and lower-constraints
* Update the outdated URL
* add python 3.6 unit test job
* switch documentation job to new PTI
* import zuul job settings from project-config
* Fix error using get\_attribute with HOST in case of setting host relationship in "long" format
* Use stestr instead of testr

1.1.0
-----

* fix tox python3 overrides
* Use stevedore Extensions for TOSCA definitions
* Handle deriving from custom policy definitions
* Add EXPERIMENTAL support for MEC
* Follow the new PTI for document build
* Switch from oslosphinx to openstackdocstheme

1.0.0
-----

* Trivial: Update pypi url to new url
* add lower-constraints job
* Updated from global requirements
* Updated from global requirements
* Updated from global requirements
* Updated from global requirements
* Updated from global requirements
* Updated from global requirements
* Closes-Bug: #1746532

0.9.0
-----

* Closes-Bug:  #1746441
* Add resource\_type in trigger policy
* Closes-Bug: #1740063 Add default value None to \_\_new\_\_ method, this avoid exception when \_\_deepcopy\_\_ method used
* Avoid tox\_install.sh for constraints support
* Updated from global requirements
* Updated from global requirements
* Support yaml file with suffix of yml
* Adding custom datatypes support in properties of capabilities
* Updated from global requirements
* Updated from global requirements
* Add exception info about get\_explicit\_relationship
* fix nested import list bug
* Updated from global requirements
* Fix error getting a boolean capability property with value false
* Updated from global requirements
* Updated from global requirements
* Updated from global requirements
* Fix error getting relationshps in case of custom\_def capability
* Updated from global requirements

0.8.1
-----

* Add more properties to trigger policy
* Updated from global requirements

0.8.0
-----

* Updated from global requirements
* Fix \_find\_host\_containing\_property function to search for properties in capabilities
* Fix error not considering inheritance in valid\_target\_types checking in functions
* fix gate-tosca-parser-python35 issue
* Add FloatingIP Node
* Updated from global requirements
* Changed the derived type of "tosca.nodes.SomeApp"
* [Fix gate]Update test requirement
* Updated from global requirements
* Add monitoring node in tosca-parser
* remove key from \_get\_node\_type\_by\_cap
* Updated from global requirements
* Updated from global requirements
* Fix typo in compute\_with\_nested\_atributes.yaml
* Remove white space between print ()
* Provide parsing support for multiple policies
* Fix validation for invalid type
* Fix few keywords on TOSCA policy

0.7.0
-----

* Bugfix in InterfacesDef \_\_init\_\_ function
* Template to demonstrate properties override
* Log the required inputs, instead of raising exceptions
* Delete unnecessary utf-8 coding
* Add Constraints support
* Add output validation for substitution mappings
* Add input validation in substitution\_mapping class
* Updated from global requirements
* Using assertIsNone() instead of assertEqual(None, ...)
* Fix TOSCA type for Docker container
* Organize containers and other tests
* Show team and repo badges on README
* custom interfaces can be used in node\_templates
* Updated from global requirements
* Validate template requirements as list
* Add validation for implicit attribute reference
* use passenv in tox.ini to forward http proxy settings to unit tests
* Updated from global requirements
* Enable DeprecationWarning in test environments
* Updated from global requirements
* Fixes Incorrect error in get\_attribute with unknown node template
* Update the installation guide
* Use argparse in shell
* Updated from global requirements
* Do not ignore E123, E125 per PEP 8-Style Guide for Python Code
* Change assertTrue(isinstance()) by optimal assert
* Updated from global requirements
* Updated from global requirements
* Add new dsl\_definitions test template
* Rename nfv extensions files to support adding versions
* Add missing entry\_schema field in parameters
* Add url in setup.cfg
* Delete the files in MANIFEST.IN
* Fix paypalpizzastore\_nodejs\_app required property
* Implementing get\_operation\_output function
* Provided support for TOSCA qualified name
* Add validation for parameters
* Add docstring for the usage of unsupported type
* Add missing default
* Remove openstack common file
* Use full name for consistency in main definition
* Clean up oslo-incubator related stuff
* Add endpoint capability to Compute (cf spec)
* Remove H803 of flake8 ignore list in tox
* Updeate the home-page in setup.cfg
* Implement substitution mappings
* Delete unused directory--openstack/common
* Imported templates are not fully validated

0.6.0
-----

* urllib doesn't work with https under proxy
* Modify the definition file for reuse
* Remove discover from test-requirements
* Add Python 3.5 classifier and venv
* incorrect parent\_type definition in policy,artifacts, group and policy
* Correct the node\_with\_cap.yaml file
* Fixes error in UrlUtils validating urls with file scheme
* Added Support for UnsupportedTypes
* Add Token class to manage token function
* Add test using container node types
* Allow optimized compiled file in extensions
* Add missing fields in inputs
* PEP8 tests failing with E211 error
* Updated from global requirements
* Updated from global requirements
* Add 'requests' lib to requirements.txt
* EntityTemplate has no property of parent\_type
* Bugfix for the non managed exception produced when a non defined capability is used in a node template
* Updated from global requirements
* Updated from global requirements
* Updated from global requirements
* Fixes NFV VNFFG and groups
* Added logic to validate the default values from the templates
* Added support for Repositories
* Remove unused env value
* Remove white space from the definition file
* Change tosca.nodes.Container to tosca.nodes.Container.Runtime as host node in tosca.nodes.Container.Application
* Bugfix the error in DataEntity.validate\_datatype with functions
* Create new example templates for TOSCA Credential Data Type
* The code in function of get\_all\_requirements is duplicated
* Updated from global requirements
* tosca.nodes.nfv.CP definition is error

0.5.0
-----

* Bugfix to show correct error message show in case of unknown field in a datatype
* Add Support of the optional requirement or capability name get\_attribute function
* Implement PortSpec datatype and all spec. requirements
* Correct the specification of the datatype tosca.datatypes.Credential
* The code in nodetype is reduplicated
* Updated from global requirements
* Updated from global requirements
* Fix TypeError
* Added support for range type
* Set property required flag to true as default
* Create concat function and provide validation
* Fix the incorrect use of attribute
* Add support for SOURCE and TARGET in get\_property and get\_attribute functions
* Bugfix for RelationshipTemplate.\_create\_relationship\_properties method to get the properties of the "explicit relationships"
* Enable to reference a repository in an import
* Add support for using index and attribute names in the get\_attribute function
* Solves an error in the \_create\_interfaces function in case of custom relationships defined in TOSCA document
* Updated from global requirements
* Implementation of triggers in policies
* Change the result function of the GetAttribute class to return self
* Add Docker related node types to TOSCA definition
* Bugfix to enable CapabilityTypeDef to consider custom definitions
* Solves the incorrect inheritance of properties in capability objects
* Implement LoadBalancer node type per TOSCA v1.0 spec
* Add repositories section to ToscaTemplate
* Add OSX specific file extensions to gitignore
* Updated from global requirements

0.4.0
-----

* Changed datatype\_definitions tag to data\_types to match spec
* Fix CSAR usage in README
* Update documentation for NFV profile support
* Add the node type tosca.relationships.RoutesTo to TOSCA spec
* Add undefined properties to Network and Database node types
* Solves the incorrect inheritance of attributes in NodeType
* Add new attributes to Compute node
* Solves the incorrect inheritance of attributes and requirements of tosca.nodes.Root
* Bugfix for incorrect definition of capabilities element in tosca.nodes.Root
* Fixes for using the NFV Profile and Imports in the Tacker server
* Fixed typo in statefulentity.py variable
* Remove undesired message on CLI
* Add test for relationship
* \_get\_explicit\_relationship() only looks at the first relationship
* Fix typo in definition file
* Handle custom relationship types properly
* Added support for TOSCA group and group types
* Update the TOSCA NFV definitions with corrected capablity derivations
* Updates to TOSCA NFV Profile
* Validation of imported templates
* Add support to node\_filter in requirements section
* Solves the error using a map type with a max\_length contraint
* Return type value along with parent hierarchy
* Corrections to the TOSCA NFV definitions file
* Implementation of policies in topology template
* Add support for Simple NFV Profile
* User assert in test
* Correct an inline import
* Updated from global requirements
* Incorrect inheritance of properties in capability objects
* Support of nested properties and indexes in get\_property function
* Fix Tosca Parser returns an exception in the output when run on a node     type template
* Add support for HOST as first argument in get\_property function
* Add support for using ToscaTemplate with a parsed template string
* Remove duplicate test
* Put py34 first in the env order of tox
* Solves the error using a map type wuth a min\_length contraint
* Solves the "TypeError: 'NoneType' object is not iterable" when getting nodetemplate relationships. Closes-Bug: #1527214
* Use six compatibility library to load yaml files
* Add consistency and validation to required attribute
* Included namespace\_prefix logic in toscaparser
* Updated from global requirements

0.3.0
-----

* Add checks in shell for optional keynames in the template
* Add full stack trace for parser errors
* Update documentation
* Fix issues with CSAR error handling
* Fix an incorrect template
* Fix a broken test
* Add expected path for built in template
* Update definition for public endpoint
* Update PortSpec definition per latest spec
* Fix more unhandled errors for full validation
* Update requirements
* Fix missing import with new test
* Fix an error message format
* Update error message to a uniform format
* Fix an issue with handling invalid section names
* Create an initial test coverage for shell entry point
* Modify test case for broader coverage
* Full validation of TOSCA templates
* Create shell entry point
* Update trove classifier
* Support .zip and .csar extension for CSAR files
* Update the endpoint admin capability definition
* Fix and test the validation of template file
* Fix a bug where the temp folder is not always removed
* Fix error message for invalid CSAR URLs
* Remove one line subject at top of file since its not necessary and update formatting for consistency
* Support nested type definitions using imports

0.2.0
-----

* Fix backward compatibility issue
* Add validation of external resources for CSAR archives
* Update CSAR url to its github url
* Create CLI test utility
* Add CSAR processing support
* Allow special keywords in TOSCA template
* Add documentation for parser architecture
* Add CSAR decompression support
* Fix translation issue with interface inputs and functions
* TOSCA imports implementation single-line and multi-line grammar
* Support extracting the main template from a CSAR archive
* Restructured node template testcases in file test\_toscatplvalidation.py
* Change ignore-errors to ignore\_errors
* Update links for URL referenced templates
* Added PolicyType definitions for TOSCA
* Remove unused yaml files
* Change the entity type module name for consistency
* Extract CSAR description metadata from the main template
* Handle URLs for input templates and imports
* Add CSAR validation and metadata extraction
* Added occurrences of requirements validation
* Fix property inheritance for node templates

0.1.0
-----

* Change i18n references
* Update TOX
* Update setup config file
* Fix coverage file with new repo
* Create README
* Add init file for toscaparser
* Update documentation
* Redefine respository structure
* Remove translator specific code
* Update gitreview file
* MemoryUnit Incorrectly normalizes to uppercase
* Implement SoftwareComponent and WebApplication normative types
* Validation of TOSCA version
* scalar-unit data type support as template input parameters
* Corrected checking required properties of OS capabilities in UT
* Validation for TOSCA second to below levels in template
* Fix two typos on heat-translator documentation
* Modified to get closest flavor based on minimal/no inputs
* Set property to be required by default
* Update TOSCA artifacts type
* Separate implementation of custom types and base types
* supporting short versions of requirements
* Add full support for PortDef data type
* Update network examples to the spec (1)
* Update TOSCA wordpress custom definition
* Update the 4th and 5th block storage examples (1)
* Add missing storage examples from the spec
* Update the 6th block storage example from the spec (1)
* Remove the circular dependency in network examples
* Update the first block storage example to the spec (1)
* Update object store definition and example
* Sync single server example with latest spec
* Sync network examples with the spec
* Remove py26 env
* Fix translation of block storage
* Updated from global requirements
* Add a unit test for nodejs-mongodb template translation
* Update TOSCA version per spec
* Prepare ELK TOSCA Template for Translation into HOT (6)
* Add app in the nodejs mongodb template
* Update TOSCA credential datatype
* Update TOSCA relationship inheritance
* Update TOSCA translator installation doc
* Update TOSCA relationship valid targets
* Document usage of translator with OSC
* Added directory structure in README.rst
* Add a unit test for ELK translation
* Annotate TOSCA scripts
* Prepare ELK TOSCA Template for Translation into HOT (5)
* Updated from global requirements
* Implement tosca.scalar-unit
* Update TOSCA base type definition file with version
* Prepare ELK TOSCA Template for Translation into HOT (4)
* Added translation to the tosca network module
* Added translation in dataentity module
* Fix typos in ELK CSAR readme file
* Updated from global requirements
* Adding unit test coverage for the validate method
* Implement artifact type definition
* Add support for parameters to translate template
* Added the missing testcases for Tosca translator
* Add handler for ConnectsTo relationship
* Prepare ELK TOSCA Template for Translation into HOT (3)
* Update TOSCA ELK scripts
* Adding an empty template test for simple\_parse()
* Add unit testcases for toscalib\_elements\_constraints.py
* Fixed spelling mistake
* Fixing an error message which was not translated
* Add the ability to set output file
* Create an OSC plugin for heat-translator
* Resolve interfaces by symbolic name not by type
* TOSCA: Database and DBMS node properties update
* TOSCA: fix indentation in elk CSAR
* TOSCA: create csar for monitoring use case
* Installer scripts should not run simultaneously on the same server
* Prepare ELK TOSCA Template for Translation into HOT (2)
* TOSCA: Update memory size per spec changes
* Adding test coverage for HotParameter
* Fix host server assignment for resources with multi-node dependency
* Heat-Translator: Update README with new IRC Channel
* Added a unit test to cover diff\_dicts in utils.py
* Fix installation package name
* Prepare ELK TOSCA Template for Translation into HOT
* TOSCA: interfaces for relationship templates
* TOSCA: fix Python34 UnicodeDecodeError
* Pick up new plugins for ELK
* Heat translator plugins for new TOSCA custom types
* TOSCA: keep the license formatting consistent
* TOSCA: Create a test CLI program
* Fix typos in tosca\_elk.yaml file
* TOSCA: use the artifacts directory for scripts
* TOSCA: Correct duplicate Block Storage description
* Implement tosca.capabilities.Container
* TOSCA: minor updates in TOSCA def file per spec
* TOSCA: rename sample template file
* Create a unit test for wordpress specification in TOSCA
* Update the TOSCA monitoring use case
* Update TOSCA requirements for template and type
* Apply topology\_template to tosca\_template
* Inital Implementation of topology template
* Add test templates for topology template
* Update code base to be hacking compatible
* Update requirements and test-requirements
* Update README.rst to point to correct urls
* Update heat-translator's documentation theme
* Added unit test to verify num vals in str\_to\_num
* Implementation of tosca.node.ObjectStorage
* Implementation of CompareUtils class
* Added a unit test for convert\_unit\_size\_to\_num
* Added unit test to cover ValueError in str\_to\_num
* Update definition of tosca.nodes.WebServer
* TOSCA: organize test templates
* Fixes few nits in the network features code
* Create dictionary returning methods for certain class properties
* The output template is close to HOT template
* Rename TOSCA AttachTo relationship
* Fix coverage so that it works for this repo
* TOSCA: Handle memory units
* TOSCA: Create new utils module with memory units
* Add TOSCA networking features
* TOSCA: Update README source code link
* Follow the hosting chain to find the host server
* Add scripts for logstash, elasticsearch, kibana
* Add scripts to set up monitoring
* Update set of scripts for mongodb and nodejs
* tosca data type validation for float and timestamp
* TOSCA: Handle custom capability type definition
* Return input default value on get\_input evaluation
* Replace ip\_address attribute with public\_address and private\_address
* checking input parameter not None before accessing
* TOSCA: Add missing artifacts references
* Change name-value pairs to name-object pairs in the dictoinary
* validating reference properties in translate\_input.py
* Add support for properties\_def as a dictionary
* added \_validate\_capabilities\_properties function & UT
* Adding tosca.capabilities.Scalable in TOSCA\_definitions.yaml
* Apply TOSCA OS capability to compute node
* TOSCA: consider nodejs as web server only
* TOSCA: remove misleading key Entry-Definitions
* Use TOSCA properties from capabilities definition
* Remove Stackforge from README
* New custom type, unit test and template for use case
* Add TOSCA networking definiton
* Update TOSCA interfaces naming
* Separate TOSCA capabilities definition from assignment
* Remove unused TOSCA type variables
* TOSCA: Do not import individual exception classes
* Add missing TOSCA type keywords
* Update TOSCA compute requirement
* Validate TOSCA template version
* Update TOSCA version
* Add scalar unit type
* Handle TOSCA relationship with 'type' keyword
* Handle custom datatypes in current template
* Change definition for tosca.capabilities.Endpoint
* Remove Tosca.capabilities.feature per specs changes
* add blockstorage attachment notation
* Remove redundant TOSCA nodejs requirement
* Change TOSCA interfaces keyword 'input' to 'inputs'
* Add TOSCA service template for monitoring
* Minor tweaks
* Main translation code to handle parameters
* Add new support for get\_attribute
* Add support for datatypes
* Rename TOSCA node property relationship to relationships
* Add a debug env for tox
* Sort TOSCA relation output for a match to expected test result
* Create relationship between TOSCA nodes per updated specs
* Fix .gitreview after rename/transfer
* Fix errors in templates and base types
* Workflow documentation is now in infra-manual
* get\_attribute HOST keyword
* Handle get\_attribute in Tosca outputs
* Add support for list and map types
* Check for tosca keyword in the TOSCA type
* Create a TOSCA CSAR for Wordpress template
* Represent memory unit in string
* Remove extraneous vim editor configuration comments
* Provide implementation to parse monitoring template in TOSCA library
* Allow Tosca templates with no inputs/outputs
* Extended intrinsic functions support
* Remove README.md as duplicate for .rst one
* Work toward Python 3.4 support and testing
* Add missing TOSCA template keynames
* Update README and other doc files
* Clean up heat-translator documentation
* Revert use of olsosphinx library
* add docs job to tox.ini
* Check tosca node requirements
* Add Schema parent class for Property, Input, Output
* Implement TOSCA Block Storage
* Allow use of TOSCA types by short name in the TOSCA template
* Add type attributes
* Enhance the validation of tosca
* Enhanced tosca validation
* Added a module for intrinsic function
* Support importing TOSCA custom node types
* Update the Babel module version
* TOSCA generator top level code
* TOSCA generator translation for individual TOSCA type
* TOSCA generator template syntax
* Remove tosca node template inheritance from node type
* Add missing parameter for the tosca property
* TOSCA parser
* TOSCA definition types for TOSCA library
* Add .gitreview file and apply cookiecutter template
* Delete testattrs.pyc
* Delete test4.pyc
* Delete test3.pyc
* Delete test2.pyc
* Delete squaretest.pyc
* First code drop on data modeling
* Initial commit
