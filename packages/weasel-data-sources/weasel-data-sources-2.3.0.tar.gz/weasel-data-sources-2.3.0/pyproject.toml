[tool.poetry]
name = "weasel-data-sources"
version = "2.3.0"
description = "`weasel-data-sources` is a collection of data sources to retrieve information about software releases and vulnerabilities."
authors = ["Christopher Schmidt <schmidtc@cs.uni-bonn.de>", "Fabian Marquardt <marquard@cs.uni-bonn.de>"]

[tool.poetry.dependencies]
python = "^3.6"
requests = "^2.25.1"
GitPython = "^3.1.12"
svn = "^1.0.1"
ssdeep = "^3.4"

[tool.poetry.dev-dependencies]
pytest = "^6.2.1"
pylint = "^2.6.0"
rope = "^0.18.0"
pytest-cov = "^2.10.1"
black = "^20.8b1"
isort = "^5.7.0"
safety = "^1.10.2"
bandit = "^1.7.0"
requests = "^2.25.1"
poethepoet = "^0.9.0"
python-semantic-release = "^7.11.0"
sphinx = "^3.4.3"
sphinx-rtd-theme = "^0.5.1"
sphinx-autobuild = "^2020.9.1"
httmock = "^1.4.0"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poe.tasks]
test = "pytest --cov weasel_data_sources --cov-report term-missing"

lint_pylint = "pylint weasel_data_sources"
lint_black = "black weasel_data_sources --check"
lint_isort = "isort --profile black weasel_data_sources --check"
lint = ["lint_pylint", "lint_black", "lint_isort"]

format_isort = "isort --profile black weasel_data_sources"
format_black = "black weasel_data_sources"
format = ["format_isort", "format_black"]

safety_check_safety = "safety check --ignore=39462"
safety_check_bandit = "bandit -s B301,B303,B403 -r weasel_data_sources"
safety_check = ["safety_check_safety", "safety_check_bandit"]

docs = "sphinx-build docs docs/_build"
docs_autobuild = "sphinx-autobuild docs docs/_build"

[tool.semantic_release]
version_variable = [
    'weasel_data_sources/__init__.py:__version__',
    'pyproject.toml:version',
]
patch_without_tag = "true"
commit_parser = "semantic_release.history.emoji_parser"
build_command = "poetry build"
hvcs = "gitlab"

