Metadata-Version: 2.1
Name: zeit-online
Version: 1.0.0
Summary: A Python Wrapper for the Zeit Online Content API
Home-page: https://skriptum.github.io/zeit/
Author: Marten Walk
Author-email: kkx@protonmail.com
License: MIT
Project-URL: Bug Tracker, https://github.com/skriptum/zeit/issues
Project-URL: Documentation, https://github.com/skriptum/zeit/docs
Description: # Zeit Online API in Python
        
        A simple Python Wrapper for the [Zeit Online Content API](http://developer.zeit.de/index/), written in python by Marten Walk. Not official from Zeit Online ! It depends on *pandas* library and *requests* library.
        
        For an overview of the API, view the original [Docs](http://developer.zeit.de/docs/) or try them out in their [explorer](http://developer.zeit.de/explorer/).
        
        For all of this to work, you need an API-Key from their developer team, get one by writing a mail to [api@zeit.de](mailto:api@zeit.de). Be nice and state your intention.
        
        For the Docs to this package, visit [my Documentation](https://skriptum.github.io/zeit/)
        
        # Setup
        
        you can install the package with [pip](https://pypi.org/project/pip/) from PYPI, the python package Index.
        
        ```bash
        pip install zeit-online
        ```
        
        To import the package into your file just run this simple command
        
        ```python
        import zeit
        ```
        
        To get started with interacting with the API, you need to initiate a API-Instance and set your API-Key you got from the developers
        
        ```python
        api = zeit.API()
        api.set_token("API-KEY") #put your key in here
        ```
        
        
        
        # Examples
        
        Now you have many different methods at your hands to interact with the API. Look at the full documentation to see everything.
        
        A simple method is the get_status method to check the status of your connection
        
        ```python
        api.get_status() #returns "everything ok" if it works
        ```
        
        I would say the most important Method is the search_for method. With it, you can search all endpoints in the API for a specified string.
        
        ```python
        api.search_for("John Kennedy") # search the default content endpoint for "John Kennedy", returns a search class
        ```
        
        For more documentation, look at the docs and the example Notebook
        
        Â©made by Marten Walk
        
         
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
